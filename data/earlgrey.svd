<?xml version="1.0" ?>
<device xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.1" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
	<vendor>lowRISC</vendor>
	<name>earlgrey</name>
	<version>0.1</version>
	<description>Single core 3-stage pipeline RISC-V processor ...</description>
	<licenseText>Copyright lowRISC contributors.
                       Licensed under the Apache License, Version 2.0, see LICENSE for details.
                       SPDX-License-Identifier: Apache-2.0</licenseText>
	<cpu>
		<name>ibex</name>
		<revision>rev01</revision>
		<endian>little</endian>
		<mpuPresent>false</mpuPresent>
		<fpuPresent>false</fpuPresent>
		<vtorPresent>true</vtorPresent>
		<nvicPrioBits>2</nvicPrioBits>
		<vendorSystickConfig>false</vendorSystickConfig>
		<deviceNumInterrupts>2</deviceNumInterrupts>
	</cpu>
	<addressUnitBits>8</addressUnitBits>
	<width>32</width>
	<peripherals>
		<peripheral>
			<name>UART0</name>
			<version>1.1.0</version>
			<description>Full duplex serial communication interface, supports bit rates of up to 1 Mbit/s</description>
			<baseAddress>0x40000000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>UART0 IRQ</name>
				<value>1</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CTRL</name>
					<description>UART control register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>TX</name>
							<description>TX enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RX</name>
							<description>RX enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>NF</name>
							<description>RX noise filter enable.If the noise filter is enabled, RX line goes through the 3-taprepetition code. It ignores single IP clock period noise.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SLPBK</name>
							<description>System loopback enable.If this bit is turned on, any outgoing bits to TX are received through RX.See Block Diagram. Note that the TX line goes 1 if System loopback is enabled.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>LLPBK</name>
							<description>Line loopback enable.If this bit is turned on, incoming bits are forwarded to TX for testing purpose.See Block Diagram. Note that the internal design sees RX value as 1 always if lineloopback is enabled.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PARITY_EN</name>
							<description>If true, parity is enabled in both RX and TX directions.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PARITY_ODD</name>
							<description>If PARITY_EN is true, this determines the type, 1 for odd parity, 0 for even.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RXBLVL</name>
							<description>Trigger level for RX break detection. Sets the number of charactertimes the line must be low to detect a break.</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>NCO</name>
							<description>BAUD clock rate control.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>UART live status register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>TXFULL</name>
							<description>TX buffer is full</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXFULL</name>
							<description>RX buffer is full</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXEMPTY</name>
							<description>TX FIFO is empty</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXIDLE</name>
							<description>TX FIFO is empty and all bits have been transmitted</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXIDLE</name>
							<description>RX is idle</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXEMPTY</name>
							<description>RX FIFO is empty</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RDATA</name>
					<description>UART read data</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WDATA</name>
					<description>UART write data</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[7:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FIFO_CTRL</name>
					<description>UART FIFO control register</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>RXRST</name>
							<description>RX fifo reset. Write 1 to the register resets RX_FIFO. Read returns 0</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>TXRST</name>
							<description>TX fifo reset. Write 1 to the register resets TX_FIFO. Read returns 0</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RXILVL</name>
							<description>Trigger level for RX interrupts. If the FIFO depth is greater than or equal tothe setting, it raises rx_watermark interrupt.</description>
							<bitRange>[4:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>TXILVL</name>
							<description>Trigger level for TX interrupts. If the FIFO depth is less than the setting, itraises tx_watermark interrupt.</description>
							<bitRange>[7:5]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FIFO_STATUS</name>
					<description>UART FIFO status register</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>TXLVL</name>
							<description>Current fill level of TX fifo</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXLVL</name>
							<description>Current fill level of RX fifo</description>
							<bitRange>[23:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OVRD</name>
					<description>TX pin override control. Gives direct SW control over TX pin state</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>TXEN</name>
							<description>Enable TX pin override control</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>TXVAL</name>
							<description>Write to set the value of the TX pin</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>VAL</name>
					<description>UART oversampled values</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>RX</name>
							<description>Last 16 oversampled values of RX. Most recent bit is bit 0, oldest 15.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TIMEOUT_CTRL</name>
					<description>UART RX timeout control</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>RX timeout value in UART bit times</description>
							<bitRange>[23:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable RX timeout feature</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="UART0">
			<name>UART1</name>
			<version>1.1.0</version>
			<description>Full duplex serial communication interface, supports bit rates of up to 1 Mbit/s</description>
			<baseAddress>0x40010000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>UART1 IRQ</name>
				<value>2</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="UART0">
			<name>UART2</name>
			<version>1.1.0</version>
			<description>Full duplex serial communication interface, supports bit rates of up to 1 Mbit/s</description>
			<baseAddress>0x40020000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>UART2 IRQ</name>
				<value>3</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="UART0">
			<name>UART3</name>
			<version>1.1.0</version>
			<description>Full duplex serial communication interface, supports bit rates of up to 1 Mbit/s</description>
			<baseAddress>0x40030000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>UART3 IRQ</name>
				<value>4</value>
			</interrupt>
		</peripheral>
		<peripheral>
			<name>GPIO</name>
			<version>1.1.0</version>
			<description>General-purpose I/O pin control interface for software</description>
			<baseAddress>0x40040000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>GPIO IRQ</name>
				<value>5</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>DATA_IN</name>
					<description>GPIO Input data read value</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIRECT_OUT</name>
					<description>GPIO direct output data write value</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MASKED_OUT_LOWER</name>
					<description>GPIO write data lower with mask.Masked write for DATA_OUT[15:0].Upper 16 bits of this register are used as mask. Writinglower 16 bits of the register changes DATA_OUT[15:0] valueif mask bits are set.Read-back of this register returns upper 16 bits as zeroand lower 16 bits as DATA_OUT[15:0].</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>data</name>
							<description>Write data value[15:0].Value to write into DATA_OUT[i], valid in the presence of mask[i]==1</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mask</name>
							<description>Write data mask[15:0].A value of 1 in mask[i] allows the updating of DATA_OUT[i], 0 &lt;= i &lt;= 15</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MASKED_OUT_UPPER</name>
					<description>GPIO write data upper with mask.Masked write for DATA_OUT[31:16].Upper 16 bits of this register are used as mask. Writinglower 16 bits of the register changes DATA_OUT[31:16] valueif mask bits are set.Read-back of this register returns upper 16 bits as zeroand lower 16 bits as DATA_OUT[31:16].</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>data</name>
							<description>Write data value[31:16]. Value to write into DATA_OUT[i], valid in the presence of mask[i]==1</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mask</name>
							<description>Write data mask[31:16].A value of 1 in mask[i] allows the updating of DATA_OUT[i], 16 &lt;= i &lt;= 31</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIRECT_OE</name>
					<description>GPIO Output Enable.Setting direct_oe[i] to 1 enables output mode for GPIO[i]</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MASKED_OE_LOWER</name>
					<description>GPIO write Output Enable lower with mask.Masked write for DATA_OE[15:0], the register that controlsoutput mode for GPIO pins [15:0].Upper 16 bits of this register are used as mask. Writinglower 16 bits of the register changes DATA_OE[15:0] valueif mask bits are set.Read-back of this register returns upper 16 bits as zeroand lower 16 bits as DATA_OE[15:0].</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>data</name>
							<description>Write OE value[15:0].Value to write into DATA_OE[i], valid in the presence of mask[i]==1</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mask</name>
							<description>Write OE mask[15:0].A value of 1 in mask[i] allows the updating of DATA_OE[i], 0 &lt;= i &lt;= 15</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MASKED_OE_UPPER</name>
					<description>GPIO write Output Enable upper with mask.Masked write for DATA_OE[31:16], the register that controlsoutput mode for GPIO pins [31:16].Upper 16 bits of this register are used as mask. Writinglower 16 bits of the register changes DATA_OE[31:16] valueif mask bits are set.Read-back of this register returns upper 16 bits as zeroand lower 16 bits as DATA_OE[31:16].</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>data</name>
							<description>Write OE value[31:16].Value to write into DATA_OE[i], valid in the presence of mask[i]==1</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mask</name>
							<description>Write OE mask[31:16].A value of 1 in mask[i] allows the updating of DATA_OE[i], 16 &lt;= i &lt;= 31</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTR_CTRL_EN_RISING</name>
					<description>GPIO interrupt enable for GPIO, rising edge.If !!INTR_ENABLE[i] is true, a value of 1 on !!INTR_CTRL_EN_RISING[i]enables rising-edge interrupt detection on GPIO[i].</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTR_CTRL_EN_FALLING</name>
					<description>GPIO interrupt enable for GPIO, falling edge.If !!INTR_ENABLE[i] is true, a value of 1 on !!INTR_CTRL_EN_FALLING[i]enables falling-edge interrupt detection on GPIO[i].</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTR_CTRL_EN_LVLHIGH</name>
					<description>GPIO interrupt enable for GPIO, level high.If !!INTR_ENABLE[i] is true, a value of 1 on !!INTR_CTRL_EN_LVLHIGH[i]enables level high interrupt detection on GPIO[i].</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTR_CTRL_EN_LVLLOW</name>
					<description>GPIO interrupt enable for GPIO, level low.If !!INTR_ENABLE[i] is true, a value of 1 on !!INTR_CTRL_EN_LVLLOW[i]enables level low interrupt detection on GPIO[i].</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL_EN_INPUT_FILTER</name>
					<description>filter enable for GPIO input bits.If !!CTRL_EN_INPUT_FILTER[i] is true, a value of input bit [i]must be stable for 16 cycles before transitioning.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>SPI_DEVICE</name>
			<version>1.0.0</version>
			<description>Serial peripheral interface supporting different device modes, suitable for bulk-load of data into and out of the chip</description>
			<baseAddress>0x40050000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>SPI_DEVICE IRQ</name>
				<value>6</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CONTROL</name>
					<description>Control register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>ABORT</name>
							<description>Abort pending TX data in Generic mode.If TX_FIFO (Asynchronous) is full, the TXF waits indefinitely topush the next byte into the asynchronous FIFO. SW may reset theAsync FIFO along with aborting the current task. SW should updatethe write pointer of the TXF in order not to push the byte toAsynchronous FIFO again by TXF logic.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MODE</name>
							<description>SPI Device operation mode. Currently only FwMode is supported.</description>
							<bitRange>[5:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rst_txfifo</name>
							<description>Reset Async TX_FIFO.This only resets asynchronous fifo. If firmware wants to reset SRAMFIFO, it should write 0 into read/write pointers._Note_: This value should be controlled only when SPI interface isin Idle state as this reset signal doesn't have reset synchronizer.</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rst_rxfifo</name>
							<description>Reset Async RX_FIFO.This only resets asynchronous fifo. If firmware wants to reset SRAMFIFO, it should write 0 into read pointer and write pointer._Note_: This value should be controlled only when SPI interface isin Idle state as this reset signal doesn't have reset synchronizer.</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sram_clk_en</name>
							<description>SRAM Clock Enable.This controls the clock gating cell lying on DP SRAM clock. As thenature of absent of SPI_CLK in idle state, the clock mux for SRAMB port cannot be glitch-free MUX. So, it is up to SW to change theclock safely.Programming sequence:1. Check if SPI line is idle2. Clear sram_clk_en to 0.3. Change mode to FwMode for peri clk, FlashMode or PassThrough for SPI_CLK.4. Set sram_clk_en to 1.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CFG</name>
					<description>Configuration Register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>CPOL</name>
							<description>Clock polarity. 0 for normal SPI, 1 for negative edge latch</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CPHA</name>
							<description>Data phase. 0 for negative edge change, 1 for positive edge change</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>tx_order</name>
							<description>TX bit order on SDO. 0 for MSB to LSB, 1 for LSB to MSB</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rx_order</name>
							<description>RX bit order on SDI. Module stores bitstream from MSB to LSB if value is 0.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>timer_v</name>
							<description>number of clocks for RXF to wait.To reduce traffic to SRAM, RXF control module waits given clock cycleif it doesn't fill SRAM data width even if Async RX FIFO is empty.</description>
							<bitRange>[15:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_4b_en</name>
							<description>4B Address Mode enable.This field configures the internal module to receive 32 bits of theSPI commands. The affected commands are the SPI read commandsexcept QPI, and program commands. It is expected for SW toconfigure this field at the configuration stage and leave theupdation to HW until next reset.Even though Read SFDP command has address fields, the SFDP commandis not affected by this field. The command always parse 24 bits onthe SPI line 0 following the SPI command as the address field.</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mailbox_en</name>
							<description>Mailbox enable.If 1, in the flash and passthrough mode, the IP checks the incomingaddress and return from the internal Mailbox buffer if the addressfalls into the MAILBOX range(MAILBOX_ADDR:MAILBOX_ADDR+MAILBOX_SIZE)}.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FIFO_LEVEL</name>
					<description>RX/ TX FIFO levels.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>rxlvl</name>
							<description>RX FIFO level.If RX SRAM FIFO level exceeds this value, it triggers interrupt.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>txlvl</name>
							<description>TX FIFO level.If TX SRAM FIFO level drops below this value, it triggers interrupt.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ASYNC_FIFO_LEVEL</name>
					<description>RX/ TX Async FIFO levels between main clk and spi clock</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>txlvl</name>
							<description>TX Async FIFO level.This value shows the number of available entry in TX Async FIFO.If the software writes message into SRAM FIFO and update FIFO write pointerbut no clock from the host is given, the data stuck at this async fifo waitinghost toggles SCK. This value represents the number of bytes.</description>
							<bitRange>[23:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>rxlvl</name>
							<description>RX Async FIFO level.This value shows the number of available entry in RX Async FIFO.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>SPI Device status register</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>rxf_full</name>
							<description>RX FIFO full</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>rxf_empty</name>
							<description>RX FIFO empty</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>txf_full</name>
							<description>TX FIFO full</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>txf_empty</name>
							<description>TX FIFO empty</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>abort_done</name>
							<description>Abort process is completed.Current version does not implement abort_done logic. It is tied to1 always.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>csb</name>
							<description>Direct input of CSb signal</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>tpm_csb</name>
							<description>Direct input of TPM CSb</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RXF_PTR</name>
					<description>Receiver FIFO (SRAM) pointers</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>RPTR</name>
							<description>Read pointer. bit x is for phase bit. check circular fifo description</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>WPTR</name>
							<description>Write pointer. Bit x is phase bit.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TXF_PTR</name>
					<description>Transmitter FIFO (SRAM) pointers</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>RPTR</name>
							<description>Read pointer. bit x is for phase bit. check circular fifo description</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>WPTR</name>
							<description>Write pointer. Bit x is phase bit.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RXF_ADDR</name>
					<description>Receiver FIFO (SRAM) Addresses</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>base</name>
							<description>Base offset in bytes in the SRAM. Lower 2 bits are ignored.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>limit</name>
							<description>Limit offset in bytes in the SRAM. Lower 2 bits are ignored.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TXF_ADDR</name>
					<description>Transmitter FIFO (SRAM) Addresses</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>base</name>
							<description>Base offset in bytes in the SRAM. Lower 2 bits are ignored.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>limit</name>
							<description>Limit offset in bytes in the SRAM. Lower 2 bits are ignored.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTERCEPT_EN</name>
					<description>Intercept Passthrough datapath.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>status</name>
							<description>If set, Read Status is processed internally.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>jedec</name>
							<description>If set, Read JEDEC ID is processed internally.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sfdp</name>
							<description>If set, Read SFDP is processed internally.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbx</name>
							<description>If set, Read Command to Mailbox region is processed internally.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LAST_READ_ADDR</name>
					<description>Last Read AddressThis register shows the last address accessed by the host system.It is updated by the HW when CSb is de-asserted.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>addr</name>
							<description>Last address</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLASH_STATUS</name>
					<description>SPI Flash Status register.This register emulates the SPI Flash Status 3, 2, 1 registers.bit [7:0] is for Status register, bit [15:8] is for Status-2 register,and bit [23:16] is for Status-3 register. It is SW responsibility tomaintain this register value up to date.The HW latches the value when SPI Flash transaction begins. Any updatesduring the transaction will be updated after the transaction iscompleted.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>busy</name>
							<description>BUSY signal is cleared when CSb is high. SW should readback the register to confirm the value is cleared.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>status</name>
							<description>Rest of the status register.Fields other than the bit 0 (BUSY) and bit 1 (WEL) fields areSW-maintained fields. HW just reads and returns to the host system.Bit 1 (WEL) is a SW modifiable and HW modifiable field. HW updatesthe WEL field when `WRDI` or `WREN` command is received.- [ 1]\: WEL- [ 2]\: BP0- [ 3]\: BP1- [ 4]\: BP2- [ 5]\: TB- [ 6]\: SEC- [ 7]\: SRP0- [ 8]\: SRP1- [ 9]\: QE- [11]\: LB1- [12]\: LB2- [13]\: LB3- [14]\: CMP- [15]\: SUS- [18]\: WPS- [21]\: DRV0- [22]\: DRV1- [23]\: HOLD /RST</description>
							<bitRange>[23:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>JEDEC_CC</name>
					<description>JEDEC Continuation Code configuration register.Read JEDEC ID must return the continuation code if the manufacturer IDis not shown in the first page of JEDEC table. This register controlsthe Continuation Code.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>num_cc</name>
							<description>The number that Continuation Code repeats</description>
							<bitRange>[15:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cc</name>
							<description>Continuation Code byte</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>JEDEC_ID</name>
					<description>JEDEC ID register.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>mf</name>
							<description>Manufacturer ID</description>
							<bitRange>[23:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>id</name>
							<description>Device ID</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>READ_THRESHOLD</name>
					<description>Read Buffer threshold register.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>threshold</name>
							<description>If 0, disable the watermark. If non-zero, when the hostaccess above or equal to the threshold, it reports an interrupt.The value is byte-granularity not SRAM index.</description>
							<bitRange>[9:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAILBOX_ADDR</name>
					<description>Mailbox Base address register.The mailbox size is fixed. In this version of IP, the size is 1kB.Lower 10 bits of the Mailbox address is tied to 0.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>addr</name>
							<description>Mailbox Address. Lower 10 bits are ignored</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>UPLOAD_STATUS</name>
					<description>Upload module status register.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>cmdfifo_depth</name>
							<description>Command FIFO Entry</description>
							<bitRange>[4:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>cmdfifo_notempty</name>
							<description>Upload Command FIFO Not Empty</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>addrfifo_depth</name>
							<description>Address FIFO Entry</description>
							<bitRange>[12:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>addrfifo_notempty</name>
							<description>Upload Address FIFO Not Empty</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>UPLOAD_STATUS2</name>
					<description>Upload module status 2 register.This register contains payload related status. payload_depth indicatesthe payload size (from 0 to 256 bytes).payload_start_idx indicates the start of the 256B. This stays 0usually. However, when the SPI host system issues more than 256B ofpayload in a command, this field may not be 0. For example, if thesystem issues 258B payload, the payload_depth is 256 (as the IP onlyholds 256B of payload), the payload_start_idx is 2. SW should read from2 to 255 then 0 and 1.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>payload_depth</name>
							<description>Payload buffer depth</description>
							<bitRange>[8:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>payload_start_idx</name>
							<description>Payload Start Index</description>
							<bitRange>[23:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>UPLOAD_CMDFIFO</name>
					<description>Command Fifo Read Port.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>data</name>
							<description>read data</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>UPLOAD_ADDRFIFO</name>
					<description>Address Fifo Read Port.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>data</name>
							<description>read data</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_FILTER_0</name>
					<description>Command FilterIf a bit in this CSR is 1, then corresponding SPI command w.r.t thebit position among 256 bit is dropped in SPI Passthrough mode.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>filter_0</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_1</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_2</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_3</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_4</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_5</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_6</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_7</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_8</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_9</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_10</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_11</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_12</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_13</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_14</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_15</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_16</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_17</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_18</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_19</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_20</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_21</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_22</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_23</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_24</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_25</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_26</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_27</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_28</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_29</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_30</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_31</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_FILTER_1</name>
					<description>Command FilterIf a bit in this CSR is 1, then corresponding SPI command w.r.t thebit position among 256 bit is dropped in SPI Passthrough mode.</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>filter_32</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_33</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_34</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_35</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_36</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_37</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_38</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_39</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_40</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_41</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_42</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_43</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_44</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_45</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_46</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_47</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_48</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_49</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_50</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_51</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_52</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_53</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_54</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_55</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_56</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_57</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_58</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_59</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_60</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_61</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_62</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_63</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_FILTER_2</name>
					<description>Command FilterIf a bit in this CSR is 1, then corresponding SPI command w.r.t thebit position among 256 bit is dropped in SPI Passthrough mode.</description>
					<addressOffset>0x190</addressOffset>
					<fields>
						<field>
							<name>filter_64</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_65</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_66</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_67</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_68</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_69</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_70</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_71</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_72</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_73</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_74</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_75</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_76</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_77</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_78</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_79</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_80</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_81</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_82</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_83</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_84</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_85</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_86</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_87</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_88</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_89</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_90</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_91</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_92</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_93</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_94</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_95</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_FILTER_3</name>
					<description>Command FilterIf a bit in this CSR is 1, then corresponding SPI command w.r.t thebit position among 256 bit is dropped in SPI Passthrough mode.</description>
					<addressOffset>0x210</addressOffset>
					<fields>
						<field>
							<name>filter_96</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_97</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_98</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_99</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_100</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_101</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_102</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_103</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_104</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_105</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_106</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_107</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_108</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_109</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_110</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_111</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_112</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_113</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_114</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_115</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_116</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_117</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_118</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_119</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_120</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_121</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_122</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_123</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_124</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_125</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_126</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_127</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_FILTER_4</name>
					<description>Command FilterIf a bit in this CSR is 1, then corresponding SPI command w.r.t thebit position among 256 bit is dropped in SPI Passthrough mode.</description>
					<addressOffset>0x290</addressOffset>
					<fields>
						<field>
							<name>filter_128</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_129</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_130</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_131</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_132</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_133</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_134</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_135</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_136</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_137</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_138</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_139</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_140</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_141</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_142</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_143</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_144</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_145</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_146</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_147</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_148</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_149</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_150</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_151</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_152</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_153</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_154</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_155</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_156</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_157</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_158</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_159</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_FILTER_5</name>
					<description>Command FilterIf a bit in this CSR is 1, then corresponding SPI command w.r.t thebit position among 256 bit is dropped in SPI Passthrough mode.</description>
					<addressOffset>0x310</addressOffset>
					<fields>
						<field>
							<name>filter_160</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_161</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_162</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_163</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_164</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_165</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_166</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_167</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_168</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_169</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_170</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_171</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_172</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_173</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_174</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_175</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_176</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_177</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_178</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_179</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_180</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_181</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_182</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_183</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_184</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_185</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_186</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_187</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_188</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_189</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_190</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_191</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_FILTER_6</name>
					<description>Command FilterIf a bit in this CSR is 1, then corresponding SPI command w.r.t thebit position among 256 bit is dropped in SPI Passthrough mode.</description>
					<addressOffset>0x390</addressOffset>
					<fields>
						<field>
							<name>filter_192</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_193</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_194</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_195</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_196</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_197</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_198</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_199</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_200</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_201</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_202</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_203</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_204</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_205</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_206</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_207</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_208</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_209</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_210</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_211</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_212</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_213</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_214</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_215</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_216</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_217</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_218</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_219</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_220</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_221</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_222</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_223</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_FILTER_7</name>
					<description>Command FilterIf a bit in this CSR is 1, then corresponding SPI command w.r.t thebit position among 256 bit is dropped in SPI Passthrough mode.</description>
					<addressOffset>0x410</addressOffset>
					<fields>
						<field>
							<name>filter_224</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_225</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_226</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_227</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_228</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_229</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_230</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_231</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_232</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_233</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_234</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_235</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_236</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_237</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_238</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_239</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_240</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_241</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_242</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_243</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_244</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_245</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_246</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_247</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_248</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_249</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_250</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_251</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_252</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_253</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_254</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>filter_255</name>
							<description>If 1, command will be filtered</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ADDR_SWAP_MASK</name>
					<description>Address Swap Mask register.This register is used in the SPI passthrough mode. If any of bits inthis register is set, the corresponding address bit in the SPI Readcommands is replaced with the data from !!ADDR_SWAP_DATA.If 3B address mode is active, upper 8bit [31:24] is ignored.</description>
					<addressOffset>0x490</addressOffset>
					<fields>
						<field>
							<name>mask</name>
							<description>When a bit is 1, the SPI read address to the downstream SPIFlash device is swapped to !!ADDR_SWAP_DATA.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ADDR_SWAP_DATA</name>
					<description>The address value for the address swap feature.</description>
					<addressOffset>0x494</addressOffset>
					<fields>
						<field>
							<name>data</name>
							<description>Desired value to be swapped for the SPI read commands.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PAYLOAD_SWAP_MASK</name>
					<description>Write Data Swap in the passthrough mode.PAYLOAD_SWAP_MASK CSR provides the SW to change certain bits in thefirst 4 bytes of the write payload in the passthrough mode.</description>
					<addressOffset>0x498</addressOffset>
					<fields>
						<field>
							<name>mask</name>
							<description>byte mask</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PAYLOAD_SWAP_DATA</name>
					<description>Write Data Swap in the passthrough mode.PAYLOAD_SWAP_DATA combined with PAYLOAD_SWAP_MASK provides the SW tochange certain bits in the first 4 bytes of the write payload in thepassthrough mode.The register should be written in Little-Endian order. [7:0] bits areprocessed in the first received payload byte. [31:24] bits for the 4thbyte.</description>
					<addressOffset>0x49c</addressOffset>
					<fields>
						<field>
							<name>data</name>
							<description>replaced data</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_0</name>
					<description>Command Info register.</description>
					<addressOffset>0x4a0</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_1</name>
					<description>Command Info register.</description>
					<addressOffset>0x4a4</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_2</name>
					<description>Command Info register.</description>
					<addressOffset>0x4a8</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_3</name>
					<description>Command Info register.</description>
					<addressOffset>0x4ac</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_4</name>
					<description>Command Info register.</description>
					<addressOffset>0x4b0</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_5</name>
					<description>Command Info register.</description>
					<addressOffset>0x4b4</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_6</name>
					<description>Command Info register.</description>
					<addressOffset>0x4b8</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_7</name>
					<description>Command Info register.</description>
					<addressOffset>0x4bc</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_8</name>
					<description>Command Info register.</description>
					<addressOffset>0x4c0</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_9</name>
					<description>Command Info register.</description>
					<addressOffset>0x4c4</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_10</name>
					<description>Command Info register.</description>
					<addressOffset>0x4c8</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_11</name>
					<description>Command Info register.</description>
					<addressOffset>0x4cc</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_12</name>
					<description>Command Info register.</description>
					<addressOffset>0x4d0</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_13</name>
					<description>Command Info register.</description>
					<addressOffset>0x4d4</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_14</name>
					<description>Command Info register.</description>
					<addressOffset>0x4d8</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_15</name>
					<description>Command Info register.</description>
					<addressOffset>0x4dc</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_16</name>
					<description>Command Info register.</description>
					<addressOffset>0x4e0</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_17</name>
					<description>Command Info register.</description>
					<addressOffset>0x4e4</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_18</name>
					<description>Command Info register.</description>
					<addressOffset>0x4e8</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_19</name>
					<description>Command Info register.</description>
					<addressOffset>0x4ec</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_20</name>
					<description>Command Info register.</description>
					<addressOffset>0x4f0</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_21</name>
					<description>Command Info register.</description>
					<addressOffset>0x4f4</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_22</name>
					<description>Command Info register.</description>
					<addressOffset>0x4f8</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_23</name>
					<description>Command Info register.</description>
					<addressOffset>0x4fc</addressOffset>
					<fields>
						<field>
							<name>opcode</name>
							<description>Command Opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_mode</name>
							<description>Command address modeA command can have four modes:- 0: Command does not have an address field- 1: CFG.addr_4b_en decides the address size (3B/4B)- 2: Address size is always 3B regardless of CFG.addr_4b_en- 3: Address size is always 4B regardless of CFG.addr_4b_en</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>addr_swap_en</name>
							<description>This field is used in the passthrough logic.If this field is set to 1, the address in the passthrough commandis replaced to the preconfigured value.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mbyte_en</name>
							<description>If 1, the command has a MByte field following theaddress field. This is set to 1 for DualIO, QuadIO commands.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_size</name>
							<description>The number of dummy cycles -1 for the command</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dummy_en</name>
							<description>Set to 1 if the command has a dummy cycle following the address field.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_en</name>
							<description>Payload Enable per SPI lane.Set to non-zero if the command has payload at the end of theprotocol. This field has four bits. Each bit represents the SPIline. If a command is a Single IO command and returns data to thehost system, the data is returned on the MISO line (IO[1]). Inthis case, SW sets payload_en to 4'b 0010.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_dir</name>
							<description>Set to 1 if the command returns data. If 0, the payloadsends to the downstream Flash device.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>payload_swap_en</name>
							<description>Swap the first byte of the write payload.If `payload_swap_en` is set, the passthrough logic swaps the first byte of the write payload with DATA_SWAP CSR.`payload_swap_en` only works with write data and SingleIO mode. `payload_en` must be 4'b 0001 and `paylod_dir` to be PayloadIn.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>upload</name>
							<description>Set to 1 to upload the command.If upload field in the command info entry is set, the cmdparseactivates the upload submodule when the opcode is received.`addr_en`, `addr_4B_affected`, and `addr_4b_forced` (TBD) affectthe upload functionality. The three address related configsdefines the command address field size.The logic assumes the following SPI input stream as payload,which max size is 256B. If the command exceeds the maximumpayload size 256B, the logic wraps the payload and overwrites.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>busy</name>
							<description>Set to 1 to set the BUSY bit in the FLASH_STATUS when thecommand is received. This bit is active only when `upload` bit isset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>valid</name>
							<description>Set to 1 if the config in the register is valid</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_EN4B</name>
					<description>Opcode for EN4B.If the register is active, it affects in flash / passthrough modes.</description>
					<addressOffset>0x500</addressOffset>
					<fields>
						<field>
							<name>valid</name>
							<description>If 1, Opcode affects</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>opcode</name>
							<description>EN4B opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_EX4B</name>
					<description>Opcode for EX4B</description>
					<addressOffset>0x504</addressOffset>
					<fields>
						<field>
							<name>valid</name>
							<description>If 1, Opcode affects</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>opcode</name>
							<description>EX4B opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_WREN</name>
					<description>Opcode for Write Enable (WREN)</description>
					<addressOffset>0x508</addressOffset>
					<fields>
						<field>
							<name>valid</name>
							<description>If 1, opcode affects</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>opcode</name>
							<description>WREN opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_INFO_WRDI</name>
					<description>Opcode for Write Disable (WRDI)</description>
					<addressOffset>0x50c</addressOffset>
					<fields>
						<field>
							<name>valid</name>
							<description>If 1, opcode affects</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>opcode</name>
							<description>WRDI opcode</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_CAP</name>
					<description>TPM HWIP Capability register.This register shows the features the current TPM HWIP supports.</description>
					<addressOffset>0x800</addressOffset>
					<fields>
						<field>
							<name>rev</name>
							<description>Revision of the TPM submodule</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>locality</name>
							<description>If 1, the TPM submodule supports 5 Locality.If 0, only one Locality is provided</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>max_wr_size</name>
							<description>The maximum write size in bytes the TPM submodule supports.The value is the exponent of the 2.- 3'b 010: Support up to 4B- 3'b 011: Support up to 8B- 3'b 100: Support up to 16B- 3'b 101: Support up to 32B- 3'b 110: Support up to 64BAll other values are reserved.It is not recommended for SW to advertise TPM supporting more than `max_wr_size` to the South Bridge.</description>
							<bitRange>[18:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>max_rd_size</name>
							<description>The maximum read size in bytes the TPM submodule supports.The value is the exponent of the 2.- 3'b 010: Support up to 4B- 3'b 011: Support up to 8B- 3'b 100: Support up to 16B- 3'b 101: Support up to 32B- 3'b 110: Support up to 64BAll other values are reserved.It is not recommended for SW to advertise TPM supporting more than `max_rd_size` to the South Bridge.</description>
							<bitRange>[22:20]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_CFG</name>
					<description>TPM Configuration register.</description>
					<addressOffset>0x804</addressOffset>
					<fields>
						<field>
							<name>en</name>
							<description>If 1, TPM submodule accepts the transactions over SPI</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>tpm_mode</name>
							<description>Configure the TPM mode. 1 for CRB, 0 for FIFO.If the SW set this field to 1, the HW logic always pushes thecommand/addr and write data to buffers. The logic does not comparethe incoming address to the list of managed-by-HW registeraddresses.The invalid locality check still runs based on the invalid_localityconfiguration.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>hw_reg_dis</name>
							<description>If 0, TPM submodule directly returns the return-by-HW registers for the read requests.If 1, TPM submodule uploads the TPM command regardless of the address, and the SW may return the value through the read FIFO.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>tpm_reg_chk_dis</name>
							<description>If 1, the logic does not compare the upper 8 bit of thereceived address with the TpmAddr constant, D4h.If this field is 0, the HW uploads the command, address, and writepayload to the buffers in case of address that is not 0xD4_XXXX.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>invalid_locality</name>
							<description>If 1, TPM submodule returns the invalid data (0xFF) for theout of the max Locality request.If it is a write request, HW still uploads the command and address.SW needs to process the incoming invalid command.If 0, TPM submodule uploads the TPM command and address. The SW maywrite 0xFF to the read FIFO.Note: The TPM submodule uploads the TPM commands that do not fallinto the FIFO registers (0xD4_XXXX) regardless of`invalid_locality` bit.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_STATUS</name>
					<description>TPM submodule state register.The TPM_STATUS CSR provides the current TPM status, mostly the buffer and FIFO status.</description>
					<addressOffset>0x808</addressOffset>
					<fields>
						<field>
							<name>cmdaddr_notempty</name>
							<description>If 1, the TPM_CMD_ADDR has a valid data. This status is reported via the interrupt also.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>wrfifo_depth</name>
							<description>This field represents the current write FIFO depth.</description>
							<bitRange>[22:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_ACCESS_0</name>
					<description>TPM_ACCESS_x register.</description>
					<addressOffset>0x80c</addressOffset>
					<fields>
						<field>
							<name>access_0</name>
							<description>TPM_ACCESS</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>access_1</name>
							<description>TPM_ACCESS</description>
							<bitRange>[15:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>access_2</name>
							<description>TPM_ACCESS</description>
							<bitRange>[23:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>access_3</name>
							<description>TPM_ACCESS</description>
							<bitRange>[31:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_ACCESS_1</name>
					<description>TPM_ACCESS_x register.</description>
					<addressOffset>0x81c</addressOffset>
					<fields>
						<field>
							<name>access_4</name>
							<description>TPM_ACCESS</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_STS</name>
					<description>TPM_STS_x register.The register is mirrored to all Localities.The value is returned to the host system only when the activeLocalityin the TPM_ACCESS_x is matched to the current received Locality.</description>
					<addressOffset>0x820</addressOffset>
					<fields>
						<field>
							<name>sts</name>
							<description>TPM_STS_x</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_INTF_CAPABILITY</name>
					<description>TPM_INTF_CAPABILITY</description>
					<addressOffset>0x824</addressOffset>
					<fields>
						<field>
							<name>intf_capability</name>
							<description>TPM_INTF_CAPABILITY</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_INT_ENABLE</name>
					<description>TPM_INT_ENABLE</description>
					<addressOffset>0x828</addressOffset>
					<fields>
						<field>
							<name>int_enable</name>
							<description>TPM_INT_ENABLE</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_INT_VECTOR</name>
					<description>TPM_INT_VECTOR</description>
					<addressOffset>0x82c</addressOffset>
					<fields>
						<field>
							<name>int_vector</name>
							<description>TPM_INT_VECTOR</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_INT_STATUS</name>
					<description>TPM_INT_STATUS</description>
					<addressOffset>0x830</addressOffset>
					<fields>
						<field>
							<name>int_status</name>
							<description>TPM_INT_STATUS</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_DID_VID</name>
					<description>TPM_DID/ TPM_VID register</description>
					<addressOffset>0x834</addressOffset>
					<fields>
						<field>
							<name>vid</name>
							<description>TPM_VID</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>did</name>
							<description>TPM_DID</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_RID</name>
					<description>TPM_RID</description>
					<addressOffset>0x838</addressOffset>
					<fields>
						<field>
							<name>rid</name>
							<description>TPM_RID</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_CMD_ADDR</name>
					<description>TPM Command and Address bufferThe SW may get the received TPM command and address by readin gthis CSR.</description>
					<addressOffset>0x83c</addressOffset>
					<fields>
						<field>
							<name>addr</name>
							<description>received address</description>
							<bitRange>[23:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>cmd</name>
							<description>received command</description>
							<bitRange>[31:24]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_READ_FIFO</name>
					<description>TPM Read command return data FIFO.The write port of the read command FIFO.</description>
					<addressOffset>0x840</addressOffset>
					<fields>
						<field>
							<name>value</name>
							<description>write port of the read FIFO</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TPM_WRITE_FIFO</name>
					<description>TPM Write command received data FIFO.</description>
					<addressOffset>0x844</addressOffset>
					<fields>
						<field>
							<name>value</name>
							<description>Read only port of the write FIFO</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>I2C0</name>
			<version>1.0.0</version>
			<description>I2C interface for host and device mode, supporting up to 1 Mbaud data rates</description>
			<baseAddress>0x40080000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>I2C0 IRQ</name>
				<value>7</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CTRL</name>
					<description>I2C Control Register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>ENABLEHOST</name>
							<description>Enable Host I2C functionality</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ENABLETARGET</name>
							<description>Enable Target I2C functionality</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>LLPBK</name>
							<description>Enable I2C line loopback testIf line loopback is enabled, the internal design sees ACQ and RX data as &quot;1&quot;</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>I2C Live Status Register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>FMTFULL</name>
							<description>FMT FIFO is full</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXFULL</name>
							<description>RX FIFO is full</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FMTEMPTY</name>
							<description>FMT FIFO is empty</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXEMPTY</name>
							<description>RX FIFO is empty</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>HOSTIDLE</name>
							<description>Host functionality is idle. No Host transaction is in progress</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TARGETIDLE</name>
							<description>Target functionality is idle. No Target transaction is in progress</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXFULL</name>
							<description>TX FIFO is full</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ACQFULL</name>
							<description>ACQ FIFO is full</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXEMPTY</name>
							<description>TX FIFO is empty</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ACQEMPTY</name>
							<description>ACQ FIFO is empty</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RDATA</name>
					<description>I2C Read Data</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FDATA</name>
					<description>I2C Format Data</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>FBYTE</name>
							<description>Format Byte. Directly transmitted if no flags are set.</description>
							<bitRange>[7:0]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>START</name>
							<description>Issue a START condition before transmitting BYTE.</description>
							<bitRange>[8:8]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>STOP</name>
							<description>Issue a STOP condition after this operation</description>
							<bitRange>[9:9]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>READ</name>
							<description>Read BYTE bytes from I2C. (256 if BYTE==0)</description>
							<bitRange>[10:10]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>RCONT</name>
							<description>Do not NACK the last byte read, let the read operation continue</description>
							<bitRange>[11:11]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>NAKOK</name>
							<description>Do not signal an exception if the current byte is not ACK'd</description>
							<bitRange>[12:12]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FIFO_CTRL</name>
					<description>I2C FIFO control register</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>RXRST</name>
							<description>RX fifo reset. Write 1 to the register resets RX_FIFO. Read returns 0</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FMTRST</name>
							<description>FMT fifo reset. Write 1 to the register resets FMT_FIFO. Read returns 0</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RXILVL</name>
							<description>Trigger level for RX interrupts. If the FIFO depth exceedsthis setting, it raises rx_threshold interrupt.</description>
							<bitRange>[4:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FMTILVL</name>
							<description>Trigger level for FMT interrupts. If the FIFO depth falls belowthis setting, it raises fmt_threshold interrupt.</description>
							<bitRange>[6:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ACQRST</name>
							<description>ACQ FIFO reset. Write 1 to the register resets it. Read returns 0</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>TXRST</name>
							<description>TX FIFO reset. Write 1 to the register resets it. Read returns 0</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FIFO_STATUS</name>
					<description>I2C FIFO status register</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>FMTLVL</name>
							<description>Current fill level of FMT fifo</description>
							<bitRange>[6:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXLVL</name>
							<description>Current fill level of RX fifo</description>
							<bitRange>[22:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXLVL</name>
							<description>Current fill level of TX fifo</description>
							<bitRange>[14:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ACQLVL</name>
							<description>Current fill level of ACQ fifo</description>
							<bitRange>[30:24]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OVRD</name>
					<description>I2C Override Control Register</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>TXOVRDEN</name>
							<description>Override the SDA and SCL TX signals.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCLVAL</name>
							<description>Value for SCL Override. Set to 0 to drive TX Low, and set to 1 for high-Z</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SDAVAL</name>
							<description>Value for SDA Override. Set to 0 to drive TX Low, and set to 1 for high-Z</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>VAL</name>
					<description>Oversampled RX values</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>SCL_RX</name>
							<description>Last 16 oversampled values of SCL. Most recent bit is bit 0, oldest 15.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SDA_RX</name>
							<description>Last 16 oversampled values of SDA. Most recent bit is bit 16, oldest 31.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TIMING0</name>
					<description>Detailed I2C Timings (directly corresponding to table 10 in the I2C Specification).All values are expressed in units of the input clock period.These must be greater than 2 in order for the change in SCL to propagate to the input of the FSM so that acknowledgements are detected correctly.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>THIGH</name>
							<description>The actual time to hold SCL high in a given pulse: in host mode, when there is no stretching this value is 3 cycles longer as tracked in issue #18962</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>TLOW</name>
							<description>The actual time to hold SCL low between any two SCL pulses</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TIMING1</name>
					<description>Detailed I2C Timings (directly corresponding to table 10 in the I2C Specification).All values are expressed in units of the input clock period.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>T_R</name>
							<description>The nominal rise time to anticipate for the bus (depends on capacitance)</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>T_F</name>
							<description>The nominal fall time to anticipate for the bus (influences SDA hold times): this is currently counted twice in host mode as tracked in issue #18958</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TIMING2</name>
					<description>Detailed I2C Timings (directly corresponding to table 10 in the I2C Specification).All values are expressed in units of the input clock period.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>TSU_STA</name>
							<description>Actual setup time for repeated start signals</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>THD_STA</name>
							<description>Actual hold time for start signals</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TIMING3</name>
					<description>Detailed I2C Timings (directly corresponding to table 10, in the I2C Specification).All values are expressed in units of the input clock period.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>TSU_DAT</name>
							<description>Actual setup time for data (or ack) bits</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>THD_DAT</name>
							<description>Actual hold time for data (or ack) bits(Note, where required, the parameters TVD_DAT is taken to be THD_DAT+T_F)</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TIMING4</name>
					<description>Detailed I2C Timings (directly corresponding to table 10, in the I2C Specification).All values are expressed in units of the input clock period.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>TSU_STO</name>
							<description>Actual setup time for stop signals</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>T_BUF</name>
							<description>Actual time between each STOP signal and the following START signal</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TIMEOUT_CTRL</name>
					<description>I2C clock stretching timeout control</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Clock stretching timeout value (in units of input clock frequency)</description>
							<bitRange>[30:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable timeout feature</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TARGET_ID</name>
					<description>I2C target address and mask pairs</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>ADDRESS0</name>
							<description>I2C target address number 0</description>
							<bitRange>[6:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MASK0</name>
							<description>I2C target mask number 0</description>
							<bitRange>[13:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ADDRESS1</name>
							<description>I2C target address number 1</description>
							<bitRange>[20:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MASK1</name>
							<description>I2C target mask number 1</description>
							<bitRange>[27:21]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ACQDATA</name>
					<description>I2C target acquired data</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>ABYTE</name>
							<description>Address for accepted transaction or acquired byte</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SIGNAL</name>
							<description>Host issued a START before transmitting ABYTE, a STOP or a RESTART after the preceeding ABYTE</description>
							<bitRange>[9:8]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TXDATA</name>
					<description>I2C target transmit data</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[7:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>HOST_TIMEOUT_CTRL</name>
					<description>I2C host clock generation timeout value (in units of input clock frequency)</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="I2C0">
			<name>I2C1</name>
			<version>1.0.0</version>
			<description>I2C interface for host and device mode, supporting up to 1 Mbaud data rates</description>
			<baseAddress>0x40090000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>I2C1 IRQ</name>
				<value>8</value>
			</interrupt>
		</peripheral>
		<peripheral derivedFrom="I2C0">
			<name>I2C2</name>
			<version>1.0.0</version>
			<description>I2C interface for host and device mode, supporting up to 1 Mbaud data rates</description>
			<baseAddress>0x400a0000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>I2C2 IRQ</name>
				<value>9</value>
			</interrupt>
		</peripheral>
		<peripheral>
			<name>PATTGEN</name>
			<version>1.0.0</version>
			<description>Transmission of short time-dependent data patterns on two clock-parallel output channels</description>
			<baseAddress>0x400e0000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>PATTGEN IRQ</name>
				<value>10</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CTRL</name>
					<description>PATTGEN control register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>ENABLE_CH0</name>
							<description>Enable pattern generator functionality for Channel 0</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ENABLE_CH1</name>
							<description>Enable pattern generator functionality for Channel 1</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>POLARITY_CH0</name>
							<description>Clock (`pcl`) polarity for Channel 0. If low, `pda` signal changes on falling edge of pcl signal, otherwise pda changes on rising edge. Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>POLARITY_CH1</name>
							<description>Clock (`pcl`) polarity for Channel 1. If low, `pda` signal changes on falling edge of `pcl` signal, otherwise pda changes on rising edge. Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREDIV_CH0</name>
					<description>PATTGEN pre-divider register for Channel 0</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>CLK_RATIO</name>
							<description>Clock divider ratio fpr Channel 0 (relative to I/O clock). Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREDIV_CH1</name>
					<description>PATTGEN pre-divider register for Channel 1</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>CLK_RATIO</name>
							<description>Clock divider ratio for Channel 1 (relative to I/O clock). Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_CH0_0</name>
					<description>PATTGEN seed pattern multi-registers for Channel 0.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>DATA_0</name>
							<description>Seed pattern for Channel 0 (1-64 bits). Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_CH0_1</name>
					<description>PATTGEN seed pattern multi-registers for Channel 0.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>DATA_1</name>
							<description>Seed pattern for Channel 0 (1-64 bits). Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_CH1_0</name>
					<description>PATTGEN seed pattern multi-registers for Channel 1.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>DATA_0</name>
							<description>Seed pattern for Channel 1 (1-64 bits). Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_CH1_1</name>
					<description>PATTGEN seed pattern multi-registers for Channel 1.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>DATA_1</name>
							<description>Seed pattern for Channel 1 (1-64 bits). Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SIZE</name>
					<description>PATTGEN pattern length</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>LEN_CH0</name>
							<description>Length of the seed pattern for Channel 0, minus 1. Valid values: 0..63. Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>REPS_CH0</name>
							<description>Number of pattern repetitions for Channel 0, minus 1. Valid values: 0..1023. Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[15:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>LEN_CH1</name>
							<description>Length of the seed pattern for Channel 1, minus 1. Valid values: 0..63. Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[21:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>REPS_CH1</name>
							<description>Number of pattern repetitions for Channel 1, minus 1. Valid values: 0..1023. Note that writes to a channel's configuration registers have no effect while the channel is enabled.</description>
							<bitRange>[31:22]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>RV_TIMER</name>
			<version>1.0.0</version>
			<description>Memory-mapped timer unit implementing RISC-V mtime and mtimecmp registers</description>
			<baseAddress>0x40100000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>RV_TIMER IRQ</name>
				<value>11</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CTRL</name>
					<description>Control register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>active_0</name>
							<description>If 1, timer operates</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTR_ENABLE0</name>
					<description>Interrupt Enable</description>
					<addressOffset>0x100</addressOffset>
					<fields>
						<field>
							<name>IE_0</name>
							<description>Interrupt Enable for timer</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTR_STATE0</name>
					<description>Interrupt Status</description>
					<addressOffset>0x104</addressOffset>
					<fields>
						<field>
							<name>IS_0</name>
							<description>Interrupt status for timer</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTR_TEST0</name>
					<description>Interrupt test register</description>
					<addressOffset>0x108</addressOffset>
					<fields>
						<field>
							<name>T_0</name>
							<description>Interrupt test for timer</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CFG0</name>
					<description>Configuration for Hart 0</description>
					<addressOffset>0x10c</addressOffset>
					<fields>
						<field>
							<name>prescale</name>
							<description>Prescaler to generate tick</description>
							<bitRange>[11:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>step</name>
							<description>Incremental value for each tick</description>
							<bitRange>[23:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TIMER_V_LOWER0</name>
					<description>Timer value Lower</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>v</name>
							<description>Timer value [31:0]</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TIMER_V_UPPER0</name>
					<description>Timer value Upper</description>
					<addressOffset>0x114</addressOffset>
					<fields>
						<field>
							<name>v</name>
							<description>Timer value [63:32]</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COMPARE_LOWER0_0</name>
					<description>Timer value Lower</description>
					<addressOffset>0x118</addressOffset>
					<fields>
						<field>
							<name>v</name>
							<description>Timer compare value [31:0]</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COMPARE_UPPER0_0</name>
					<description>Timer value Upper</description>
					<addressOffset>0x11c</addressOffset>
					<fields>
						<field>
							<name>v</name>
							<description>Timer compare value [63:32]</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>OTP_CTRL</name>
			<version>1.0.0</version>
			<description>Interfaces integrated one-time programmable memory, supports scrambling, integrity and secure wipe</description>
			<baseAddress>0x40130000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>OTP_CTRL IRQ</name>
				<value>12</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>STATUS</name>
					<description>OTP status register.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>VENDOR_TEST_ERROR</name>
							<description>Set to 1 if an error occurred in this partition.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CREATOR_SW_CFG_ERROR</name>
							<description>Set to 1 if an error occurred in this partition.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>OWNER_SW_CFG_ERROR</name>
							<description>Set to 1 if an error occurred in this partition.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>HW_CFG_ERROR</name>
							<description>Set to 1 if an error occurred in this partition.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SECRET0_ERROR</name>
							<description>Set to 1 if an error occurred in this partition.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SECRET1_ERROR</name>
							<description>Set to 1 if an error occurred in this partition.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SECRET2_ERROR</name>
							<description>Set to 1 if an error occurred in this partition.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>LIFE_CYCLE_ERROR</name>
							<description>Set to 1 if an error occurred in this partition.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>DAI_ERROR</name>
							<description>Set to 1 if an error occurred in the DAI.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>LCI_ERROR</name>
							<description>Set to 1 if an error occurred in the LCI.If set to 1, SW should check the !!ERR_CODE register at the corresponding index.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TIMEOUT_ERROR</name>
							<description>Set to 1 if an integrity or consistency check times out.This raises an fatal_check_error alert and is an unrecoverable error condition.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>LFSR_FSM_ERROR</name>
							<description>Set to 1 if the LFSR timer FSM has reached an invalid state.This raises an fatal_check_error alert and is an unrecoverable error condition.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SCRAMBLING_FSM_ERROR</name>
							<description>Set to 1 if the scrambling datapath FSM has reached an invalid state.This raises an fatal_check_error alert and is an unrecoverable error condition.</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>KEY_DERIV_FSM_ERROR</name>
							<description>Set to 1 if the key derivation FSM has reached an invalid state.This raises an fatal_check_error alert and is an unrecoverable error condition.</description>
							<bitRange>[13:13]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BUS_INTEG_ERROR</name>
							<description>This bit is set to 1 if a fatal bus integrity fault is detected.This error triggers a fatal_bus_integ_error alert.</description>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>DAI_IDLE</name>
							<description>Set to 1 if the DAI is idle and ready to accept commands.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CHECK_PENDING</name>
							<description>Set to 1 if an integrity or consistency check triggered by the LFSR timer or via !!CHECK_TRIGGER is pending.</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE</name>
					<description>This register holds information about error conditions that occurred in the agentsinteracting with the OTP macro via the internal bus. The error codes should be checkedif the partitions, DAI or LCI flag an error in the !!STATUS register, or when an!!INTR_STATE.otp_error has been triggered. Note that all errors trigger an otp_errorinterrupt, and in addition some errors may trigger either an fatal_macro_error or anfatal_check_error alert.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[2:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[5:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>Value_2</name>
							<description>Value</description>
							<bitRange>[8:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>Value_3</name>
							<description>Value</description>
							<bitRange>[11:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>Value_4</name>
							<description>Value</description>
							<bitRange>[14:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>Value_5</name>
							<description>Value</description>
							<bitRange>[17:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>Value_6</name>
							<description>Value</description>
							<bitRange>[20:18]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>Value_7</name>
							<description>Value</description>
							<bitRange>[23:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>Value_8</name>
							<description>Value</description>
							<bitRange>[26:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>Value_9</name>
							<description>Value</description>
							<bitRange>[29:27]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIRECT_ACCESS_REGWEN</name>
					<description>Register write enable for all direct access interface registers.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>This bit is hardware-managed and only readable by software.The DAI sets this bit temporarily to 0 during an OTP operation such thatthe corresponding address and data registers cannot be modified whilethe operation is pending.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIRECT_ACCESS_CMD</name>
					<description>Command register for direct accesses.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>RD</name>
							<description>Initiates a readout sequence that reads the location specifiedby !!DIRECT_ACCESS_ADDRESS. The command places the data read into!!DIRECT_ACCESS_RDATA_0 and !!DIRECT_ACCESS_RDATA_1 (for 64bit partitions).</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>WR</name>
							<description>Initiates a programming sequence that writes the data in !!DIRECT_ACCESS_WDATA_0and !!DIRECT_ACCESS_WDATA_1 (for 64bit partitions) to the location specified by!!DIRECT_ACCESS_ADDRESS.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>DIGEST</name>
							<description>Initiates the digest calculation and locking sequence for the partition specified by!!DIRECT_ACCESS_ADDRESS.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIRECT_ACCESS_ADDRESS</name>
					<description>Address register for direct accesses.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>This is the address for the OTP word to be read or written throughthe direct access interface. Note that the address is aligned to the access sizeinternally, hence bits 1:0 are ignored for 32bit accesses, and bits 2:0 are ignoredfor 64bit accesses.For the digest calculation command, set this register to the partition base offset.</description>
							<bitRange>[10:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIRECT_ACCESS_WDATA_0</name>
					<description>Write data for direct accesses.Hardware automatically determines the access granule (32bit or 64bit) based on whichpartition is being written to.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIRECT_ACCESS_WDATA_1</name>
					<description>Write data for direct accesses.Hardware automatically determines the access granule (32bit or 64bit) based on whichpartition is being written to.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIRECT_ACCESS_RDATA_0</name>
					<description>Read data for direct accesses.Hardware automatically determines the access granule (32bit or 64bit) based on whichpartition is read from.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIRECT_ACCESS_RDATA_1</name>
					<description>Read data for direct accesses.Hardware automatically determines the access granule (32bit or 64bit) based on whichpartition is read from.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CHECK_TRIGGER_REGWEN</name>
					<description>Register write enable for !!CHECK_TRIGGER.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When cleared to 0, the !!CHECK_TRIGGER register cannot be written anymore.Write 0 to clear this bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CHECK_TRIGGER</name>
					<description>Command register for direct accesses.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>INTEGRITY</name>
							<description>Writing 1 to this bit triggers an integrity check. SW should monitor !!STATUS.CHECK_PENDINGand wait until the check has been completed. If there are any errors, those will be flaggedin the !!STATUS and !!ERR_CODE registers, and via the interrupts and alerts.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CONSISTENCY</name>
							<description>Writing 1 to this bit triggers a consistency check. SW should monitor !!STATUS.CHECK_PENDINGand wait until the check has been completed. If there are any errors, those will be flaggedin the !!STATUS and !!ERR_CODE registers, and via interrupts and alerts.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CHECK_REGWEN</name>
					<description>Register write enable for !!INTEGRITY_CHECK_PERIOD and !!CONSISTENCY_CHECK_PERIOD.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When cleared to 0, !!INTEGRITY_CHECK_PERIOD and !!CONSISTENCY_CHECK_PERIOD registers cannot be written anymore.Write 0 to clear this bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CHECK_TIMEOUT</name>
					<description>Timeout value for the integrity and consistency checks.</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Timeout value in cycles for the for the integrity and consistency checks. If an integrity or consistencycheck does not complete within the timeout window, an error will be flagged in the !!STATUS register,an otp_error interrupt will be raised, and an fatal_check_error alert will be sent out. The timeout shouldbe set to a large value to stay on the safe side. The maximum check time can be upper bounded by thenumber of cycles it takes to readout, scramble and digest the entire OTP array. Since this amounts toroughly 25k cycles, it is recommended to set this value to at least 100'000 cycles in order to stay on thesafe side. A value of zero disables the timeout mechanism (default).</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTEGRITY_CHECK_PERIOD</name>
					<description>This value specifies the maximum period that can be generated pseudo-randomly.Only applies to the HW_CFG and SECRET* partitions once they are locked.</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>The pseudo-random period is generated using a 40bit LFSR internally, and this register definesthe bit mask to be applied to the LFSR output in order to limit its range. The value of thisregister is left shifted by 8bits and the lower bits are set to 8'hFF in order to form the 40bit mask.A recommended value is 0x3_FFFF, corresponding to a maximum period of ~2.8s at 24MHz.A value of zero disables the timer (default). Note that a one-off check can always be triggered via!!CHECK_TRIGGER.INTEGRITY.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CONSISTENCY_CHECK_PERIOD</name>
					<description>This value specifies the maximum period that can be generated pseudo-randomly.This applies to the LIFE_CYCLE partition and the HW_CFG and SECRET* partitions once they are locked.</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>The pseudo-random period is generated using a 40bit LFSR internally, and this register definesthe bit mask to be applied to the LFSR output in order to limit its range. The value of thisregister is left shifted by 8bits and the lower bits are set to 8'hFF in order to form the 40bit mask.A recommended value is 0x3FF_FFFF, corresponding to a maximum period of ~716s at 24MHz.A value of zero disables the timer (default). Note that a one-off check can always be triggered via!!CHECK_TRIGGER.CONSISTENCY.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>VENDOR_TEST_READ_LOCK</name>
					<description>Runtime read lock for the VENDOR_TEST partition.</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When cleared to 0, read access to the VENDOR_TEST partition is locked.Write 0 to clear this bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CREATOR_SW_CFG_READ_LOCK</name>
					<description>Runtime read lock for the CREATOR_SW_CFG partition.</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When cleared to 0, read access to the CREATOR_SW_CFG partition is locked.Write 0 to clear this bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OWNER_SW_CFG_READ_LOCK</name>
					<description>Runtime read lock for the OWNER_SW_CFG partition.</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When cleared to 0, read access to the OWNER_SW_CFG partition is locked.Write 0 to clear this bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>VENDOR_TEST_DIGEST_0</name>
					<description>Integrity digest for the VENDOR_TEST partition.The integrity digest is 0 by default. Software must write thisdigest value via the direct access interface in order to lock the partition.After a reset, write access to the VENDOR_TEST partition is locked andthe digest becomes visible in this CSR.</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>VENDOR_TEST_DIGEST_1</name>
					<description>Integrity digest for the VENDOR_TEST partition.The integrity digest is 0 by default. Software must write thisdigest value via the direct access interface in order to lock the partition.After a reset, write access to the VENDOR_TEST partition is locked andthe digest becomes visible in this CSR.</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CREATOR_SW_CFG_DIGEST_0</name>
					<description>Integrity digest for the CREATOR_SW_CFG partition.The integrity digest is 0 by default. Software must write thisdigest value via the direct access interface in order to lock the partition.After a reset, write access to the CREATOR_SW_CFG partition is locked andthe digest becomes visible in this CSR.</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CREATOR_SW_CFG_DIGEST_1</name>
					<description>Integrity digest for the CREATOR_SW_CFG partition.The integrity digest is 0 by default. Software must write thisdigest value via the direct access interface in order to lock the partition.After a reset, write access to the CREATOR_SW_CFG partition is locked andthe digest becomes visible in this CSR.</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OWNER_SW_CFG_DIGEST_0</name>
					<description>Integrity digest for the OWNER_SW_CFG partition.The integrity digest is 0 by default. Software must write thisdigest value via the direct access interface in order to lock the partition.After a reset, write access to the OWNER_SW_CFG partition is locked andthe digest becomes visible in this CSR.</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OWNER_SW_CFG_DIGEST_1</name>
					<description>Integrity digest for the OWNER_SW_CFG partition.The integrity digest is 0 by default. Software must write thisdigest value via the direct access interface in order to lock the partition.After a reset, write access to the OWNER_SW_CFG partition is locked andthe digest becomes visible in this CSR.</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>HW_CFG_DIGEST_0</name>
					<description>Integrity digest for the HW_CFG partition.The integrity digest is 0 by default. The digest calculation can be triggered via the !!DIRECT_ACCESS_CMD.After a reset, the digest then becomes visible in this CSR, and the corresponding partition becomes write-locked.</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>HW_CFG_DIGEST_1</name>
					<description>Integrity digest for the HW_CFG partition.The integrity digest is 0 by default. The digest calculation can be triggered via the !!DIRECT_ACCESS_CMD.After a reset, the digest then becomes visible in this CSR, and the corresponding partition becomes write-locked.</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SECRET0_DIGEST_0</name>
					<description>Integrity digest for the SECRET0 partition.The integrity digest is 0 by default. The digest calculation can be triggered via the !!DIRECT_ACCESS_CMD.After a reset, the digest then becomes visible in this CSR, and the corresponding partition becomes write-locked.</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SECRET0_DIGEST_1</name>
					<description>Integrity digest for the SECRET0 partition.The integrity digest is 0 by default. The digest calculation can be triggered via the !!DIRECT_ACCESS_CMD.After a reset, the digest then becomes visible in this CSR, and the corresponding partition becomes write-locked.</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SECRET1_DIGEST_0</name>
					<description>Integrity digest for the SECRET1 partition.The integrity digest is 0 by default. The digest calculation can be triggered via the !!DIRECT_ACCESS_CMD.After a reset, the digest then becomes visible in this CSR, and the corresponding partition becomes write-locked.</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SECRET1_DIGEST_1</name>
					<description>Integrity digest for the SECRET1 partition.The integrity digest is 0 by default. The digest calculation can be triggered via the !!DIRECT_ACCESS_CMD.After a reset, the digest then becomes visible in this CSR, and the corresponding partition becomes write-locked.</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SECRET2_DIGEST_0</name>
					<description>Integrity digest for the SECRET2 partition.The integrity digest is 0 by default. The digest calculation can be triggered via the !!DIRECT_ACCESS_CMD.After a reset, the digest then becomes visible in this CSR, and the corresponding partition becomes write-locked.</description>
					<addressOffset>0xdc</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SECRET2_DIGEST_1</name>
					<description>Integrity digest for the SECRET2 partition.The integrity digest is 0 by default. The digest calculation can be triggered via the !!DIRECT_ACCESS_CMD.After a reset, the digest then becomes visible in this CSR, and the corresponding partition becomes write-locked.</description>
					<addressOffset>0xe0</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR0</name>
					<description/>
					<addressOffset>0x1000</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[13:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field4</name>
							<description/>
							<bitRange>[26:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR1</name>
					<description/>
					<addressOffset>0x1004</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[6:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field4</name>
							<description/>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR2</name>
					<description/>
					<addressOffset>0x1008</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR3</name>
					<description/>
					<addressOffset>0x100c</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[13:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field4</name>
							<description/>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field5</name>
							<description/>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field6</name>
							<description/>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field7</name>
							<description/>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field8</name>
							<description/>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR4</name>
					<description/>
					<addressOffset>0x1010</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[9:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR5</name>
					<description/>
					<addressOffset>0x1014</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[7:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[11:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field4</name>
							<description/>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field5</name>
							<description/>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field6</name>
							<description/>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR6</name>
					<description/>
					<addressOffset>0x1018</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[9:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR7</name>
					<description/>
					<addressOffset>0x101c</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[5:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[10:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>LC_CTRL</name>
			<version>1.0.0</version>
			<description>Manages device life cycle states and transitions, and controls key manager, flash, OTP, and debug access</description>
			<baseAddress>0x40140000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>LC_CTRL IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>STATUS</name>
					<description>life cycle status register. Note that all errors are terminal and require a reset cycle.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>INITIALIZED</name>
							<description>This bit is set to 1 if the life cycle controller has successfully initialized and thestate exposed in !!LC_STATE and !!LC_TRANSITION_CNT is valid.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>READY</name>
							<description>This bit is set to 1 if the life cycle controller has successfully initialized and isready to accept a life cycle transition command.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>EXT_CLOCK_SWITCHED</name>
							<description>This bit is set to 1 if the clock manager has successfully switched to the external clock due to!!EXT_CLOCK_EN being set to 1.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TRANSITION_SUCCESSFUL</name>
							<description>This bit is set to 1 if the last life cycle transition request was successful.Note that each transition attempt increments the !!LC_TRANSITION_CNT andmoves the life cycle state into POST_TRANSITION.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TRANSITION_COUNT_ERROR</name>
							<description>This bit is set to 1 if the !!LC_TRANSITION_CNT has reached its maximum.If this is the case, no more state transitions can be performed.Note that each transition attempt increments the !!LC_TRANSITION_CNT andmoves the life cycle state into POST_TRANSITION.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TRANSITION_ERROR</name>
							<description>This bit is set to 1 if the last transition command requested an invalid state transition(e.g. DEV -&gt; RAW). Note that each transition attempt increments the !!LC_TRANSITION_CNT andmoves the life cycle state into POST_TRANSITION.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TOKEN_ERROR</name>
							<description>This bit is set to 1 if the token supplied for a conditional transition was invalid.Note that each transition attempt increments the !!LC_TRANSITION_CNT andmoves the life cycle state into POST_TRANSITION.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FLASH_RMA_ERROR</name>
							<description>This bit is set to 1 if flash failed to correctly respond to an RMA request.Note that each transition attempt increments the !!LC_TRANSITION_CNT andmoves the life cycle state into POST_TRANSITION.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>OTP_ERROR</name>
							<description>This bit is set to 1 if an error occurred during an OTP programming operation.This error will move the life cycle state automatically to POST_TRANSITION and raise afatal_prog_error alert.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>STATE_ERROR</name>
							<description>This bit is set to 1 if either the controller FSM state or the life cycle state is invalid orhas been corrupted as part of a tampering attempt. This error will move the life cycle stateautomatically to INVALID and raise a fatal_state_error alert.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BUS_INTEG_ERROR</name>
							<description>This bit is set to 1 if a fatal bus integrity fault is detected.This error triggers a fatal_bus_integ_error alert.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>OTP_PARTITION_ERROR</name>
							<description>This bit is set to 1 if the life cycle partition in OTP is in error state.This bit is intended for production testing during the RAW life cycle state,where the OTP control and status registers are not accessible.This error does not trigger an alert in the life cycle controller.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLAIM_TRANSITION_IF_REGWEN</name>
					<description>Register write enable for the hardware mutex register.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>This bit is managed by software and is set to 1 by default.When cleared to 0, the !!CLAIM_TRANSITION_IF mutex register cannot be written to anymore. Write 0 to clear this bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLAIM_TRANSITION_IF</name>
					<description>Hardware mutex to claim exclusive access to the transition interface.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>MUTEX</name>
							<description>In order to have exclusive access to the transition interface, SW must first claim the associatedhardware mutex by writing kMultiBitBool8True to this register.If the register reads back kMultiBitBool8True, the mutex claim has been successful, and !!TRANSITION_REGWENwill be set automatically to 1 by HW.Write 0 to this register in order to release the HW mutex.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TRANSITION_REGWEN</name>
					<description>Register write enable for all transition interface registers.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>This bit is hardware-managed and only readable by software.By default, this bit is set to 0 by hardware.Once SW has claimed the !!CLAIM_TRANSITION_IF mutex, this bit will be set to 1.Note that the life cycle controller sets this bit temporarily to 0 while executing a life cycle statetransition.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TRANSITION_CMD</name>
					<description>Command register for state transition requests.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>START</name>
							<description>Writing a 1 to this register initiates the life cycle state transition to the statespecified in !!TRANSITION_TARGET.Note that not all transitions are possible, and certain conditional transitions requirean additional !!TRANSITION_TOKEN_0.In order to have exclusive access to this register, SW must first claim the associatedhardware mutex via !!CLAIM_TRANSITION_IF.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TRANSITION_CTRL</name>
					<description>Control register for state transition requests.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>EXT_CLOCK_EN</name>
							<description>When set to 1, the OTP clock will be switched to an externally supplied clock right away when thedevice is in a non-PROD life cycle state. The clock mux will remain switched until the next system reset.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VOLATILE_RAW_UNLOCK</name>
							<description>When set to 1, LC_CTRL performs a volatile lifecycle transition from RAW -&gt; TEST_UNLOCKED0.No state update will be written to OTP, and no reset will be needed after the transition has succeeded.Note that the token to be provided has to be the hashed unlock token, since in this case the token is NOT passed through KMAC before performing the comparison.After a successful VOLATILE_RAW_UNLOCK transition from RAW -&gt; TEST_UNLOCKED0, the LC_CTRL FSM will go back to the IdleSt and set the STATUS.TRANSITION_SUCCESSFUL bit.The LC_CTRL accepts further transition commands in this state.IMPORTANT NOTE: this feature is intended for test chips only in order to mitigate the risks of a malfunctioningOTP macro. Production devices will permanently disable this feature at compile time via the SecVolatileRawUnlockEn parameter.Software can check whether VOLATILE_RAW_UNLOCK is available by writing 1 and reading backthe register value. If the register reads back as 1 the mechanism is available, and if it reads back 0 it is not.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TRANSITION_TOKEN_0</name>
					<description>128bit token for conditional transitions.Make sure to set this to 0 for unconditional transitions.Note that this register is shared with the life cycle TAP interface.In order to have exclusive access to this register, SW must first claim the associatedhardware mutex via !!CLAIM_TRANSITION_IF.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TRANSITION_TOKEN_1</name>
					<description>128bit token for conditional transitions.Make sure to set this to 0 for unconditional transitions.Note that this register is shared with the life cycle TAP interface.In order to have exclusive access to this register, SW must first claim the associatedhardware mutex via !!CLAIM_TRANSITION_IF.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TRANSITION_TOKEN_2</name>
					<description>128bit token for conditional transitions.Make sure to set this to 0 for unconditional transitions.Note that this register is shared with the life cycle TAP interface.In order to have exclusive access to this register, SW must first claim the associatedhardware mutex via !!CLAIM_TRANSITION_IF.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>Value_2</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TRANSITION_TOKEN_3</name>
					<description>128bit token for conditional transitions.Make sure to set this to 0 for unconditional transitions.Note that this register is shared with the life cycle TAP interface.In order to have exclusive access to this register, SW must first claim the associatedhardware mutex via !!CLAIM_TRANSITION_IF.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>Value_3</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TRANSITION_TARGET</name>
					<description>This register exposes the decoded life cycle state.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>STATE</name>
							<description>This field encodes the target life cycle state in a redundant enum format.The 5bit state enum is repeated 6x so that it fills the entire 32bit register.The encoding is straightforward replication: [val, val, val, val, val, val].Note that this register is shared with the life cycle TAP interface.In order to have exclusive access to this register, SW must first claim the associatedhardware mutex via !!CLAIM_TRANSITION_IF.</description>
							<bitRange>[29:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OTP_VENDOR_TEST_CTRL</name>
					<description>Test/vendor-specific settings for the OTP macro wrapper.These values are only active during RAW, TEST_* and RMA life cycle states.In all other states, these values will be gated to zero before sendingthem to the OTP macro wrapper - even if this register is programmed to a non-zero value.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OTP_VENDOR_TEST_STATUS</name>
					<description>Test/vendor-specific settings for the OTP macro wrapper.These values are only active during RAW, TEST_* and RMA life cycle states.In all other states, these values will read as zero.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LC_STATE</name>
					<description>This register exposes the decoded life cycle state.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>STATE</name>
							<description>This field exposes the decoded life cycle state in a redundant enum format.The 5bit state enum is repeated 6x so that it fills the entire 32bit register.The encoding is straightforward replication: [val, val, val, val, val, val].</description>
							<bitRange>[29:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LC_TRANSITION_CNT</name>
					<description>This register exposes the state of the decoded life cycle transition counter.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>CNT</name>
							<description>Number of total life cycle state transition attempts.The life cycle controller allows up to 24 transition attempts.If this counter is equal to 24, the !!LC_STATE is consideredto be invalid and will read as SCRAP.If the counter state is invalid, or the life cycle controller is in the post-transition state,the counter will have the value 31 (i.e., all counter bits will be set).</description>
							<bitRange>[4:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LC_ID_STATE</name>
					<description>This register exposes the id state of the device.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>STATE</name>
							<description>This field exposes the id state in redundant enum format.The 2bit id state enum is repeated 16x so that it fills the entire 32bit register.The encoding is straightforward replication: [val, val, ... val].&quot;</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>HW_REVISION0</name>
					<description>This register holds the SILICON_CREATOR_ID and the PRODUCT_ID.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>SILICON_CREATOR_ID</name>
							<description>ID of the silicon creator.Assigned by the OpenTitan project.Zero is an invalid value.The encoding must follow the following range constraints:0x0000: invalid value0x0001 - 0x3FFF: reserved for use in the open-source OpenTitan project0x4000 - 0x7FFF: reserved for real integrations of OpenTitan0x8000 - 0xFFFF: reserved for future use</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>PRODUCT_ID</name>
							<description>Used to identify a class of devices.Assigned by the Silicon Creator.Zero is an invalid value.The encoding must follow the following range constraints:0x0000: invalid value0x0001 - 0x3FFF: reserved for discrete chip products0x4000 - 0x7FFF: reserved for integrated IP products0x8000 - 0xFFFF: reserved for future use</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>HW_REVISION1</name>
					<description>This register holds the REVISION_ID.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>REVISION_ID</name>
							<description>Product revision ID. Assigned by the Silicon Creator.The encoding is not specified other than that different tapeouts must be assigned different revision numbers.I.e., each base or metal layer respin must be reflected so that software can rely on it to modify firmware and driver behavior.Zero is an invalid value.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RESERVED</name>
							<description>Reserved bits.Set to zero.</description>
							<bitRange>[31:8]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEVICE_ID_0</name>
					<description>This is the 256bit DEVICE_ID value that is stored in the HW_CFG partition in OTP.If this register reads all-one, the HW_CFG partition has not been initialized yet or is in error state.If this register reads all-zero, this is indicative that the value has not been programmed to OTP yet.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEVICE_ID_1</name>
					<description>This is the 256bit DEVICE_ID value that is stored in the HW_CFG partition in OTP.If this register reads all-one, the HW_CFG partition has not been initialized yet or is in error state.If this register reads all-zero, this is indicative that the value has not been programmed to OTP yet.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEVICE_ID_2</name>
					<description>This is the 256bit DEVICE_ID value that is stored in the HW_CFG partition in OTP.If this register reads all-one, the HW_CFG partition has not been initialized yet or is in error state.If this register reads all-zero, this is indicative that the value has not been programmed to OTP yet.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>Value_2</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEVICE_ID_3</name>
					<description>This is the 256bit DEVICE_ID value that is stored in the HW_CFG partition in OTP.If this register reads all-one, the HW_CFG partition has not been initialized yet or is in error state.If this register reads all-zero, this is indicative that the value has not been programmed to OTP yet.</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>Value_3</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEVICE_ID_4</name>
					<description>This is the 256bit DEVICE_ID value that is stored in the HW_CFG partition in OTP.If this register reads all-one, the HW_CFG partition has not been initialized yet or is in error state.If this register reads all-zero, this is indicative that the value has not been programmed to OTP yet.</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>Value_4</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEVICE_ID_5</name>
					<description>This is the 256bit DEVICE_ID value that is stored in the HW_CFG partition in OTP.If this register reads all-one, the HW_CFG partition has not been initialized yet or is in error state.If this register reads all-zero, this is indicative that the value has not been programmed to OTP yet.</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>Value_5</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEVICE_ID_6</name>
					<description>This is the 256bit DEVICE_ID value that is stored in the HW_CFG partition in OTP.If this register reads all-one, the HW_CFG partition has not been initialized yet or is in error state.If this register reads all-zero, this is indicative that the value has not been programmed to OTP yet.</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>Value_6</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEVICE_ID_7</name>
					<description>This is the 256bit DEVICE_ID value that is stored in the HW_CFG partition in OTP.If this register reads all-one, the HW_CFG partition has not been initialized yet or is in error state.If this register reads all-zero, this is indicative that the value has not been programmed to OTP yet.</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>Value_7</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MANUF_STATE_0</name>
					<description>This is a 256bit field used for keeping track of the manufacturing state.</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MANUF_STATE_1</name>
					<description>This is a 256bit field used for keeping track of the manufacturing state.</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MANUF_STATE_2</name>
					<description>This is a 256bit field used for keeping track of the manufacturing state.</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>Value_2</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MANUF_STATE_3</name>
					<description>This is a 256bit field used for keeping track of the manufacturing state.</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>Value_3</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MANUF_STATE_4</name>
					<description>This is a 256bit field used for keeping track of the manufacturing state.</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>Value_4</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MANUF_STATE_5</name>
					<description>This is a 256bit field used for keeping track of the manufacturing state.</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>Value_5</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MANUF_STATE_6</name>
					<description>This is a 256bit field used for keeping track of the manufacturing state.</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>Value_6</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MANUF_STATE_7</name>
					<description>This is a 256bit field used for keeping track of the manufacturing state.</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>Value_7</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>ALERT_HANDLER</name>
			<version>1.0.0</version>
			<description>alert_handler</description>
			<baseAddress>0x40150000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>ALERT_HANDLER IRQ</name>
				<value>13</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>PING_TIMER_REGWEN</name>
					<description>Register write enable for !!PING_TIMEOUT_CYC_SHADOWED and !!PING_TIMER_EN_SHADOWED.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When true, the !!PING_TIMEOUT_CYC_SHADOWED and !!PING_TIMER_EN_SHADOWED registers can be modified.When false, they become read-only. Defaults true, write one to clear.This should be cleared once the alert handler has been configured and the pingtimer mechanism has been kicked off.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PING_TIMEOUT_CYC_SHADOWED</name>
					<description>Ping timeout cycle count.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Timeout value in cycles.If an alert receiver or an escalation sender does not respond to a ping within this timeout window, a pingfail alert will be raised.It is recommended to set this value to the equivalent of 256 cycles of the slowest alert sender clock domain in the system (or greater).</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PING_TIMER_EN_SHADOWED</name>
					<description>Ping timer enable.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Setting this to 1 enables the ping timer mechanism.This bit cannot be cleared to 0 once it has been set to 1.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_0</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_1</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_2</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_3</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_4</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_5</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_6</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_7</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_8</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_9</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_10</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_11</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_12</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_13</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_14</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_15</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_16</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_17</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_18</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_19</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_20</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_21</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_22</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_23</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_24</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_25</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_26</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_27</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_28</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_29</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_30</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_31</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_32</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_33</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_34</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_35</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_36</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xdc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_37</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xe0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_38</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xe4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_39</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xe8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_40</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xec</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_41</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xf0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_42</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xf4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_43</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xf8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_44</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0xfc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_45</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x100</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_46</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x104</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_47</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x108</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_48</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x10c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_49</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_50</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x114</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_51</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x118</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_52</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x11c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_53</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x120</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_54</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x124</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_55</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x128</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_56</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x12c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_57</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x130</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_58</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x134</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_59</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x138</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_60</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x13c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_61</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x140</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_62</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x144</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_63</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x148</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_REGWEN_64</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x14c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!ALERT_EN_SHADOWEDand !!ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_0</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x150</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_1</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x154</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_2</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x158</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_3</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x15c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_4</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x160</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_5</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x164</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_6</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x168</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_7</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x16c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_8</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x170</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_9</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x174</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_10</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x178</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_11</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x17c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_12</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x180</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_13</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x184</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_14</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x188</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_15</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x18c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_16</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x190</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_17</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x194</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_18</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x198</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_19</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x19c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_20</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1a0</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_21</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1a4</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_22</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1a8</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_23</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1ac</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_24</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1b0</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_25</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1b4</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_26</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1b8</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_27</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1bc</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_28</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1c0</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_29</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1c4</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_30</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1c8</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_31</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1cc</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_32</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1d0</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_33</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1d4</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_34</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1d8</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_35</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1dc</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_36</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1e0</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_37</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1e4</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_38</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1e8</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_39</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1ec</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_40</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1f0</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_41</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1f4</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_42</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1f8</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_43</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x1fc</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_44</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x200</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_45</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x204</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_46</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x208</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_47</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x20c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_48</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x210</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_49</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x214</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_50</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x218</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_51</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x21c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_52</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x220</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_53</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x224</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_54</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x228</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_55</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x22c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_56</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x230</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_57</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x234</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_58</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x238</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_59</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x23c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_60</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x240</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_61</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x244</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_62</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x248</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_63</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x24c</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_EN_SHADOWED_64</name>
					<description>Enable register for alerts.</description>
					<addressOffset>0x250</addressOffset>
					<fields>
						<field>
							<name>EN_A</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_0</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x254</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_1</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x258</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_2</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x25c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_3</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x260</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_4</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x264</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_5</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x268</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_6</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x26c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_7</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x270</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_8</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x274</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_9</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x278</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_10</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x27c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_11</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x280</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_12</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x284</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_13</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x288</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_14</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x28c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_15</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x290</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_16</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x294</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_17</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x298</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_18</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x29c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_19</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2a0</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_20</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2a4</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_21</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2a8</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_22</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2ac</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_23</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2b0</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_24</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2b4</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_25</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2b8</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_26</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2bc</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_27</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2c0</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_28</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2c4</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_29</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2c8</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_30</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2cc</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_31</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2d0</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_32</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2d4</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_33</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2d8</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_34</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2dc</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_35</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2e0</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_36</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2e4</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_37</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2e8</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_38</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2ec</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_39</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2f0</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_40</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2f4</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_41</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2f8</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_42</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x2fc</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_43</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x300</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_44</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x304</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_45</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x308</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_46</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x30c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_47</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x310</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_48</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x314</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_49</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x318</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_50</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x31c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_51</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x320</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_52</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x324</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_53</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x328</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_54</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x32c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_55</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x330</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_56</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x334</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_57</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x338</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_58</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x33c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_59</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x340</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_60</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x344</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_61</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x348</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_62</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x34c</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_63</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x350</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CLASS_SHADOWED_64</name>
					<description>Class assignment of alerts.</description>
					<addressOffset>0x354</addressOffset>
					<fields>
						<field>
							<name>CLASS_A</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_0</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x358</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_1</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x35c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_2</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x360</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_3</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x364</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_4</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x368</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_5</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x36c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_6</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x370</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_7</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x374</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_8</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x378</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_9</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x37c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_10</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x380</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_11</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x384</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_12</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x388</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_13</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x38c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_14</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x390</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_15</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x394</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_16</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x398</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_17</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x39c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_18</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3a0</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_19</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3a4</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_20</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3a8</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_21</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3ac</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_22</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3b0</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_23</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3b4</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_24</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3b8</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_25</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3bc</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_26</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3c0</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_27</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3c4</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_28</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3c8</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_29</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3cc</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_30</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3d0</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_31</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3d4</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_32</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3d8</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_33</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3dc</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_34</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3e0</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_35</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3e4</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_36</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3e8</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_37</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3ec</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_38</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3f0</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_39</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3f4</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_40</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3f8</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_41</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x3fc</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_42</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x400</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_43</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x404</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_44</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x408</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_45</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x40c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_46</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x410</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_47</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x414</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_48</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x418</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_49</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x41c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_50</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x420</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_51</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x424</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_52</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x428</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_53</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x42c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_54</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x430</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_55</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x434</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_56</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x438</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_57</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x43c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_58</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x440</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_59</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x444</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_60</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x448</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_61</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x44c</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_62</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x450</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_63</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x454</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_CAUSE_64</name>
					<description>Alert Cause Register</description>
					<addressOffset>0x458</addressOffset>
					<fields>
						<field>
							<name>A</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_REGWEN_0</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x45c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!LOC_ALERT_EN_SHADOWEDand !!LOC_ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_REGWEN_1</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x460</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!LOC_ALERT_EN_SHADOWEDand !!LOC_ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_REGWEN_2</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x464</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!LOC_ALERT_EN_SHADOWEDand !!LOC_ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_REGWEN_3</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x468</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!LOC_ALERT_EN_SHADOWEDand !!LOC_ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_REGWEN_4</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x46c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!LOC_ALERT_EN_SHADOWEDand !!LOC_ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_REGWEN_5</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x470</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!LOC_ALERT_EN_SHADOWEDand !!LOC_ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_REGWEN_6</name>
					<description>Register write enable for alert enable bits.</description>
					<addressOffset>0x474</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Alert configuration write enable bit.If this is cleared to 0, the corresponding !!LOC_ALERT_EN_SHADOWEDand !!LOC_ALERT_CLASS_SHADOWED bits are not writable anymore.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_EN_SHADOWED_0</name>
					<description>Enable register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x478</addressOffset>
					<fields>
						<field>
							<name>EN_LA</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_EN_SHADOWED_1</name>
					<description>Enable register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x47c</addressOffset>
					<fields>
						<field>
							<name>EN_LA</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_EN_SHADOWED_2</name>
					<description>Enable register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x480</addressOffset>
					<fields>
						<field>
							<name>EN_LA</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_EN_SHADOWED_3</name>
					<description>Enable register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x484</addressOffset>
					<fields>
						<field>
							<name>EN_LA</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_EN_SHADOWED_4</name>
					<description>Enable register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x488</addressOffset>
					<fields>
						<field>
							<name>EN_LA</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_EN_SHADOWED_5</name>
					<description>Enable register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x48c</addressOffset>
					<fields>
						<field>
							<name>EN_LA</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_EN_SHADOWED_6</name>
					<description>Enable register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x490</addressOffset>
					<fields>
						<field>
							<name>EN_LA</name>
							<description>Alert enable bit.Note that the alert pinging mechanism will only ping alerts that have been enabled and locked.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CLASS_SHADOWED_0</name>
					<description>Class assignment of the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x494</addressOffset>
					<fields>
						<field>
							<name>CLASS_LA</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CLASS_SHADOWED_1</name>
					<description>Class assignment of the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x498</addressOffset>
					<fields>
						<field>
							<name>CLASS_LA</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CLASS_SHADOWED_2</name>
					<description>Class assignment of the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x49c</addressOffset>
					<fields>
						<field>
							<name>CLASS_LA</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CLASS_SHADOWED_3</name>
					<description>Class assignment of the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4a0</addressOffset>
					<fields>
						<field>
							<name>CLASS_LA</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CLASS_SHADOWED_4</name>
					<description>Class assignment of the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4a4</addressOffset>
					<fields>
						<field>
							<name>CLASS_LA</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CLASS_SHADOWED_5</name>
					<description>Class assignment of the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4a8</addressOffset>
					<fields>
						<field>
							<name>CLASS_LA</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CLASS_SHADOWED_6</name>
					<description>Class assignment of the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4ac</addressOffset>
					<fields>
						<field>
							<name>CLASS_LA</name>
							<description>Classification</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CAUSE_0</name>
					<description>Alert Cause Register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4b0</addressOffset>
					<fields>
						<field>
							<name>LA</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CAUSE_1</name>
					<description>Alert Cause Register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4b4</addressOffset>
					<fields>
						<field>
							<name>LA</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CAUSE_2</name>
					<description>Alert Cause Register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4b8</addressOffset>
					<fields>
						<field>
							<name>LA</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CAUSE_3</name>
					<description>Alert Cause Register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4bc</addressOffset>
					<fields>
						<field>
							<name>LA</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CAUSE_4</name>
					<description>Alert Cause Register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4c0</addressOffset>
					<fields>
						<field>
							<name>LA</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CAUSE_5</name>
					<description>Alert Cause Register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4c4</addressOffset>
					<fields>
						<field>
							<name>LA</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOC_ALERT_CAUSE_6</name>
					<description>Alert Cause Register for the local alerts&quot;alert pingfail&quot; (0), &quot;escalation pingfail&quot; (1),&quot;alert integfail&quot; (2), &quot;escalation integfail&quot; (3),&quot;bus integrity failure&quot; (4), &quot;shadow reg update error&quot; (5)and &quot;shadow reg storage error&quot; (6).</description>
					<addressOffset>0x4c8</addressOffset>
					<fields>
						<field>
							<name>LA</name>
							<description>Cause bit</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_REGWEN</name>
					<description>Lock bit for Class A configuration.</description>
					<addressOffset>0x4cc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Class configuration enable bit.If this is cleared to 0, the corresponding class configurationregisters cannot be written anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_CTRL_SHADOWED</name>
					<description>Escalation control register for alert Class A. Can not be modified if !!CLASSA_REGWEN is false.</description>
					<addressOffset>0x4d0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Enable escalation mechanisms (accumulation andinterrupt timeout) for Class A. Note that interrupts can fireregardless of whether the escalation mechanisms are enabled forthis class or not.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>LOCK</name>
							<description>Enable automatic locking of escalation counter for class A.If true, there is no way to stop the escalation protocol for class Aonce it has been triggered.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E0</name>
							<description>Enable escalation signal 0 for Class A</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E1</name>
							<description>Enable escalation signal 1 for Class A</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E2</name>
							<description>Enable escalation signal 2 for Class A</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E3</name>
							<description>Enable escalation signal 3 for Class A</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E0</name>
							<description>Determines in which escalation phase escalation signal 0 shall be asserted.</description>
							<bitRange>[7:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E1</name>
							<description>Determines in which escalation phase escalation signal 1 shall be asserted.</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E2</name>
							<description>Determines in which escalation phase escalation signal 2 shall be asserted.</description>
							<bitRange>[11:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E3</name>
							<description>Determines in which escalation phase escalation signal 3 shall be asserted.</description>
							<bitRange>[13:12]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_CLR_REGWEN</name>
					<description>Clear enable for escalation protocol of Class A alerts.</description>
					<addressOffset>0x4d4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Register defaults to true, can only be cleared. This register is setto false by the hardware if the escalation protocol has been triggered and the bit!!CLASSA_CTRL_SHADOWED.LOCK is true.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_CLR_SHADOWED</name>
					<description>Clear for escalation protocol of Class A.</description>
					<addressOffset>0x4d8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Writing 1 to this register clears the accumulator and aborts escalation(if it has been triggered). This clear is disabled if !!CLASSA_CLR_REGWEN is false.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_ACCUM_CNT</name>
					<description>Current accumulation value for alert Class A. Software can clear this registerwith a write to !!CLASSA_CLR_SHADOWED register unless !!CLASSA_CLR_REGWEN is false.</description>
					<addressOffset>0x4dc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_ACCUM_THRESH_SHADOWED</name>
					<description>Accumulation threshold value for alert Class A.</description>
					<addressOffset>0x4e0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Once the accumulation value register is equal to the threshold escalation willbe triggered on the next alert occurrence within this class A begins. Note that thisregister can not be modified if !!CLASSA_REGWEN is false.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_TIMEOUT_CYC_SHADOWED</name>
					<description>Interrupt timeout in cycles.</description>
					<addressOffset>0x4e4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>If the interrupt corresponding to this class is nothandled within the specified amount of cycles, escalation will be triggered.Set to a positive value to enable the interrupt timeout for Class A. The timeout is set to zeroby default, which disables this feature. Note that this register can not be modified if!!CLASSA_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_CRASHDUMP_TRIGGER_SHADOWED</name>
					<description>Crashdump trigger configuration for Class A.</description>
					<addressOffset>0x4e8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Determine in which escalation phase to capture the crashdump containing all alert cause CSRs and escalationtimer states. It is recommended to capture the crashdump upon entering the first escalation phasethat activates a countermeasure with many side-effects (e.g. life cycle state scrapping) in orderto prevent spurious alert events from masking the original alert causes.Note that this register can not be modified if !!CLASSA_REGWEN is false.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_PHASE0_CYC_SHADOWED</name>
					<description>Duration of escalation phase 0 for Class A.</description>
					<addressOffset>0x4ec</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSA_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_PHASE1_CYC_SHADOWED</name>
					<description>Duration of escalation phase 1 for Class A.</description>
					<addressOffset>0x4f0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSA_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_PHASE2_CYC_SHADOWED</name>
					<description>Duration of escalation phase 2 for Class A.</description>
					<addressOffset>0x4f4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSA_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_PHASE3_CYC_SHADOWED</name>
					<description>Duration of escalation phase 3 for Class A.</description>
					<addressOffset>0x4f8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSA_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_ESC_CNT</name>
					<description>Escalation counter in cycles for Class A.</description>
					<addressOffset>0x4fc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Returns the current timeout or escalation count (depending on !!CLASSA_STATE).This register can not be directly cleared. However, SW can indirectly clear as follows.If the class is in the Timeout state, the timeout can be aborted by clearing thecorresponding interrupt bit.If this class is in any of the escalation phases (e.g. Phase0), escalation protocol can beaborted by writing to !!CLASSA_CLR_SHADOWED. Note however that has no effect if !!CLASSA_REGWENis set to false (either by SW or by HW via the !!CLASSA_CTRL_SHADOWED.LOCK feature).</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSA_STATE</name>
					<description>Current escalation state of Class A. See also !!CLASSA_ESC_CNT.</description>
					<addressOffset>0x500</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[2:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_REGWEN</name>
					<description>Lock bit for Class B configuration.</description>
					<addressOffset>0x504</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Class configuration enable bit.If this is cleared to 0, the corresponding class configurationregisters cannot be written anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_CTRL_SHADOWED</name>
					<description>Escalation control register for alert Class B. Can not be modified if !!CLASSB_REGWEN is false.</description>
					<addressOffset>0x508</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Enable escalation mechanisms (accumulation andinterrupt timeout) for Class B. Note that interrupts can fireregardless of whether the escalation mechanisms are enabled forthis class or not.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>LOCK</name>
							<description>Enable automatic locking of escalation counter for class B.If true, there is no way to stop the escalation protocol for class Bonce it has been triggered.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E0</name>
							<description>Enable escalation signal 0 for Class B</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E1</name>
							<description>Enable escalation signal 1 for Class B</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E2</name>
							<description>Enable escalation signal 2 for Class B</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E3</name>
							<description>Enable escalation signal 3 for Class B</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E0</name>
							<description>Determines in which escalation phase escalation signal 0 shall be asserted.</description>
							<bitRange>[7:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E1</name>
							<description>Determines in which escalation phase escalation signal 1 shall be asserted.</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E2</name>
							<description>Determines in which escalation phase escalation signal 2 shall be asserted.</description>
							<bitRange>[11:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E3</name>
							<description>Determines in which escalation phase escalation signal 3 shall be asserted.</description>
							<bitRange>[13:12]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_CLR_REGWEN</name>
					<description>Clear enable for escalation protocol of Class B alerts.</description>
					<addressOffset>0x50c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Register defaults to true, can only be cleared. This register is setto false by the hardware if the escalation protocol has been triggered and the bit!!CLASSB_CTRL_SHADOWED.LOCK is true.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_CLR_SHADOWED</name>
					<description>Clear for escalation protocol of Class B.</description>
					<addressOffset>0x510</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Writing 1 to this register clears the accumulator and aborts escalation(if it has been triggered). This clear is disabled if !!CLASSB_CLR_REGWEN is false.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_ACCUM_CNT</name>
					<description>Current accumulation value for alert Class B. Software can clear this registerwith a write to !!CLASSB_CLR_SHADOWED register unless !!CLASSB_CLR_REGWEN is false.</description>
					<addressOffset>0x514</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_ACCUM_THRESH_SHADOWED</name>
					<description>Accumulation threshold value for alert Class B.</description>
					<addressOffset>0x518</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Once the accumulation value register is equal to the threshold escalation willbe triggered on the next alert occurrence within this class B begins. Note that thisregister can not be modified if !!CLASSB_REGWEN is false.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_TIMEOUT_CYC_SHADOWED</name>
					<description>Interrupt timeout in cycles.</description>
					<addressOffset>0x51c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>If the interrupt corresponding to this class is nothandled within the specified amount of cycles, escalation will be triggered.Set to a positive value to enable the interrupt timeout for Class B. The timeout is set to zeroby default, which disables this feature. Note that this register can not be modified if!!CLASSB_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_CRASHDUMP_TRIGGER_SHADOWED</name>
					<description>Crashdump trigger configuration for Class B.</description>
					<addressOffset>0x520</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Determine in which escalation phase to capture the crashdump containing all alert cause CSRs and escalationtimer states. It is recommended to capture the crashdump upon entering the first escalation phasethat activates a countermeasure with many side-effects (e.g. life cycle state scrapping) in orderto prevent spurious alert events from masking the original alert causes.Note that this register can not be modified if !!CLASSB_REGWEN is false.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_PHASE0_CYC_SHADOWED</name>
					<description>Duration of escalation phase 0 for Class B.</description>
					<addressOffset>0x524</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSB_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_PHASE1_CYC_SHADOWED</name>
					<description>Duration of escalation phase 1 for Class B.</description>
					<addressOffset>0x528</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSB_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_PHASE2_CYC_SHADOWED</name>
					<description>Duration of escalation phase 2 for Class B.</description>
					<addressOffset>0x52c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSB_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_PHASE3_CYC_SHADOWED</name>
					<description>Duration of escalation phase 3 for Class B.</description>
					<addressOffset>0x530</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSB_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_ESC_CNT</name>
					<description>Escalation counter in cycles for Class B.</description>
					<addressOffset>0x534</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Returns the current timeout or escalation count (depending on !!CLASSB_STATE).This register can not be directly cleared. However, SW can indirectly clear as follows.If the class is in the Timeout state, the timeout can be aborted by clearing thecorresponding interrupt bit.If this class is in any of the escalation phases (e.g. Phase0), escalation protocol can beaborted by writing to !!CLASSB_CLR_SHADOWED. Note however that has no effect if !!CLASSB_REGWENis set to false (either by SW or by HW via the !!CLASSB_CTRL_SHADOWED.LOCK feature).</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSB_STATE</name>
					<description>Current escalation state of Class B. See also !!CLASSB_ESC_CNT.</description>
					<addressOffset>0x538</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[2:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_REGWEN</name>
					<description>Lock bit for Class C configuration.</description>
					<addressOffset>0x53c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Class configuration enable bit.If this is cleared to 0, the corresponding class configurationregisters cannot be written anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_CTRL_SHADOWED</name>
					<description>Escalation control register for alert Class C. Can not be modified if !!CLASSC_REGWEN is false.</description>
					<addressOffset>0x540</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Enable escalation mechanisms (accumulation andinterrupt timeout) for Class C. Note that interrupts can fireregardless of whether the escalation mechanisms are enabled forthis class or not.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>LOCK</name>
							<description>Enable automatic locking of escalation counter for class C.If true, there is no way to stop the escalation protocol for class Conce it has been triggered.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E0</name>
							<description>Enable escalation signal 0 for Class C</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E1</name>
							<description>Enable escalation signal 1 for Class C</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E2</name>
							<description>Enable escalation signal 2 for Class C</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E3</name>
							<description>Enable escalation signal 3 for Class C</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E0</name>
							<description>Determines in which escalation phase escalation signal 0 shall be asserted.</description>
							<bitRange>[7:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E1</name>
							<description>Determines in which escalation phase escalation signal 1 shall be asserted.</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E2</name>
							<description>Determines in which escalation phase escalation signal 2 shall be asserted.</description>
							<bitRange>[11:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E3</name>
							<description>Determines in which escalation phase escalation signal 3 shall be asserted.</description>
							<bitRange>[13:12]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_CLR_REGWEN</name>
					<description>Clear enable for escalation protocol of Class C alerts.</description>
					<addressOffset>0x544</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Register defaults to true, can only be cleared. This register is setto false by the hardware if the escalation protocol has been triggered and the bit!!CLASSC_CTRL_SHADOWED.LOCK is true.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_CLR_SHADOWED</name>
					<description>Clear for escalation protocol of Class C.</description>
					<addressOffset>0x548</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Writing 1 to this register clears the accumulator and aborts escalation(if it has been triggered). This clear is disabled if !!CLASSC_CLR_REGWEN is false.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_ACCUM_CNT</name>
					<description>Current accumulation value for alert Class C. Software can clear this registerwith a write to !!CLASSC_CLR_SHADOWED register unless !!CLASSC_CLR_REGWEN is false.</description>
					<addressOffset>0x54c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_ACCUM_THRESH_SHADOWED</name>
					<description>Accumulation threshold value for alert Class C.</description>
					<addressOffset>0x550</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Once the accumulation value register is equal to the threshold escalation willbe triggered on the next alert occurrence within this class C begins. Note that thisregister can not be modified if !!CLASSC_REGWEN is false.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_TIMEOUT_CYC_SHADOWED</name>
					<description>Interrupt timeout in cycles.</description>
					<addressOffset>0x554</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>If the interrupt corresponding to this class is nothandled within the specified amount of cycles, escalation will be triggered.Set to a positive value to enable the interrupt timeout for Class C. The timeout is set to zeroby default, which disables this feature. Note that this register can not be modified if!!CLASSC_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_CRASHDUMP_TRIGGER_SHADOWED</name>
					<description>Crashdump trigger configuration for Class C.</description>
					<addressOffset>0x558</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Determine in which escalation phase to capture the crashdump containing all alert cause CSRs and escalationtimer states. It is recommended to capture the crashdump upon entering the first escalation phasethat activates a countermeasure with many side-effects (e.g. life cycle state scrapping) in orderto prevent spurious alert events from masking the original alert causes.Note that this register can not be modified if !!CLASSC_REGWEN is false.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_PHASE0_CYC_SHADOWED</name>
					<description>Duration of escalation phase 0 for Class C.</description>
					<addressOffset>0x55c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSC_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_PHASE1_CYC_SHADOWED</name>
					<description>Duration of escalation phase 1 for Class C.</description>
					<addressOffset>0x560</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSC_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_PHASE2_CYC_SHADOWED</name>
					<description>Duration of escalation phase 2 for Class C.</description>
					<addressOffset>0x564</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSC_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_PHASE3_CYC_SHADOWED</name>
					<description>Duration of escalation phase 3 for Class C.</description>
					<addressOffset>0x568</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSC_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_ESC_CNT</name>
					<description>Escalation counter in cycles for Class C.</description>
					<addressOffset>0x56c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Returns the current timeout or escalation count (depending on !!CLASSC_STATE).This register can not be directly cleared. However, SW can indirectly clear as follows.If the class is in the Timeout state, the timeout can be aborted by clearing thecorresponding interrupt bit.If this class is in any of the escalation phases (e.g. Phase0), escalation protocol can beaborted by writing to !!CLASSC_CLR_SHADOWED. Note however that has no effect if !!CLASSC_REGWENis set to false (either by SW or by HW via the !!CLASSC_CTRL_SHADOWED.LOCK feature).</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSC_STATE</name>
					<description>Current escalation state of Class C. See also !!CLASSC_ESC_CNT.</description>
					<addressOffset>0x570</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[2:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_REGWEN</name>
					<description>Lock bit for Class D configuration.</description>
					<addressOffset>0x574</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Class configuration enable bit.If this is cleared to 0, the corresponding class configurationregisters cannot be written anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_CTRL_SHADOWED</name>
					<description>Escalation control register for alert Class D. Can not be modified if !!CLASSD_REGWEN is false.</description>
					<addressOffset>0x578</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Enable escalation mechanisms (accumulation andinterrupt timeout) for Class D. Note that interrupts can fireregardless of whether the escalation mechanisms are enabled forthis class or not.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>LOCK</name>
							<description>Enable automatic locking of escalation counter for class D.If true, there is no way to stop the escalation protocol for class Donce it has been triggered.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E0</name>
							<description>Enable escalation signal 0 for Class D</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E1</name>
							<description>Enable escalation signal 1 for Class D</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E2</name>
							<description>Enable escalation signal 2 for Class D</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_E3</name>
							<description>Enable escalation signal 3 for Class D</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E0</name>
							<description>Determines in which escalation phase escalation signal 0 shall be asserted.</description>
							<bitRange>[7:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E1</name>
							<description>Determines in which escalation phase escalation signal 1 shall be asserted.</description>
							<bitRange>[9:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E2</name>
							<description>Determines in which escalation phase escalation signal 2 shall be asserted.</description>
							<bitRange>[11:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAP_E3</name>
							<description>Determines in which escalation phase escalation signal 3 shall be asserted.</description>
							<bitRange>[13:12]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_CLR_REGWEN</name>
					<description>Clear enable for escalation protocol of Class D alerts.</description>
					<addressOffset>0x57c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Register defaults to true, can only be cleared. This register is setto false by the hardware if the escalation protocol has been triggered and the bit!!CLASSD_CTRL_SHADOWED.LOCK is true.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_CLR_SHADOWED</name>
					<description>Clear for escalation protocol of Class D.</description>
					<addressOffset>0x580</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Writing 1 to this register clears the accumulator and aborts escalation(if it has been triggered). This clear is disabled if !!CLASSD_CLR_REGWEN is false.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_ACCUM_CNT</name>
					<description>Current accumulation value for alert Class D. Software can clear this registerwith a write to !!CLASSD_CLR_SHADOWED register unless !!CLASSD_CLR_REGWEN is false.</description>
					<addressOffset>0x584</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_ACCUM_THRESH_SHADOWED</name>
					<description>Accumulation threshold value for alert Class D.</description>
					<addressOffset>0x588</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Once the accumulation value register is equal to the threshold escalation willbe triggered on the next alert occurrence within this class D begins. Note that thisregister can not be modified if !!CLASSD_REGWEN is false.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_TIMEOUT_CYC_SHADOWED</name>
					<description>Interrupt timeout in cycles.</description>
					<addressOffset>0x58c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>If the interrupt corresponding to this class is nothandled within the specified amount of cycles, escalation will be triggered.Set to a positive value to enable the interrupt timeout for Class D. The timeout is set to zeroby default, which disables this feature. Note that this register can not be modified if!!CLASSD_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_CRASHDUMP_TRIGGER_SHADOWED</name>
					<description>Crashdump trigger configuration for Class D.</description>
					<addressOffset>0x590</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Determine in which escalation phase to capture the crashdump containing all alert cause CSRs and escalationtimer states. It is recommended to capture the crashdump upon entering the first escalation phasethat activates a countermeasure with many side-effects (e.g. life cycle state scrapping) in orderto prevent spurious alert events from masking the original alert causes.Note that this register can not be modified if !!CLASSD_REGWEN is false.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_PHASE0_CYC_SHADOWED</name>
					<description>Duration of escalation phase 0 for Class D.</description>
					<addressOffset>0x594</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSD_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_PHASE1_CYC_SHADOWED</name>
					<description>Duration of escalation phase 1 for Class D.</description>
					<addressOffset>0x598</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSD_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_PHASE2_CYC_SHADOWED</name>
					<description>Duration of escalation phase 2 for Class D.</description>
					<addressOffset>0x59c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSD_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_PHASE3_CYC_SHADOWED</name>
					<description>Duration of escalation phase 3 for Class D.</description>
					<addressOffset>0x5a0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Escalation phase duration in cycles. Note that this register can not bemodified if !!CLASSD_REGWEN is false.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_ESC_CNT</name>
					<description>Escalation counter in cycles for Class D.</description>
					<addressOffset>0x5a4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Returns the current timeout or escalation count (depending on !!CLASSD_STATE).This register can not be directly cleared. However, SW can indirectly clear as follows.If the class is in the Timeout state, the timeout can be aborted by clearing thecorresponding interrupt bit.If this class is in any of the escalation phases (e.g. Phase0), escalation protocol can beaborted by writing to !!CLASSD_CLR_SHADOWED. Note however that has no effect if !!CLASSD_REGWENis set to false (either by SW or by HW via the !!CLASSD_CTRL_SHADOWED.LOCK feature).</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLASSD_STATE</name>
					<description>Current escalation state of Class D. See also !!CLASSD_ESC_CNT.</description>
					<addressOffset>0x5a8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[2:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>SPI_HOST0</name>
			<version>1.0.0</version>
			<description>Serial peripheral interface for host mode, suitable for interfacing external serial NOR flash devices</description>
			<baseAddress>0x40300000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>SPI_HOST0 IRQ</name>
				<value>14</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CONTROL</name>
					<description>Control register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>SPIEN</name>
							<description>Enables the SPI host. On reset, this field is 0, meaning that no transactions can proceed.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SW_RST</name>
							<description>Clears the entire IP to the reset state when set to 1, including the FIFOs, the CDC's, the core state machine and the shift register. In the current implementation, the CDC FIFOs are drained not reset. Therefore software must confirm that both FIFO's empty before releasing the IP from reset.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>OUTPUT_EN</name>
							<description>Enable the SPI host output buffers for the sck, csb, and sd lines. This allows the SPI_HOST IP to connect to the same bus as other SPI controllers without interference.</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>TX_WATERMARK</name>
							<description>If !!EVENT_ENABLE.TXWM is set, the IP will send an interrupt when the depth of the TX FIFO drops below TX_WATERMARK words (32b each).</description>
							<bitRange>[15:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RX_WATERMARK</name>
							<description>If !!EVENT_ENABLE.RXWM is set, the IP will send an interrupt when the depth of the RX FIFO reaches RX_WATERMARK words (32b each).</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>Status register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>READY</name>
							<description>When high, indicates the SPI host is ready to receive commands. Writing to COMMAND when READY is low is an error, and will trigger an interrupt.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ACTIVE</name>
							<description>When high, indicates the SPI host is processing a previously issued command.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXFULL</name>
							<description>When high, indicates that the transmit data fifo is full. Any further writes to !!RXDATA will create an error interrupt.</description>
							<bitRange>[29:29]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXEMPTY</name>
							<description>When high, indicates that the transmit data fifo is empty. Note, one transmit item can be pending in the internal transmit datapath (inside the spi_host_byte_select module). This means the transmit data fifo is empty and TXEMTPY will be high, while there is still one packet that needs to be transmitted.</description>
							<bitRange>[28:28]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXSTALL</name>
							<description>If high, signifies that an ongoing transaction has stalled due to lack of data in the TX FIFO</description>
							<bitRange>[27:27]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXWM</name>
							<description>If high, the amount of data in the TX FIFO has fallen below the level of !!CONTROL.TX_WATERMARK words (32b each).</description>
							<bitRange>[26:26]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXFULL</name>
							<description>When high, indicates that the receive fifo is full. Any ongoing transactions will stall until firmware reads some data from !!RXDATA.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXEMPTY</name>
							<description>When high, indicates that the receive fifo is empty. Any reads from RX FIFO will cause an error interrupt.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXSTALL</name>
							<description>If high, signifies that an ongoing transaction has stalled due to lack of available space in the RX FIFO</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYTEORDER</name>
							<description>The value of the ByteOrder parameter, provided so that firmware can confirm proper IP configuration.</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXWM</name>
							<description>If high, the number of 32-bits in the RX FIFO now exceeds the !!CONTROL.RX_WATERMARK entries (32b each).</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CMDQD</name>
							<description>Command queue depth. Indicates how many unread 32-bit words are currently in the command segment queue.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RXQD</name>
							<description>Receive queue depth. Indicates how many unread 32-bit words are currently in the RX FIFO. When active, this result may an underestimate due to synchronization delays.</description>
							<bitRange>[15:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>TXQD</name>
							<description>Transmit queue depth. Indicates how many unsent 32-bit words are currently in the TX FIFO. When active, this result may be an overestimate due to synchronization delays. It may also be an underestimate by 1 because of one pending transmit packet in the internal transmit datapath (inside the spi_host_byte_select module).</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CONFIGOPTS_0</name>
					<description>Configuration options register. Contains options for controlling each peripheral. One register per cs_n line</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>CPOL</name>
							<description>The polarity of the sck clock signal. When CPOL is 0, sck is low when idle, and emits high pulses. When CPOL is 1, sck is high when idle, and emits a series of low pulses.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CPHA</name>
							<description>The phase of the sck clock signal relative to the data. When CPHA = 0, the data changes on the trailing edge of sck and is typically sampled on the leading edge. Conversely if CPHA = 1 high, data lines change on the leading edge of sck and are typically sampled on the trailing edge. CPHA should be chosen to match the phase of the selected device. The sampling behavior is modified by the !!CONFIGOPTS.FULLCYC bit.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FULLCYC</name>
							<description>Full cycle. Modifies the CPHA sampling behaviour to allow for longer device logic setup times. Rather than sampling the SD bus a half cycle after shifting out data, the data is sampled a full cycle after shifting data out. This means that if CPHA = 0, data is shifted out on the trailing edge, and sampled a full cycle later. If CPHA = 1, data is shifted and sampled with the trailing edge, also separated by a full cycle.</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CSNLEAD</name>
							<description>CS_N Leading Time. Indicates the number of half sck cycles, CSNLEAD+1, to leave between the falling edge of cs_n and the first edge of sck. Setting this register to zero corresponds to the minimum delay of one-half sck cycle</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CSNTRAIL</name>
							<description>CS_N Trailing Time. Indicates the number of half sck cycles, CSNTRAIL+1, to leave between last edge of sck and the rising edge of cs_n. Setting this register to zero corresponds to the minimum delay of one-half sck cycle.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CSNIDLE</name>
							<description>Minimum idle time between commands. Indicates the minimum number of sck half-cycles to hold cs_n high between commands. Setting this register to zero creates a minimally-wide CS_N-high pulse of one-half sck cycle.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CLKDIV</name>
							<description>Core clock divider. Slows down subsequent SPI transactions by a factor of (CLKDIV+1) relative to the core clock frequency. The period of sck, T(sck) then becomes `2*(CLK_DIV+1)*T(core)`</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSID</name>
					<description>Chip-Select ID Controls which device to target with the next command. This register is passed to the core whenever !!COMMAND is written. The core then asserts cio_csb_o[!!CSID] during the execution of the command.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>CSID</name>
							<description>Chip Select ID</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COMMAND</name>
					<description>Command Register Parameters specific to each command segment. Unlike the !!CONFIGOPTS multi-register, there is only one command register for controlling all attached SPI devices</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>DIRECTION</name>
							<description>The direction for the following command: &quot;0&quot; = Dummy cycles (no TX/RX). &quot;1&quot; = Rx only, &quot;2&quot; = Tx only, &quot;3&quot; = Bidirectional Tx/Rx (Standard SPI mode only).</description>
							<bitRange>[13:12]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>SPEED</name>
							<description>The speed for this command segment: &quot;0&quot; = Standard SPI. &quot;1&quot; = Dual SPI. &quot;2&quot;=Quad SPI, &quot;3&quot;: RESERVED.</description>
							<bitRange>[11:10]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>CSAAT</name>
							<description>Chip select active after transaction. If CSAAT = 0, the chip select line is raised immediately at the end of the command segment. If !!COMMAND.CSAAT = 1, the chip select line is left low at the end of the current transaction segment. This allows the creation longer, more complete SPI transactions, consisting of several separate segments for issuing instructions, pausing for dummy cycles, and transmitting or receiving data from the device.</description>
							<bitRange>[9:9]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>LEN</name>
							<description>Segment Length. For read or write segments, this field controls the number of 1-byte bursts to transmit and or receive in this command segment. The number of cyles required to send or received a byte will depend on !!COMMAND.SPEED. For dummy segments, (!!COMMAND.DIRECTION == 0), this register controls the number of dummy cycles to issue. The number of bytes (or dummy cycles) in the segment will be equal to !!COMMAND.LEN + 1.</description>
							<bitRange>[8:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERROR_ENABLE</name>
					<description>Controls which classes of errors raise an interrupt.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>CSIDINVAL</name>
							<description>Invalid CSID: If this bit is set, the block sends an error interrupt whenever a command is submitted, but CSID exceeds NumCS.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CMDINVAL</name>
							<description>Invalid Command Errors: If this bit is set, the block sends an error interrupt whenever a command is sent with invalid values for !!COMMAND.SPEED or !!COMMAND.DIRECTION.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>UNDERFLOW</name>
							<description>Underflow Errors: If this bit is set, the block sends an error interrupt whenever there is a read from !!RXDATA but the RX FIFO is empty.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>OVERFLOW</name>
							<description>Overflow Errors: If this bit is set, the block sends an error interrupt whenever the TX FIFO overflows.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CMDBUSY</name>
							<description>Command Error: If this bit is set, the block sends an error interrupt whenever a command is issued while busy (i.e. a 1 is when !!STATUS.READY is not asserted.)</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERROR_STATUS</name>
					<description>Indicates that any errors that have occurred. When an error occurs, the corresponding bit must be cleared here before issuing any further commands.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>ACCESSINVAL</name>
							<description>Indicates that TLUL attempted to write to TXDATA with no bytes enabled. Such 'zero byte' writes are not supported.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CSIDINVAL</name>
							<description>Indicates a command was attempted with an invalid value for !!CSID.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CMDINVAL</name>
							<description>Indicates an invalid command segment, meaning either an invalid value of !!COMMAND.SPEED or a request for bidirectional data transfer at dual or quad speed</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>UNDERFLOW</name>
							<description>Indicates that firmware has attempted to read from !!RXDATA when the RX FIFO is empty.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>OVERFLOW</name>
							<description>Indicates that firmware has overflowed the TX FIFO</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CMDBUSY</name>
							<description>Indicates a write to !!COMMAND when !!STATUS.READY = 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EVENT_ENABLE</name>
					<description>Controls which classes of SPI events raise an interrupt.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>IDLE</name>
							<description>Assert to send a spi_event interrupt whenever !!STATUS.ACTIVE goes low</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>READY</name>
							<description>Assert to send a spi_event interrupt whenever !!STATUS.READY goes high</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>TXWM</name>
							<description>Assert to send a spi_event interrupt whenever the number of 32-bit words in the TX FIFO is less than !!CONTROL.TX_WATERMARK. To prevent the reassertion of this interrupt add more data to the TX FIFO, or reduce !!CONTROL.TX_WATERMARK.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RXWM</name>
							<description>Assert to send a spi_event interrupt whenever the number of 32-bit words in the RX FIFO is greater than !!CONTROL.RX_WATERMARK. To prevent the reassertion of this interrupt, read more data from the RX FIFO, or increase !!CONTROL.RX_WATERMARK.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>TXEMPTY</name>
							<description>Assert to send a spi_event interrupt whenever !!STATUS.TXEMPTY goes high</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RXFULL</name>
							<description>Assert to send a spi_event interrupt whenever !!STATUS.RXFULL goes high</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="SPI_HOST0">
			<name>SPI_HOST1</name>
			<version>1.0.0</version>
			<description>Serial peripheral interface for host mode, suitable for interfacing external serial NOR flash devices</description>
			<baseAddress>0x40310000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>SPI_HOST1 IRQ</name>
				<value>15</value>
			</interrupt>
		</peripheral>
		<peripheral>
			<name>USBDEV</name>
			<version>1.0.0</version>
			<description>USB 2.0 Full Speed device interface (12 Mbit/s)</description>
			<baseAddress>0x40320000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>USBDEV IRQ</name>
				<value>16</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>usbctrl</name>
					<description>USB Control</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>enable</name>
							<description>Set to connect the USB interface (i.e. assert the pullup).</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>resume_link_active</name>
							<description>Write a 1 to this bit to instruct usbdev to jump to the LinkResuming state.The write will only have an effect when the device is in the LinkPowered state.Its intention is to handle a resume-from-suspend event after the IP has been powered down.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>device_address</name>
							<description>Device address set by host (this should be copied fromthe Set Device ID SETUP packet).This will be zeroed by the hardware when the link resets.</description>
							<bitRange>[22:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ep_out_enable</name>
					<description>Enable an endpoint to respond to transactions in the downstream direction.Note that as the default endpoint, endpoint 0 must be enabled in both the IN and OUT directions before enabling the USB interface to connect.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>enable_0</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_1</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_2</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_3</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_4</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_5</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_6</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_7</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_8</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_9</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_10</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_11</name>
							<description>This bit must be set to enable downstream transactions to be received on the endpoint and elicit responses.If the bit is clear, any SETUP or OUT packets sent to the endpoint will be ignored.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ep_in_enable</name>
					<description>Enable an endpoint to respond to transactions in the upstream direction.Note that as the default endpoint, endpoint 0 must be enabled in both the IN and OUT directions before enabling the USB interface to connect.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>enable_0</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_1</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_2</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_3</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_4</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_5</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_6</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_7</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_8</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_9</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_10</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_11</name>
							<description>This bit must be set to enable upstream transactions to be received on the endpoint and elicit responses.If the bit is clear then any IN packets sent to the endpoint will be ignored.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>usbstat</name>
					<description>USB Status</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>frame</name>
							<description>Frame index received from host. On an active link, this will increment every milisecond.</description>
							<bitRange>[10:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>host_lost</name>
							<description>Start of frame not received from host for 4.096 ms and the line is active.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>link_state</name>
							<description>State of USB link, decoded from line.</description>
							<bitRange>[14:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>sense</name>
							<description>Reflects the state of the sense pin.1 indicates that the host is providing VBUS.Note that this bit always shows the state of the actual pin and does not take account of the override control.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>av_depth</name>
							<description>Number of buffers in the Available Buffer FIFO.These buffers are available for receiving packets.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>av_full</name>
							<description>Available Buffer FIFO is full.</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>rx_depth</name>
							<description>Number of buffers in the Received Buffer FIFO.These buffers have packets that have been received andshould be popped from the FIFO and processed.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>rx_empty</name>
							<description>Received Buffer FIFO is empty.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>avbuffer</name>
					<description>Available Buffer FIFO</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>This field contains the buffer ID being passed to the USB receive engine.If the Available Buffer FIFO is full, any write operations are discarded.</description>
							<bitRange>[4:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>rxfifo</name>
					<description>Received Buffer FIFO</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>This field contains the buffer ID that data was received into.On read the buffer ID is popped from the Received Buffer FIFO and returned to software.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>size</name>
							<description>This field contains the data length in bytes of the packet written to the buffer.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>setup</name>
							<description>This bit indicates if the received transaction is of type SETUP (1) or OUT (0).</description>
							<bitRange>[19:19]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ep</name>
							<description>This field contains the endpoint ID to which the packet was directed.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>rxenable_setup</name>
					<description>Receive SETUP transaction enable</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>setup_0</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_1</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_2</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_3</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_4</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_5</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_6</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_7</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_8</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_9</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_10</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>setup_11</name>
							<description>This bit must be set to enable SETUP transactions to bereceived on the endpoint. If the bit is clear then aSETUP packet will be ignored. The bit should be set forcontrol endpoints (and only control endpoints).</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>rxenable_out</name>
					<description>Receive OUT transaction enable</description>
					<addressOffset>0xe0</addressOffset>
					<fields>
						<field>
							<name>out_0</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_1</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_2</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_3</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_4</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_5</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_6</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_7</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_8</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_9</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_10</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>out_11</name>
							<description>This bit must be set to enable OUT transactions to be received on the endpoint.If the bit is clear then an OUT request will be responded to with a NAK, if the endpoint is enabled.If set_nak_out for this endpoint is set, hardware will clear this bit whenever an OUT transaction is received on this endpoint.Software must set this bit again to receive the next OUT transaction.Until that happens, hardware will continue to NAK any OUT transaction to this endpoint.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>set_nak_out</name>
					<description>Set NAK after OUT transactions</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>enable_0</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_1</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_2</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_3</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_4</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_5</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_6</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_7</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_8</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_9</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_10</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>enable_11</name>
							<description>When this bit is set, hardware will clear this endpoint's rxenable_out bit whenever an OUT transaction is received on this endpoint.This bit should not be changed while the endpoint is active.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>in_sent</name>
					<description>IN Transaction Sent</description>
					<addressOffset>0x140</addressOffset>
					<fields>
						<field>
							<name>sent_0</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_1</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_2</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_3</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_4</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_5</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_6</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_7</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_8</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_9</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_10</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sent_11</name>
							<description>This bit will be set when the ACK is received fromthe host to indicate successful packet deliveryas part of an IN transaction.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>out_stall</name>
					<description>OUT Endpoint STALL control</description>
					<addressOffset>0x170</addressOffset>
					<fields>
						<field>
							<name>endpoint_0</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_1</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_2</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_3</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_4</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_5</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_6</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_7</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_8</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_9</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_10</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_11</name>
							<description>If this bit is set then an OUT transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>in_stall</name>
					<description>IN Endpoint STALL control</description>
					<addressOffset>0x1a0</addressOffset>
					<fields>
						<field>
							<name>endpoint_0</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_1</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_2</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_3</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_4</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_5</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_6</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_7</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_8</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_9</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_10</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endpoint_11</name>
							<description>If this bit is set then an IN transaction to this endpoint will elicit a STALL handshake, when a non-isochronous endpoint is enabled.If the configuration has both STALL and NAK enabled, the STALL handshake will take priority.Note that SETUP transactions are always either accepted or ignored.For endpoints that accept SETUP transactions, a SETUP packet will clear the STALL flag on endpoints for both the IN and OUT directions.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_0</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1d0</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_1</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1d4</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_2</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1d8</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_3</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1dc</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_4</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1e0</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_5</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1e4</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_6</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1e8</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_7</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1ec</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_8</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1f0</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_9</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1f4</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_10</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1f8</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>configin_11</name>
					<description>Configure IN Transaction</description>
					<addressOffset>0x1fc</addressOffset>
					<fields>
						<field>
							<name>buffer</name>
							<description>The buffer ID containing the data to send when an IN transaction is received on the endpoint.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>size</name>
							<description>The number of bytes to send from the buffer.If this is 0 then a CRC only packet is sent.If this is greater than 64 then 64 bytes are sent.</description>
							<bitRange>[14:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pend</name>
							<description>This bit indicates a pending transaction was canceled by the hardware.The bit is set when the rdy bit is cleared by hardware because of aSETUP packet being received or a link reset being detected.The bit remains set until cleared by being written with a 1.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rdy</name>
							<description>This bit should be set to indicate the buffer is ready for sending.It will be cleared when the ACK is received indicating the host has accepted the data.This bit will also be cleared if an enabled SETUP transaction is received on the endpoint.This allows use of the IN channel for transfer of SETUP information.The original buffer must be resubmitted after the SETUP sequence is complete.A link reset also clears the bit.In either of the cases where the hardware cancels the transaction it will also set the pend bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>out_iso</name>
					<description>OUT Endpoint isochronous setting</description>
					<addressOffset>0x200</addressOffset>
					<fields>
						<field>
							<name>iso_0</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_1</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_2</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_3</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_4</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_5</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_6</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_7</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_8</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_9</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_10</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_11</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be sent for an OUT transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>in_iso</name>
					<description>IN Endpoint isochronous setting</description>
					<addressOffset>0x230</addressOffset>
					<fields>
						<field>
							<name>iso_0</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_1</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_2</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_3</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_4</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_5</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_6</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_7</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_8</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_9</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_10</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>iso_11</name>
							<description>If this bit is set then the endpoint will be treated as an isochronous endpoint.No handshake packet will be expected for an IN transaction.Note that if a rxenable_setup is set for this endpoint's number, this bit will not take effect.Control endpoint configuration trumps isochronous endpoint configuration.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>data_toggle_clear</name>
					<description>Clear the data toggle flag</description>
					<addressOffset>0x260</addressOffset>
					<fields>
						<field>
							<name>clear_0</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_1</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[1:1]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_2</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[2:2]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_3</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[3:3]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_4</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[4:4]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_5</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[5:5]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_6</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[6:6]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_7</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[7:7]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_8</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[8:8]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_9</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[9:9]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_10</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[10:10]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>clear_11</name>
							<description>Writing 1 to this bit will clear the data toggle bit for this endpoint to Data0 in both IN and OUT directions.The register must no be written again within 200 ns.</description>
							<bitRange>[11:11]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>phy_pins_sense</name>
					<description>USB PHY pins sense.This register can be used to read out the state of the USB device inputs and outputs from software.This is designed to be used for debugging purposes or during chip testing.</description>
					<addressOffset>0x290</addressOffset>
					<fields>
						<field>
							<name>rx_dp_i</name>
							<description>USB D+ input.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>rx_dn_i</name>
							<description>USB D- input.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>rx_d_i</name>
							<description>USB data input from an external differential receiver, if available.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>tx_dp_o</name>
							<description>USB transmit D+ output (readback).</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>tx_dn_o</name>
							<description>USB transmit D- output (readback).</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>tx_d_o</name>
							<description>USB transmit data value (readback).</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>tx_se0_o</name>
							<description>USB single-ended zero output (readback).</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>tx_oe_o</name>
							<description>USB OE output (readback).</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>pwr_sense</name>
							<description>USB power sense signal.</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>phy_pins_drive</name>
					<description>USB PHY pins drive.This register can be used to control the USB device inputs and outputs from software.This is designed to be used for debugging purposes or during chip testing.</description>
					<addressOffset>0x294</addressOffset>
					<fields>
						<field>
							<name>dp_o</name>
							<description>USB transmit D+ output, used with dn_o.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dn_o</name>
							<description>USB transmit D- output, used with dp_o.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>d_o</name>
							<description>USB transmit data output, encoding K and J when se0_o is 0.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>se0_o</name>
							<description>USB single-ended zero output.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>oe_o</name>
							<description>USB OE output.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rx_enable_o</name>
							<description>Enable differential receiver.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dp_pullup_en_o</name>
							<description>USB D+ pullup enable output.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dn_pullup_en_o</name>
							<description>USB D- pullup enable output.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>en</name>
							<description>0: Outputs are controlled by the hardware block.1: Outputs are controlled with this register.</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>phy_config</name>
					<description>USB PHY Configuration</description>
					<addressOffset>0x298</addressOffset>
					<fields>
						<field>
							<name>use_diff_rcvr</name>
							<description>Detect received K and J symbols from the usb_rx_d signal, which must be driven from an external differential receiver.If 1, make use of the usb_rx_d input.If 0, the usb_rx_d input is ignored and the usb_rx_dp and usb_rx_dn pair are used to detect K and J (useful for some environments, but will be unlikely to pass full USB compliance).Regardless of the state of this field usb_rx_dp and usb_rx_dn are always used to detect SE0.This bit also feeds the rx_enable pin, activating the receiver when the device is not suspended.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>tx_use_d_se0</name>
							<description>If 1, select the d and se0 TX interface.If 0, select the dp and dn TX interface.This directly controls the output pin of the same name.It is intended to be used to enable the use of a variety of external transceivers, to select an encoding that matches the transceiver.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>eop_single_bit</name>
							<description>Recognize a single SE0 bit as an end of packet, otherwise two successive bits are required.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pinflip</name>
							<description>Flip the D+/D- pins.Particularly useful if D+/D- are mapped to SBU1/SBU2 pins of USB-C.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>usb_ref_disable</name>
							<description>0: Enable reference signal generation for clock synchronization, 1: disable it by forcing the associated signals to zero.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>tx_osc_test_mode</name>
							<description>Disable (0) or enable (1) oscillator test mode.If enabled, the device constantly transmits a J/K pattern, which is useful for testing the USB clock.Note that while in oscillator test mode, the device no longer receives SOFs and consequently does not generate the reference signal for clock synchronization.The clock might drift off.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>wake_control</name>
					<description>USB wake module control for suspend / resume</description>
					<addressOffset>0x29c</addressOffset>
					<fields>
						<field>
							<name>suspend_req</name>
							<description>Suspend request to the wake detection module.Trigger the wake detection module to begin monitoring for wake-from-suspend events.When written with a 1, the wake detection module will activate.Activation may not happen immediately, and its status can be verified by checking wake_events.module_active.</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>wake_ack</name>
							<description>Wake acknowledgement.Signal to the wake detection module that it may release control of the pull-ups back to the main block and return to an inactive state.The release back to normal state may not happen immediately.The status can be confirmed via wake_events.module_active.Note that this bit can also be used without powering down, such as when usbdev detects resume signaling before transitions to low power states have begun.</description>
							<bitRange>[1:1]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>wake_events</name>
					<description>USB wake module events and debug</description>
					<addressOffset>0x2a0</addressOffset>
					<fields>
						<field>
							<name>module_active</name>
							<description>USB aon wake module is active, monitoring events and controlling the pull-ups.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>disconnected</name>
							<description>USB aon wake module detected VBUS was interrupted while monitoring events.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>bus_reset</name>
							<description>USB aon wake module detected a bus reset while monitoring events.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>PWRMGR_AON</name>
			<version>1.0.0</version>
			<description>Sequences on-chip power, clocks, and resets through different reset and power states</description>
			<baseAddress>0x40400000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>PWRMGR_AON IRQ</name>
				<value>17</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CTRL_CFG_REGWEN</name>
					<description>Controls the configurability of the !!CONTROL register.This register ensures the contents do not change once a low power hint andWFI has occurred.It unlocks whenever a low power transition has completed (transition back to theACTIVE state) for any reason.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Configuration enable.This bit defaults to 1 and is set to 0 by hardware when low power entry is initiated.When the device transitions back from low power state to active state, this bit is setback to 1 to allow software configuration of !!CONTROL</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CONTROL</name>
					<description>Control register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>LOW_POWER_HINT</name>
							<description>The low power hint to power manager.The hint is an indication for how the manager should treat the next WFI.Once the power manager begins a low power transition, or if a valid reset request is registered,this bit is automatically cleared by HW.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CORE_CLK_EN</name>
							<description>core clock enable during low power state</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>IO_CLK_EN</name>
							<description>IO clock enable during low power state</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>USB_CLK_EN_LP</name>
							<description>USB clock enable during low power state</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>USB_CLK_EN_ACTIVE</name>
							<description>USB clock enable during active power state</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MAIN_PD_N</name>
							<description>Active low, main power domain power down</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CFG_CDC_SYNC</name>
					<description>The configuration registers CONTROL, WAKEUP_EN, RESET_EN are all written in thefast clock domain but used in the slow clock domain.The configuration are not propogated across the clock boundary until thisregister is triggered and read. See fields below for more details</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>SYNC</name>
							<description>Configuration sync. When this bit is written to 1, a sync pulse is generated. Whenthe sync completes, this bit then self clears.Software should write this bit to 1, wait for it to clear, before assuming the slow clockdomain has assumed the programmed values.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WAKEUP_EN_REGWEN</name>
					<description>Configuration enable for wakeup_en register</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>When 1, WAKEUP_EN register can be configured.When 0, WAKEUP_EN register cannot be configured.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WAKEUP_EN</name>
					<description>Bit mask for enabled wakeups</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>EN_0</name>
							<description>Whenever a particular bit is set to 1, that wakeup is also enabled.Whenever a particular bit is set to 0, that wakeup cannot wake the device from low power.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WAKE_STATUS</name>
					<description>A read only register of all current wake requests post enable mask</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Current value of wake requests</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RESET_EN_REGWEN</name>
					<description>Configuration enable for reset_en register</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>When 1, RESET_EN register can be configured.When 0, RESET_EN register cannot be configured.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RESET_EN</name>
					<description>Bit mask for enabled reset requests</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>EN_0</name>
							<description>Whenever a particular bit is set to 1, that reset request is enabled.Whenever a particular bit is set to 0, that reset request cannot reset the device.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RESET_STATUS</name>
					<description>A read only register of all current reset requests post enable mask</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Current value of reset request</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WAKE_INFO_CAPTURE_DIS</name>
					<description>Disables capture by WAKE_INFO</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>When written to 1, WAKE INFO capture is suppressed.When written to 0, WAKE_INFO capture is controlled by HW.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WAKE_INFO</name>
					<description>Indicates which functions caused the chip to wakeup.This register starts recording upon a valid low power entry with WAKE_INFO_CAPTURE_DIS off.Capture continues until it is explicitly disabled by setting WAKE_INFO_CAPTURE_DIS.This means it is possible to capture multiple wakeup reasons.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>REASONS</name>
							<description>Various peripheral wake reasons</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FALL_THROUGH</name>
							<description>The fall through wakeup reason indicates that despite setting a WFI and providing a low powerhint, an interrupt arrived at just the right time to break the executing core out of WFI.The power manager detects this condition, halts low power entry and reports as a wakeup reason</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ABORT</name>
							<description>The abort wakeup reason indicates that despite setting a WFI and providing a low powerhint, an active flash / lifecycle / otp transaction was ongoing when the power controllerattempted to initiate low power entry.The power manager detects this condition, halts low power entry and reports as a wakeup reason</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>RSTMGR_AON</name>
			<version>1.0.0</version>
			<description>Controls the on-chip reset signals, records reset cause and CPU crash dump for software</description>
			<baseAddress>0x40410000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>RSTMGR_AON IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>RESET_INFO</name>
					<description>Device reset reason.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>POR</name>
							<description>Indicates when a device has reset due to power up.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>LOW_POWER_EXIT</name>
							<description>Indicates when a device has reset due low power exit.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>NDM_RESET</name>
							<description>Indicates when a device has reset due to non-debug-module request.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HW_REQ</name>
							<description>Indicates when a device has reset due to a peripheral request.This can be an alert escalation, watchdog or anything else.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_INFO_CTRL</name>
					<description>Alert info dump controls.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Enable alert dump to capture new information.This field is automatically set to 0 upon system reset (even if rstmgr is not reset).</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INDEX</name>
							<description>Controls which 32-bit value to read.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_INFO_ATTR</name>
					<description>Alert info dump attributes.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>CNT_AVAIL</name>
							<description>The number of 32-bit values contained in the alert info dump.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_INFO</name>
					<description>Alert dump information prior to last reset. Which value read is controlled by the !!ALERT_INFO_CTRL register.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>VALUE</name>
							<description>The current 32-bit value of alert crash dump.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_RST_REGWEN</name>
					<description>Register write enable for software controllable resets.When a particular bit value is 0, the corresponding value in !!SW_RST_CTRL_N can no longer be changed.When a particular bit value is 1, the corresponding value in !!SW_RST_CTRL_N can be changed.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>EN_0</name>
							<description>Register write enable for software controllable resets</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_1</name>
							<description>Register write enable for software controllable resets</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_RST_CTRL_N</name>
					<description>Software controllable resets.When a particular bit value is 0, the corresponding module is held in reset.When a particular bit value is 1, the corresponding module is not held in reset.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Software reset value</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_1</name>
							<description>Software reset value</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>CLKMGR_AON</name>
			<version>1.0.0</version>
			<description>Derives and monitors on-chip clock signals, handles clock gating requests from power manager and software</description>
			<baseAddress>0x40420000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>CLKMGR_AON IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CLK_ENABLES</name>
					<description>Clock enable for software gateable clocks.These clocks are direclty controlled by software.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>CLK_FIXED_PERI_EN</name>
							<description>0 CLK_FIXED_PERI is disabled.1 CLK_FIXED_PERI is enabled.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CLK_USB_48MHZ_PERI_EN</name>
							<description>0 CLK_USB_48MHZ_PERI is disabled.1 CLK_USB_48MHZ_PERI is enabled.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLK_HINTS</name>
					<description>Clock hint for software gateable clocks.These clocks are not fully controlled by software.For disable, software only provides a hint, and hardware determines the final clock state based on thehint and whether the block in question is idle.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>CLK_MAIN_AES_HINT</name>
							<description>0 CLK_MAIN_AES can be disabled.1 CLK_MAIN_AES is enabled.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CLK_MAIN_HMAC_HINT</name>
							<description>0 CLK_MAIN_HMAC can be disabled.1 CLK_MAIN_HMAC is enabled.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CLK_HINTS_STATUS</name>
					<description>Since the final state of !!CLK_HINTS is not always determined by software,this register provides read feedback for the current clock state.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>CLK_MAIN_AES_VAL</name>
							<description>0 CLK_MAIN_AES is disabled.1 CLK_MAIN_AES is enabled.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CLK_MAIN_HMAC_VAL</name>
							<description>0 CLK_MAIN_HMAC is disabled.1 CLK_MAIN_HMAC is enabled.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>SYSRST_CTRL_AON</name>
			<version>1.0.0</version>
			<description>Manages board-level reset sequencing, interfaces reset and power manager</description>
			<baseAddress>0x40430000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>SYSRST_CTRL_AON IRQ</name>
				<value>18</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>REGWEN</name>
					<description>Configuration write enable control register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>write_en</name>
							<description>config write enable.0: cfg is locked(not writable); 1: cfg is not locked(writable)</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EC_RST_CTL</name>
					<description>EC reset control register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>ec_rst_pulse</name>
							<description>Configure the debounce timer in number of clock cycles.Each step is 5 us for a 200 kHz clock.The signal must exceed the debounce time by at least one clock cycle to be detected.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ULP_AC_DEBOUNCE_CTL</name>
					<description>Ultra low power AC debounce control register</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>ulp_ac_debounce_timer</name>
							<description>Configure the debounce timer for the AC input in number of clock cycles.Each step is 5 us for a 200 kHz clock.The signal must exceed the debounce time by at least one clock cycle to be detected.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ULP_LID_DEBOUNCE_CTL</name>
					<description>Ultra low power lid debounce control register</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>ulp_lid_debounce_timer</name>
							<description>Configure the debounce timer for the lid in number of clock cycles.Each step is 5 us for a 200 kHz clock.The signal must exceed the debounce time by at least one clock cycle to be detected.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ULP_PWRB_DEBOUNCE_CTL</name>
					<description>Ultra low power pwrb debounce control register</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>ulp_pwrb_debounce_timer</name>
							<description>Configure the debounce timer for the power button in number of clock cycles.Each step is 5 us for a 200 kHz clock.The signal must exceed the debounce time by at least one clock cycle to be detected.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ULP_CTL</name>
					<description>Ultra low power control register</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>ulp_enable</name>
							<description>0: disable ULP wakeup feature and reset the ULP FSM; 1: enable ULP wakeup feature</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ULP_STATUS</name>
					<description>Ultra low power status</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>ulp_wakeup</name>
							<description>0: ULP wakeup not detected; 1: ULP wakeup event is detected</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_STATUS</name>
					<description>wakeup status</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>wakeup_sts</name>
							<description>0: wakeup event not detected; 1: wakeup event is detected</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_INVERT_CTL</name>
					<description>configure key input output invert property</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>key0_in</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_out</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_out</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_out</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_out</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>bat_disable</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>lid_open</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>z3_wakeup</name>
							<description>0: don't invert; 1: invert</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PIN_ALLOWED_CTL</name>
					<description>This register determines which override values are allowed for a given output.If an override value programmed via !!PIN_OUT_VALUE is not configured as an allowed value,it will not have any effect.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>bat_disable_0</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst_l_0</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_out_0</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_out_0</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_out_0</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_out_0</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>z3_wakeup_0</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>flash_wp_l_0</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>bat_disable_1</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst_l_1</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_out_1</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_out_1</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_out_1</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_out_1</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>z3_wakeup_1</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>flash_wp_l_1</name>
							<description>0: not allowed; 1: allowed</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PIN_OUT_CTL</name>
					<description>Enables the override function for a specific pin.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>bat_disable</name>
							<description>0: disable override; 1: enable override</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst_l</name>
							<description>0: disable override; 1: enable override</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_out</name>
							<description>0: disable override; 1: enable override</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_out</name>
							<description>0: disable override; 1: enable override</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_out</name>
							<description>0: disable override; 1: enable override</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_out</name>
							<description>0: disable override; 1: enable override</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>z3_wakeup</name>
							<description>0: disable override; 1: enable override</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>flash_wp_l</name>
							<description>0: disable override; 1: enable override</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PIN_OUT_VALUE</name>
					<description>Sets the pin override value. Note that only the valuesconfigured as 'allowed' in !!PIN_ALLOWED_CTL will havean effect. Otherwise the pin value will not be overridden.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>bat_disable</name>
							<description>0: override to 1b0; 1: override to 1b1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst_l</name>
							<description>0: override to 1b0; 1: override to 1b1</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_out</name>
							<description>0: override to 1b0; 1: override to 1b1</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_out</name>
							<description>0: override to 1b0; 1: override to 1b1</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_out</name>
							<description>0: override to 1b0; 1: override to 1b1</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_out</name>
							<description>0: override to 1b0; 1: override to 1b1</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>z3_wakeup</name>
							<description>0: override to 1b0; 1: override to 1b1</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>flash_wp_l</name>
							<description>0: override to 1b0; 1: override to 1b1</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PIN_IN_VALUE</name>
					<description>For SW to read the sysrst_ctrl inputs like GPIO</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>pwrb_in</name>
							<description>raw pwrb_in value; before the invert logic</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>key0_in</name>
							<description>raw key0_in value; before the invert logic</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>key1_in</name>
							<description>raw key1_in value; before the invert logic</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>key2_in</name>
							<description>raw key2_in value; before the invert logic</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>lid_open</name>
							<description>raw lid_open value; before the invert logic</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ac_present</name>
							<description>raw ac_present value; before the invert logic</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ec_rst_l</name>
							<description>raw ec_rst_l value; before the invert logic</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>flash_wp_l</name>
							<description>raw flash_wp_l value; before the invert logic</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_INTR_CTL</name>
					<description>Define the keys or inputs that can trigger the interrupt</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>pwrb_in_H2L</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_in_H2L</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_H2L</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_H2L</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_H2L</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst_l_H2L</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>flash_wp_l_H2L</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in_L2H</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_in_L2H</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_L2H</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_L2H</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_L2H</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst_l_L2H</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>flash_wp_l_L2H</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_INTR_DEBOUNCE_CTL</name>
					<description>Debounce timer control register for key-triggered interrupt</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>debounce_timer</name>
							<description>Define the timer value so that the key or input is not oscillating in clock cycles.Each step is 5 us for a 200 kHz clock.The signal must exceed the debounce time by at least one clock cycle to be detected.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>AUTO_BLOCK_DEBOUNCE_CTL</name>
					<description>Debounce timer control register for pwrb_in H2L transition</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>debounce_timer</name>
							<description>Define the timer value so that the pwrb_in is not oscillating in clock cycles.Each step is 5 us for a 200 kHz clock.The signal must exceed the debounce time by at least one clock cycle to be detected.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>auto_block_enable</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>AUTO_BLOCK_OUT_CTL</name>
					<description>configure the key outputs to auto-override and their value</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>key0_out_sel</name>
							<description>0: disable auto-block; 1: enable auto-block</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_out_sel</name>
							<description>0: disable auto-block; 1: enable auto-block</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_out_sel</name>
							<description>0: disable auto-block; 1: enable auto-block</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_out_value</name>
							<description>0: override to 1'b0; 1: override to 1'b1</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_out_value</name>
							<description>0: override to 1'b0; 1: override to 1'b1</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_out_value</name>
							<description>0: override to 1'b0; 1: override to 1'b1</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_PRE_SEL_CTL_0</name>
					<description>To define the keys that define the pre-condition of the combo[0]: key0_in_sel[1]: key1_in_sel[2]: key2_in_sel[3]: pwrb_in_sel[4]: ac_present_selHW will start matching the combo as defined by !!COM_SEL_CTL if this precondition is fulfilled.If no keys are configured for the pre-condition, the pre-condition always evaluates to true.The debounce timing is defined via !!KEY_INTR_DEBOUNCE_CTL whereas the pre-condition pressed timing is defined via !!COM_PRE_DET_CTL.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>key0_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_PRE_SEL_CTL_1</name>
					<description>To define the keys that define the pre-condition of the combo[0]: key0_in_sel[1]: key1_in_sel[2]: key2_in_sel[3]: pwrb_in_sel[4]: ac_present_selHW will start matching the combo as defined by !!COM_SEL_CTL if this precondition is fulfilled.If no keys are configured for the pre-condition, the pre-condition always evaluates to true.The debounce timing is defined via !!KEY_INTR_DEBOUNCE_CTL whereas the pre-condition pressed timing is defined via !!COM_PRE_DET_CTL.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>key0_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_PRE_SEL_CTL_2</name>
					<description>To define the keys that define the pre-condition of the combo[0]: key0_in_sel[1]: key1_in_sel[2]: key2_in_sel[3]: pwrb_in_sel[4]: ac_present_selHW will start matching the combo as defined by !!COM_SEL_CTL if this precondition is fulfilled.If no keys are configured for the pre-condition, the pre-condition always evaluates to true.The debounce timing is defined via !!KEY_INTR_DEBOUNCE_CTL whereas the pre-condition pressed timing is defined via !!COM_PRE_DET_CTL.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>key0_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_PRE_SEL_CTL_3</name>
					<description>To define the keys that define the pre-condition of the combo[0]: key0_in_sel[1]: key1_in_sel[2]: key2_in_sel[3]: pwrb_in_sel[4]: ac_present_selHW will start matching the combo as defined by !!COM_SEL_CTL if this precondition is fulfilled.If no keys are configured for the pre-condition, the pre-condition always evaluates to true.The debounce timing is defined via !!KEY_INTR_DEBOUNCE_CTL whereas the pre-condition pressed timing is defined via !!COM_PRE_DET_CTL.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>key0_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_PRE_DET_CTL_0</name>
					<description>To define the duration that the combo pre-condition should be pressed0-60s, each step is 5us(200KHz clock)</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>precondition_timer_0</name>
							<description>0-60s, each step is 5us(200KHz clock)</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_PRE_DET_CTL_1</name>
					<description>To define the duration that the combo pre-condition should be pressed0-60s, each step is 5us(200KHz clock)</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>precondition_timer_1</name>
							<description>0-60s, each step is 5us(200KHz clock)</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_PRE_DET_CTL_2</name>
					<description>To define the duration that the combo pre-condition should be pressed0-60s, each step is 5us(200KHz clock)</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>precondition_timer_2</name>
							<description>0-60s, each step is 5us(200KHz clock)</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_PRE_DET_CTL_3</name>
					<description>To define the duration that the combo pre-condition should be pressed0-60s, each step is 5us(200KHz clock)</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>precondition_timer_3</name>
							<description>0-60s, each step is 5us(200KHz clock)</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_SEL_CTL_0</name>
					<description>To define the keys that trigger the combo[0]: key0_in_sel[1]: key1_in_sel[2]: key2_in_sel[3]: pwrb_in_sel[4]: ac_present_selHW will detect H2L transition in the combo use case.Optionally, a pre-condition can be configured for the combo detection via !!COM_PRE_SEL_CTL.If no keys are configured for the combo, the combo detection is disabled.The debounce timing is defined via !!KEY_INTR_DEBOUNCE_CTL whereas the key-pressed timing is defined via !!COM_DET_CTL.</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>key0_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_SEL_CTL_1</name>
					<description>To define the keys that trigger the combo[0]: key0_in_sel[1]: key1_in_sel[2]: key2_in_sel[3]: pwrb_in_sel[4]: ac_present_selHW will detect H2L transition in the combo use case.Optionally, a pre-condition can be configured for the combo detection via !!COM_PRE_SEL_CTL.If no keys are configured for the combo, the combo detection is disabled.The debounce timing is defined via !!KEY_INTR_DEBOUNCE_CTL whereas the key-pressed timing is defined via !!COM_DET_CTL.</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>key0_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_SEL_CTL_2</name>
					<description>To define the keys that trigger the combo[0]: key0_in_sel[1]: key1_in_sel[2]: key2_in_sel[3]: pwrb_in_sel[4]: ac_present_selHW will detect H2L transition in the combo use case.Optionally, a pre-condition can be configured for the combo detection via !!COM_PRE_SEL_CTL.If no keys are configured for the combo, the combo detection is disabled.The debounce timing is defined via !!KEY_INTR_DEBOUNCE_CTL whereas the key-pressed timing is defined via !!COM_DET_CTL.</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>key0_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_SEL_CTL_3</name>
					<description>To define the keys that trigger the combo[0]: key0_in_sel[1]: key1_in_sel[2]: key2_in_sel[3]: pwrb_in_sel[4]: ac_present_selHW will detect H2L transition in the combo use case.Optionally, a pre-condition can be configured for the combo detection via !!COM_PRE_SEL_CTL.If no keys are configured for the combo, the combo detection is disabled.The debounce timing is defined via !!KEY_INTR_DEBOUNCE_CTL whereas the key-pressed timing is defined via !!COM_DET_CTL.</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>key0_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_in_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_sel</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_DET_CTL_0</name>
					<description>To define the duration that the combo should be pressed0-60s, each step is 5us(200KHz clock)</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>detection_timer_0</name>
							<description>0-60s, each step is 5us(200KHz clock)</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_DET_CTL_1</name>
					<description>To define the duration that the combo should be pressed0-60s, each step is 5us(200KHz clock)</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>detection_timer_1</name>
							<description>0-60s, each step is 5us(200KHz clock)</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_DET_CTL_2</name>
					<description>To define the duration that the combo should be pressed0-60s, each step is 5us(200KHz clock)</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>detection_timer_2</name>
							<description>0-60s, each step is 5us(200KHz clock)</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_DET_CTL_3</name>
					<description>To define the duration that the combo should be pressed0-60s, each step is 5us(200KHz clock)</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>detection_timer_3</name>
							<description>0-60s, each step is 5us(200KHz clock)</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_OUT_CTL_0</name>
					<description>To define the actions once the combo is detected[0]: bat_disable[1]: interrupt (to OpenTitan processor)[2]: ec_rst (for Embedded Controller)[3]: rst_req (to OpenTitan reset manager)</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>bat_disable</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>interrupt</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rst_req</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_OUT_CTL_1</name>
					<description>To define the actions once the combo is detected[0]: bat_disable[1]: interrupt (to OpenTitan processor)[2]: ec_rst (for Embedded Controller)[3]: rst_req (to OpenTitan reset manager)</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>bat_disable</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>interrupt</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rst_req</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_OUT_CTL_2</name>
					<description>To define the actions once the combo is detected[0]: bat_disable[1]: interrupt (to OpenTitan processor)[2]: ec_rst (for Embedded Controller)[3]: rst_req (to OpenTitan reset manager)</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>bat_disable</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>interrupt</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rst_req</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COM_OUT_CTL_3</name>
					<description>To define the actions once the combo is detected[0]: bat_disable[1]: interrupt (to OpenTitan processor)[2]: ec_rst (for Embedded Controller)[3]: rst_req (to OpenTitan reset manager)</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>bat_disable</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>interrupt</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rst_req</name>
							<description>0: disable, 1: enable</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>COMBO_INTR_STATUS</name>
					<description>Combo interrupt source. These registers will only be set if theinterrupt action is configured in the corresponding !!COM_OUT_CTL register.</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>combo0_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>combo1_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>combo2_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>combo3_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_INTR_STATUS</name>
					<description>key interrupt source</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>pwrb_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_in_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst_l_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>flash_wp_l_H2L</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrb_L2H</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key0_in_L2H</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key1_in_L2H</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key2_in_L2H</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ac_present_L2H</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ec_rst_l_L2H</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>flash_wp_l_L2H</name>
							<description>0: case not detected;1: case detected</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>ADC_CTRL_AON</name>
			<version>1.0.0</version>
			<description>Low-power controller for a dual-channel ADC with filtering and debouncing capability</description>
			<baseAddress>0x40440000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>ADC_CTRL_AON IRQ</name>
				<value>19</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>adc_en_ctl</name>
					<description>ADC enable control register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>adc_enable</name>
							<description>1'b0: to power down ADC and ADC_CTRL FSM will enter the reset state; 1'b1: to power up ADC and ADC_CTRL FSM will start</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>oneshot_mode</name>
							<description>Oneshot mode does not care about the filter value. 1'b0: disable; 1'b1: enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_pd_ctl</name>
					<description>ADC PowerDown(PD) control register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>lp_mode</name>
							<description>1'b0: adc_pd is disabled, use adc_sample_ctl. 1'b1: adc_pd is enabled, use both adc_lp_sample_ctl &amp; adc_sample_ctl</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pwrup_time</name>
							<description>ADC power up time, measured in always on clock cycles.After power up time is reached, the ADC controller needs one additional cycle before an ADC channel is selected for access.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>wakeup_time</name>
							<description>How often FSM wakes up from ADC PD mode to take a sample, measured in always on clock cycles.</description>
							<bitRange>[31:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_lp_sample_ctl</name>
					<description>ADC Low-Power(LP) sample control register</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>lp_sample_cnt</name>
							<description>The number of samples in low-power mode when the low-power mode is enabled.After the programmed number is met, ADC won't be powered down any more.This value must be 1 or larger.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_sample_ctl</name>
					<description>ADC sample control register</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>np_sample_cnt</name>
							<description>The number of samples in normal-power mode to meet the debounce spec.Used after the low-power mode condition is met or in the normal power mode.This value must be 1 or larger.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_fsm_rst</name>
					<description>ADC FSM reset control</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>rst_en</name>
							<description>1'b0: Normal functional mode. 1'b1: SW to reset all the FSMs and timers</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn0_filter_ctl_0</name>
					<description>ADC channel0 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn0_filter_ctl_1</name>
					<description>ADC channel0 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn0_filter_ctl_2</name>
					<description>ADC channel0 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn0_filter_ctl_3</name>
					<description>ADC channel0 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn0_filter_ctl_4</name>
					<description>ADC channel0 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn0_filter_ctl_5</name>
					<description>ADC channel0 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn0_filter_ctl_6</name>
					<description>ADC channel0 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn0_filter_ctl_7</name>
					<description>ADC channel0 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn1_filter_ctl_0</name>
					<description>ADC channel1 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn1_filter_ctl_1</name>
					<description>ADC channel1 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn1_filter_ctl_2</name>
					<description>ADC channel1 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn1_filter_ctl_3</name>
					<description>ADC channel1 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn1_filter_ctl_4</name>
					<description>ADC channel1 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn1_filter_ctl_5</name>
					<description>ADC channel1 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn1_filter_ctl_6</name>
					<description>ADC channel1 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn1_filter_ctl_7</name>
					<description>ADC channel1 filter rangeUp to 8 filters can be configured per channel and each filter has an associated [min, max] range.The condition bit then defines whether the sample values of that channel need to lie within the range or outside to create a match.The filter range bounds can be configured with a granularity of 2.148mV.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>min_v</name>
							<description>10-bit for chn0 filter min value</description>
							<bitRange>[11:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>cond</name>
							<description>1-bit for the condition; 1'b0 means min&lt;=ADC&lt;=max, 1'b1 means ADC&gt;max or ADC&lt;min</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>max_v</name>
							<description>10-bit for chn0 filter max value</description>
							<bitRange>[27:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN</name>
							<description>Enable for filter</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn_val_0</name>
					<description>ADC value sampled on channel</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>adc_chn_value_ext</name>
							<description>2-bit extension; RO 0</description>
							<bitRange>[1:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>adc_chn_value</name>
							<description>Latest ADC value sampled on channel. each step is 2.148mV</description>
							<bitRange>[11:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>adc_chn_value_intr_ext</name>
							<description>2-bit extension; RO 0</description>
							<bitRange>[17:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>adc_chn_value_intr</name>
							<description>ADC value sampled on channel when the interrupt is raised(debug cable is attached or disconnected), each step is 2.148mV</description>
							<bitRange>[27:18]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_chn_val_1</name>
					<description>ADC value sampled on channel</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>adc_chn_value_ext</name>
							<description>2-bit extension; RO 0</description>
							<bitRange>[1:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>adc_chn_value</name>
							<description>Latest ADC value sampled on channel. each step is 2.148mV</description>
							<bitRange>[11:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>adc_chn_value_intr_ext</name>
							<description>2-bit extension; RO 0</description>
							<bitRange>[17:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>adc_chn_value_intr</name>
							<description>ADC value sampled on channel when the interrupt is raised(debug cable is attached or disconnected), each step is 2.148mV</description>
							<bitRange>[27:18]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_wakeup_ctl</name>
					<description>Enable filter matches as wakeups</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>0: filter match wil not generate wakeupe; 1: filter match will generate wakeup</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>filter_status</name>
					<description>Adc filter match statusIndicates whether a particular filter has matched on all channels.</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>COND</name>
							<description>0: filter condition is not met; 1: filter condition is met</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_intr_ctl</name>
					<description>Interrupt enable controls.adc_ctrl sends out only 1 interrupt, so this register controlswhich internal sources are actually registered.This register uses the same bit enumeration as !!ADC_INTR_STATUS</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>0: interrupt source is not enabled; 1: interrupt source is enabled</description>
							<bitRange>[8:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>adc_intr_status</name>
					<description>Debug cable internal status</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>filter_match</name>
							<description>0: filter condition is not met; 1: filter condition is met</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>oneshot</name>
							<description>0: oneshot sample is not done ; 1: oneshot sample is done</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>PWM_AON</name>
			<version>1.0.0</version>
			<description>Transmission of pulse-width modulated output signals with adjustable duty cycle</description>
			<baseAddress>0x40450000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>PWM_AON IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>REGWEN</name>
					<description>Register write enable for all control registers</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When true, all writable registers can be modified. When false, they become read-only. Defaults true, write zero to clear. This can be cleared after initial configuration at boot in order to lock in the listed register settings.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CFG</name>
					<description>Configuration register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>CNTR_EN</name>
							<description>Assert this bit to enable the PWM phase counter. Clearing this bit disables and resets the phase counter.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>DC_RESN</name>
							<description>Phase Resolution (logarithmic). All duty-cycle and phase shift registers represent fractional PWM cycles, expressed in units of 2^16 PWM cycles. Each PWM cycle is divided into 2^(DC_RESN+1) time slices, and thus only the (DC_RESN+1) most significant bits of each phase or duty cycle register are relevant.</description>
							<bitRange>[30:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CLK_DIV</name>
							<description>Sets the period of each PWM beat to be (CLK_DIV+1) input clock periods. Since PWM pulses are generated once every 2^(DC_RESN+1) beats, the period between output pulses is 2^(DC_RESN+1)*(CLK_DIV+1) times longer than the input clock period.</description>
							<bitRange>[26:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PWM_EN</name>
					<description>Enable PWM operation for each channel</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>EN_0</name>
							<description>Write 1 to this bit to enable PWM pulses on the corresponding channel.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_1</name>
							<description>Write 1 to this bit to enable PWM pulses on the corresponding channel.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_2</name>
							<description>Write 1 to this bit to enable PWM pulses on the corresponding channel.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_3</name>
							<description>Write 1 to this bit to enable PWM pulses on the corresponding channel.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_4</name>
							<description>Write 1 to this bit to enable PWM pulses on the corresponding channel.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_5</name>
							<description>Write 1 to this bit to enable PWM pulses on the corresponding channel.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INVERT</name>
					<description>Invert the PWM output for each channel</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>INVERT_0</name>
							<description>Write 1 to this bit to invert the output for each channel, so that the corresponding output is active-low.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVERT_1</name>
							<description>Write 1 to this bit to invert the output for each channel, so that the corresponding output is active-low.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVERT_2</name>
							<description>Write 1 to this bit to invert the output for each channel, so that the corresponding output is active-low.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVERT_3</name>
							<description>Write 1 to this bit to invert the output for each channel, so that the corresponding output is active-low.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVERT_4</name>
							<description>Write 1 to this bit to invert the output for each channel, so that the corresponding output is active-low.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVERT_5</name>
							<description>Write 1 to this bit to invert the output for each channel, so that the corresponding output is active-low.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PWM_PARAM_0</name>
					<description>Basic PWM Channel Parameters</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>BLINK_EN</name>
							<description>Enables blink (or heartbeat). If cleared, the output duty cycle will remain constant at DUTY_CYCLE.A. Enabling this bit causes the PWM duty cycle to fluctuate between DUTY_CYCLE.A and DUTY_CYCLE.B</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HTBT_EN</name>
							<description>Modulates blink behavior to create a heartbeat effect. When HTBT_EN is set, the duty cycle increases (or decreases) linearly from DUTY_CYCLE.A to DUTY_CYCLE.B and back, in steps of (BLINK_PARAM.Y+1), with an increment (decrement) once every (BLINK_PARAM.X+1) PWM cycles. When HTBT_EN is cleared, the standard blink behavior applies, meaning that the output duty cycle alternates between DUTY_CYCLE.A for (BLINK_PARAM.X+1) pulses and DUTY_CYCLE.B for (BLINK_PARAM.Y+1) pulses.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PHASE_DELAY</name>
							<description>Phase delay of the PWM rising edge, in units of 2^(-16) PWM cycles</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PWM_PARAM_1</name>
					<description>Basic PWM Channel Parameters</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>BLINK_EN</name>
							<description>Enables blink (or heartbeat). If cleared, the output duty cycle will remain constant at DUTY_CYCLE.A. Enabling this bit causes the PWM duty cycle to fluctuate between DUTY_CYCLE.A and DUTY_CYCLE.B</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HTBT_EN</name>
							<description>Modulates blink behavior to create a heartbeat effect. When HTBT_EN is set, the duty cycle increases (or decreases) linearly from DUTY_CYCLE.A to DUTY_CYCLE.B and back, in steps of (BLINK_PARAM.Y+1), with an increment (decrement) once every (BLINK_PARAM.X+1) PWM cycles. When HTBT_EN is cleared, the standard blink behavior applies, meaning that the output duty cycle alternates between DUTY_CYCLE.A for (BLINK_PARAM.X+1) pulses and DUTY_CYCLE.B for (BLINK_PARAM.Y+1) pulses.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PHASE_DELAY</name>
							<description>Phase delay of the PWM rising edge, in units of 2^(-16) PWM cycles</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PWM_PARAM_2</name>
					<description>Basic PWM Channel Parameters</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>BLINK_EN</name>
							<description>Enables blink (or heartbeat). If cleared, the output duty cycle will remain constant at DUTY_CYCLE.A. Enabling this bit causes the PWM duty cycle to fluctuate between DUTY_CYCLE.A and DUTY_CYCLE.B</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HTBT_EN</name>
							<description>Modulates blink behavior to create a heartbeat effect. When HTBT_EN is set, the duty cycle increases (or decreases) linearly from DUTY_CYCLE.A to DUTY_CYCLE.B and back, in steps of (BLINK_PARAM.Y+1), with an increment (decrement) once every (BLINK_PARAM.X+1) PWM cycles. When HTBT_EN is cleared, the standard blink behavior applies, meaning that the output duty cycle alternates between DUTY_CYCLE.A for (BLINK_PARAM.X+1) pulses and DUTY_CYCLE.B for (BLINK_PARAM.Y+1) pulses.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PHASE_DELAY</name>
							<description>Phase delay of the PWM rising edge, in units of 2^(-16) PWM cycles</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PWM_PARAM_3</name>
					<description>Basic PWM Channel Parameters</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>BLINK_EN</name>
							<description>Enables blink (or heartbeat). If cleared, the output duty cycle will remain constant at DUTY_CYCLE.A. Enabling this bit causes the PWM duty cycle to fluctuate between DUTY_CYCLE.A and DUTY_CYCLE.B</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HTBT_EN</name>
							<description>Modulates blink behavior to create a heartbeat effect. When HTBT_EN is set, the duty cycle increases (or decreases) linearly from DUTY_CYCLE.A to DUTY_CYCLE.B and back, in steps of (BLINK_PARAM.Y+1), with an increment (decrement) once every (BLINK_PARAM.X+1) PWM cycles. When HTBT_EN is cleared, the standard blink behavior applies, meaning that the output duty cycle alternates between DUTY_CYCLE.A for (BLINK_PARAM.X+1) pulses and DUTY_CYCLE.B for (BLINK_PARAM.Y+1) pulses.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PHASE_DELAY</name>
							<description>Phase delay of the PWM rising edge, in units of 2^(-16) PWM cycles</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PWM_PARAM_4</name>
					<description>Basic PWM Channel Parameters</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>BLINK_EN</name>
							<description>Enables blink (or heartbeat). If cleared, the output duty cycle will remain constant at DUTY_CYCLE.A. Enabling this bit causes the PWM duty cycle to fluctuate between DUTY_CYCLE.A and DUTY_CYCLE.B</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HTBT_EN</name>
							<description>Modulates blink behavior to create a heartbeat effect. When HTBT_EN is set, the duty cycle increases (or decreases) linearly from DUTY_CYCLE.A to DUTY_CYCLE.B and back, in steps of (BLINK_PARAM.Y+1), with an increment (decrement) once every (BLINK_PARAM.X+1) PWM cycles. When HTBT_EN is cleared, the standard blink behavior applies, meaning that the output duty cycle alternates between DUTY_CYCLE.A for (BLINK_PARAM.X+1) pulses and DUTY_CYCLE.B for (BLINK_PARAM.Y+1) pulses.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PHASE_DELAY</name>
							<description>Phase delay of the PWM rising edge, in units of 2^(-16) PWM cycles</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PWM_PARAM_5</name>
					<description>Basic PWM Channel Parameters</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>BLINK_EN</name>
							<description>Enables blink (or heartbeat). If cleared, the output duty cycle will remain constant at DUTY_CYCLE.A. Enabling this bit causes the PWM duty cycle to fluctuate between DUTY_CYCLE.A and DUTY_CYCLE.B</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HTBT_EN</name>
							<description>Modulates blink behavior to create a heartbeat effect. When HTBT_EN is set, the duty cycle increases (or decreases) linearly from DUTY_CYCLE.A to DUTY_CYCLE.B and back, in steps of (BLINK_PARAM.Y+1), with an increment (decrement) once every (BLINK_PARAM.X+1) PWM cycles. When HTBT_EN is cleared, the standard blink behavior applies, meaning that the output duty cycle alternates between DUTY_CYCLE.A for (BLINK_PARAM.X+1) pulses and DUTY_CYCLE.B for (BLINK_PARAM.Y+1) pulses.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PHASE_DELAY</name>
							<description>Phase delay of the PWM rising edge, in units of 2^(-16) PWM cycles</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DUTY_CYCLE_0</name>
					<description>Controls the duty_cycle of each channel.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>B</name>
							<description>The target duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting only applies when blinking, and determines the target duty cycle.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>A</name>
							<description>The initial duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting applies continuously when not blinking and determines the initial duty cycle when blinking.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DUTY_CYCLE_1</name>
					<description>Controls the duty_cycle of each channel.</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>B</name>
							<description>The target duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting only applies when blinking, and determines the target duty cycle.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>A</name>
							<description>The initial duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting applies continuously when not blinking and determines the initial duty cycle when blinking.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DUTY_CYCLE_2</name>
					<description>Controls the duty_cycle of each channel.</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>B</name>
							<description>The target duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting only applies when blinking, and determines the target duty cycle.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>A</name>
							<description>The initial duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting applies continuously when not blinking and determines the initial duty cycle when blinking.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DUTY_CYCLE_3</name>
					<description>Controls the duty_cycle of each channel.</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>B</name>
							<description>The target duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting only applies when blinking, and determines the target duty cycle.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>A</name>
							<description>The initial duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting applies continuously when not blinking and determines the initial duty cycle when blinking.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DUTY_CYCLE_4</name>
					<description>Controls the duty_cycle of each channel.</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>B</name>
							<description>The target duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting only applies when blinking, and determines the target duty cycle.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>A</name>
							<description>The initial duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting applies continuously when not blinking and determines the initial duty cycle when blinking.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DUTY_CYCLE_5</name>
					<description>Controls the duty_cycle of each channel.</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>B</name>
							<description>The target duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting only applies when blinking, and determines the target duty cycle.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>A</name>
							<description>The initial duty cycle for PWM output, in units of 2^(-16)ths of a pulse cycle. The actual precision is however limited to the (DC_RESN+1) most significant bits. This setting applies continuously when not blinking and determines the initial duty cycle when blinking.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BLINK_PARAM_0</name>
					<description>Hardware controlled blink/heartbeat parameters.</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>X</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle A for (X+1) pulses before switching to duty cycle B. If heartbeat is enabled the duty-cycle will start at the duty cycle A, but will be incremented (or decremented) every (X+1) cycles. In heartbeat mode is enabled, the size of each step is controlled by BLINK_PARAM.Y.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>Y</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle B for (Y+1) pulse cycles before returning to duty cycle A. If heartbeat is enabled the duty cycle will increase (or decrease) by (Y+1) units every time it is incremented (or decremented)</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BLINK_PARAM_1</name>
					<description>Hardware controlled blink/heartbeat parameters.</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>X</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle A for (X+1) pulses before switching to duty cycle B. If heartbeat is enabled the duty-cycle will start at the duty cycle A, but will be incremented (or decremented) every (X+1) cycles. In heartbeat mode is enabled, the size of each step is controlled by BLINK_PARAM.Y.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>Y</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle B for (Y+1) pulse cycles before returning to duty cycle A. If heartbeat is enabled the duty cycle will increase (or decrease) by (Y+1) units every time it is incremented (or decremented)</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BLINK_PARAM_2</name>
					<description>Hardware controlled blink/heartbeat parameters.</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>X</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle A for (X+1) pulses before switching to duty cycle B. If heartbeat is enabled the duty-cycle will start at the duty cycle A, but will be incremented (or decremented) every (X+1) cycles. In heartbeat mode is enabled, the size of each step is controlled by BLINK_PARAM.Y.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>Y</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle B for (Y+1) pulse cycles before returning to duty cycle A. If heartbeat is enabled the duty cycle will increase (or decrease) by (Y+1) units every time it is incremented (or decremented)</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BLINK_PARAM_3</name>
					<description>Hardware controlled blink/heartbeat parameters.</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>X</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle A for (X+1) pulses before switching to duty cycle B. If heartbeat is enabled the duty-cycle will start at the duty cycle A, but will be incremented (or decremented) every (X+1) cycles. In heartbeat mode is enabled, the size of each step is controlled by BLINK_PARAM.Y.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>Y</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle B for (Y+1) pulse cycles before returning to duty cycle A. If heartbeat is enabled the duty cycle will increase (or decrease) by (Y+1) units every time it is incremented (or decremented)</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BLINK_PARAM_4</name>
					<description>Hardware controlled blink/heartbeat parameters.</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>X</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle A for (X+1) pulses before switching to duty cycle B. If heartbeat is enabled the duty-cycle will start at the duty cycle A, but will be incremented (or decremented) every (X+1) cycles. In heartbeat mode is enabled, the size of each step is controlled by BLINK_PARAM.Y.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>Y</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle B for (Y+1) pulse cycles before returning to duty cycle A. If heartbeat is enabled the duty cycle will increase (or decrease) by (Y+1) units every time it is incremented (or decremented)</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BLINK_PARAM_5</name>
					<description>Hardware controlled blink/heartbeat parameters.</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>X</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle A for (X+1) pulses before switching to duty cycle B. If heartbeat is enabled the duty-cycle will start at the duty cycle A, but will be incremented (or decremented) every (X+1) cycles. In heartbeat mode is enabled, the size of each step is controlled by BLINK_PARAM.Y.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>Y</name>
							<description>This blink-rate timing parameter has two different interpretations depending on whether or not the heartbeat feature is enabled. If heartbeat is disabled, a blinking PWM will pulse at duty cycle B for (Y+1) pulse cycles before returning to duty cycle A. If heartbeat is enabled the duty cycle will increase (or decrease) by (Y+1) units every time it is incremented (or decremented)</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>PINMUX_AON</name>
			<version>1.0.0</version>
			<description>Multiplexes between on-chip hardware blocks and pins; can be configured at runtime</description>
			<baseAddress>0x40460000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>PINMUX_AON IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_0</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_1</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_2</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_3</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_4</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_5</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_6</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_7</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_8</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_9</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_10</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_11</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_12</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_13</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_14</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_15</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_16</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_17</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_18</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_19</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_20</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_21</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_22</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_23</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_24</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_25</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_26</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_27</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_28</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_29</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_30</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_31</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_REGWEN_32</name>
					<description>Register write enable for MIO peripheral input selects.</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_PERIPH_INSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_0</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_1</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_2</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_3</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_4</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_5</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_6</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xdc</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_7</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xe0</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_8</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xe4</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_9</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xe8</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_10</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xec</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_11</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xf0</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_12</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xf4</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_13</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xf8</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_14</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0xfc</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_15</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x100</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_16</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x104</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_17</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x108</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_18</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x10c</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_19</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_20</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x114</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_21</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x118</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_22</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x11c</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_23</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x120</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_24</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x124</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_25</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x128</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_26</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x12c</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_27</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x130</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_28</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x134</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_29</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x138</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_30</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x13c</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_31</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x140</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PERIPH_INSEL_32</name>
					<description>For each peripheral input, this selects the muxable pad input.</description>
					<addressOffset>0x144</addressOffset>
					<fields>
						<field>
							<name>IN</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1,&gt;=2: MIO pads (i.e., add 2 to the native MIO pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_0</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x148</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_1</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x14c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_2</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x150</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_3</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x154</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_4</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x158</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_5</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x15c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_6</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x160</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_7</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x164</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_8</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x168</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_9</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x16c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_10</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x170</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_11</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x174</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_12</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x178</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_13</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x17c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_14</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x180</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_15</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x184</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_16</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x188</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_17</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x18c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_18</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x190</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_19</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x194</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_20</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x198</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_21</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x19c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_22</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1a0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_23</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1a4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_24</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1a8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_25</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1ac</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_26</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1b0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_27</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1b4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_28</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1b8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_29</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1bc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_30</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1c0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_REGWEN_31</name>
					<description>Register write enable for MIO output selects.</description>
					<addressOffset>0x1c4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding MIO_OUTSELis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_0</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1c8</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_1</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1cc</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_2</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1d0</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_3</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1d4</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_4</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1d8</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_5</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1dc</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_6</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1e0</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_7</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1e4</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_8</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1e8</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_9</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1ec</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_10</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1f0</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_11</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1f4</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_12</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1f8</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_13</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x1fc</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_14</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x200</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_15</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x204</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_16</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x208</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_17</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x20c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_18</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x210</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_19</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x214</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_20</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x218</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_21</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x21c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_22</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x220</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_23</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x224</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_24</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x228</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_25</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x22c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_26</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x230</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_27</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x234</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_28</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x238</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_29</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x23c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_30</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x240</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_OUTSEL_31</name>
					<description>For each muxable pad, this selects the peripheral output.</description>
					<addressOffset>0x244</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>0: tie constantly to zero, 1: tie constantly to 1, 2: high-Z,&gt;=3: peripheral outputs (i.e., add 3 to the native peripheral pad index).</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_0</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x248</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_1</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x24c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_2</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x250</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_3</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x254</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_4</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x258</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_5</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x25c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_6</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x260</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_7</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x264</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_8</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x268</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_9</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x26c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_10</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x270</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_11</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x274</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_12</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x278</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_13</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x27c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_14</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x280</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_15</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x284</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_16</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x288</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_17</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x28c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_18</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x290</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_19</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x294</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_20</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x298</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_21</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x29c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_22</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2a0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_23</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2a4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_24</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2a8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_25</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2ac</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_26</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2b0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_27</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2b4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_28</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2b8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_29</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2bc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_30</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2c0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_REGWEN_31</name>
					<description>Register write enable for MIO PAD attributes.</description>
					<addressOffset>0x2c4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_0</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2c8</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_1</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2cc</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_2</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2d0</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_3</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2d4</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_4</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2d8</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_5</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2dc</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_6</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2e0</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_7</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2e4</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_8</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2e8</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_9</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2ec</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_10</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2f0</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_11</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2f4</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_12</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2f8</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_13</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x2fc</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_14</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x300</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_15</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x304</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_16</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x308</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_17</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x30c</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_18</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x310</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_19</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x314</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_20</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x318</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_21</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x31c</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_22</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x320</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_23</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x324</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_24</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x328</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_25</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x32c</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_26</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x330</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_27</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x334</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_28</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x338</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_29</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x33c</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_30</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x340</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_ATTR_31</name>
					<description>Muxed pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x344</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_0</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x348</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_1</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x34c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_2</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x350</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_3</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x354</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_4</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x358</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_5</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x35c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_6</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x360</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_7</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x364</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_8</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x368</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_9</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x36c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_10</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x370</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_11</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x374</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_12</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x378</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_13</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x37c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_14</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x380</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_REGWEN_15</name>
					<description>Register write enable for DIO PAD attributes.</description>
					<addressOffset>0x384</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_ATTRis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_0</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x388</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_1</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x38c</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_2</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x390</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_3</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x394</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_4</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x398</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_5</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x39c</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_6</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3a0</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_7</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3a4</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_8</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3a8</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_9</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3ac</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_10</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3b0</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_11</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3b4</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_12</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3b8</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_13</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3bc</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_14</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3c0</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_ATTR_15</name>
					<description>Dedicated pad attributes.This register has WARL behavior since not each pad type may supportall attributes.</description>
					<addressOffset>0x3c4</addressOffset>
					<fields>
						<field>
							<name>invert</name>
							<description>Invert input and output levels.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>virtual_od_en</name>
							<description>Enable virtual open drain.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pull_select</name>
							<description>Pull select (0: pull-down, 1: pull-up).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>keeper_en</name>
							<description>Enable pull-up or pull-down resistor.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>schmitt_en</name>
							<description>Enable the schmitt trigger.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>od_en</name>
							<description>Enable open drain.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>slew_rate</name>
							<description>Slew rate (0x0: slowest, 0x3: fastest).</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>drive_strength</name>
							<description>Drive strength (0x0: weakest, 0xf: strongest)</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_STATUS</name>
					<description>Register indicating whether the corresponding pad is in sleep mode.</description>
					<addressOffset>0x3c8</addressOffset>
					<fields>
						<field>
							<name>EN_0</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_1</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_2</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_3</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_4</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_5</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_6</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_7</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_8</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_9</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_10</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_11</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_12</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_13</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_14</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_15</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_16</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_17</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_18</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_19</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_20</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_21</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_22</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_23</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_24</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_25</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_26</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_27</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_28</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_29</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_30</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_31</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!MIO_PAD_SLEEP_EN) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_0</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x448</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_1</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x44c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_2</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x450</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_3</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x454</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_4</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x458</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_5</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x45c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_6</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x460</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_7</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x464</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_8</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x468</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_9</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x46c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_10</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x470</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_11</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x474</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_12</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x478</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_13</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x47c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_14</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x480</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_15</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x484</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_16</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x488</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_17</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x48c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_18</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x490</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_19</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x494</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_20</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x498</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_21</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x49c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_22</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4a0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_23</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4a4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_24</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4a8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_25</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4ac</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_26</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4b0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_27</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4b4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_28</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4b8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_29</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4bc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_30</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4c0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_REGWEN_31</name>
					<description>Register write enable for MIO sleep value configuration.</description>
					<addressOffset>0x4c4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!MIO_OUT_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_0</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4c8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_1</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4cc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_2</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4d0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_3</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4d4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_4</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4d8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_5</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4dc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_6</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4e0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_7</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4e4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_8</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4e8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_9</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4ec</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_10</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4f0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_11</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4f4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_12</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4f8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_13</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x4fc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_14</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x500</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_15</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x504</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_16</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x508</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_17</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x50c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_18</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x510</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_19</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x514</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_20</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x518</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_21</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x51c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_22</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x520</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_23</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x524</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_24</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x528</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_25</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x52c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_26</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x530</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_27</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x534</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_28</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x538</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_29</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x53c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_30</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x540</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_EN_31</name>
					<description>Enables the sleep mode of the corresponding muxed pad.</description>
					<addressOffset>0x544</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!MIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!MIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!MIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific MIO pad,the corresponding !!MIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_0</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x548</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_1</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x54c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_2</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x550</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_3</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x554</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_4</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x558</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_5</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x55c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_6</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x560</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_7</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x564</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_8</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x568</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_9</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x56c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_10</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x570</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_11</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x574</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_12</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x578</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_13</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x57c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_14</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x580</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_15</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x584</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_16</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x588</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_17</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x58c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_18</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x590</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_19</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x594</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_20</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x598</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_21</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x59c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_22</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5a0</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_23</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5a4</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_24</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5a8</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_25</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5ac</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_26</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5b0</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_27</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5b4</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_28</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5b8</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_29</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5bc</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_30</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5c0</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MIO_PAD_SLEEP_MODE_31</name>
					<description>Defines sleep behavior of the corresponding muxed pad.</description>
					<addressOffset>0x5c4</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_STATUS</name>
					<description>Register indicating whether the corresponding pad is in sleep mode.</description>
					<addressOffset>0x5c8</addressOffset>
					<fields>
						<field>
							<name>EN_0</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_1</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_2</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_3</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_4</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_5</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_6</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_7</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_8</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_9</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_10</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_11</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_12</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_13</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_14</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EN_15</name>
							<description>This register is set to 1 if the deep sleep mode of the correspondingpad has been enabled (!!DIO_PAD_SLEEP_MODE) upon deep sleep entry.The sleep mode of the corresponding pad will remain active until SWclears this bit.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_0</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x608</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_1</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x60c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_2</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x610</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_3</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x614</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_4</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x618</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_5</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x61c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_6</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x620</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_7</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x624</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_8</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x628</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_9</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x62c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_10</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x630</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_11</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x634</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_12</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x638</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_13</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x63c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_14</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x640</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_REGWEN_15</name>
					<description>Register write enable for DIO sleep value configuration.</description>
					<addressOffset>0x644</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding !!DIO_PAD_SLEEP_MODEis not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_0</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x648</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_1</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x64c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_2</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x650</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_3</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x654</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_4</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x658</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_5</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x65c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_6</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x660</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_7</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x664</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_8</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x668</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_9</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x66c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_10</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x670</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_11</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x674</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_12</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x678</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_13</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x67c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_14</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x680</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_EN_15</name>
					<description>Enables the sleep mode of the corresponding dedicated pad.</description>
					<addressOffset>0x684</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Deep sleep mode enable.If this bit is set to 1 the corresponding pad will enable the sleep behaviorspecified in !!DIO_PAD_SLEEP_MODE upon deep sleep entry, and the corresponding bitin !!DIO_PAD_SLEEP_STATUS will be set to 1.The pad remains in deep sleep mode until the corresponding bit in!!DIO_PAD_SLEEP_STATUS is cleared by SW.Note that if an always on peripheral is connected to a specific DIO pad,the corresponding !!DIO_PAD_SLEEP_EN bit should be set to 0.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_0</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x688</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_1</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x68c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_2</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x690</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_3</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x694</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_4</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x698</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_5</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x69c</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_6</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6a0</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_7</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6a4</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_8</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6a8</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_9</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6ac</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_10</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6b0</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_11</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6b4</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_12</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6b8</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_13</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6bc</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_14</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6c0</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIO_PAD_SLEEP_MODE_15</name>
					<description>Defines sleep behavior of the corresponding dedicated pad.</description>
					<addressOffset>0x6c4</addressOffset>
					<fields>
						<field>
							<name>OUT</name>
							<description>Value to drive in deep sleep.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_REGWEN_0</name>
					<description>Register write enable for wakeup detectors.</description>
					<addressOffset>0x6c8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding WKUP_DETECTORconfiguration is not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_REGWEN_1</name>
					<description>Register write enable for wakeup detectors.</description>
					<addressOffset>0x6cc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding WKUP_DETECTORconfiguration is not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_REGWEN_2</name>
					<description>Register write enable for wakeup detectors.</description>
					<addressOffset>0x6d0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding WKUP_DETECTORconfiguration is not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_REGWEN_3</name>
					<description>Register write enable for wakeup detectors.</description>
					<addressOffset>0x6d4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding WKUP_DETECTORconfiguration is not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_REGWEN_4</name>
					<description>Register write enable for wakeup detectors.</description>
					<addressOffset>0x6d8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding WKUP_DETECTORconfiguration is not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_REGWEN_5</name>
					<description>Register write enable for wakeup detectors.</description>
					<addressOffset>0x6dc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding WKUP_DETECTORconfiguration is not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_REGWEN_6</name>
					<description>Register write enable for wakeup detectors.</description>
					<addressOffset>0x6e0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding WKUP_DETECTORconfiguration is not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_REGWEN_7</name>
					<description>Register write enable for wakeup detectors.</description>
					<addressOffset>0x6e4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Register write enable bit.If this is cleared to 0, the corresponding WKUP_DETECTORconfiguration is not writable anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_EN_0</name>
					<description>Enables for the wakeup detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x6e8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Setting this bit activates the corresponding wakeup detector.The behavior is as specified in !!WKUP_DETECTOR,!!WKUP_DETECTOR_CNT_TH and !!WKUP_DETECTOR_PADSEL.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_EN_1</name>
					<description>Enables for the wakeup detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x6ec</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Setting this bit activates the corresponding wakeup detector.The behavior is as specified in !!WKUP_DETECTOR,!!WKUP_DETECTOR_CNT_TH and !!WKUP_DETECTOR_PADSEL.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_EN_2</name>
					<description>Enables for the wakeup detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x6f0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Setting this bit activates the corresponding wakeup detector.The behavior is as specified in !!WKUP_DETECTOR,!!WKUP_DETECTOR_CNT_TH and !!WKUP_DETECTOR_PADSEL.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_EN_3</name>
					<description>Enables for the wakeup detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x6f4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Setting this bit activates the corresponding wakeup detector.The behavior is as specified in !!WKUP_DETECTOR,!!WKUP_DETECTOR_CNT_TH and !!WKUP_DETECTOR_PADSEL.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_EN_4</name>
					<description>Enables for the wakeup detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x6f8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Setting this bit activates the corresponding wakeup detector.The behavior is as specified in !!WKUP_DETECTOR,!!WKUP_DETECTOR_CNT_TH and !!WKUP_DETECTOR_PADSEL.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_EN_5</name>
					<description>Enables for the wakeup detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x6fc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Setting this bit activates the corresponding wakeup detector.The behavior is as specified in !!WKUP_DETECTOR,!!WKUP_DETECTOR_CNT_TH and !!WKUP_DETECTOR_PADSEL.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_EN_6</name>
					<description>Enables for the wakeup detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x700</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Setting this bit activates the corresponding wakeup detector.The behavior is as specified in !!WKUP_DETECTOR,!!WKUP_DETECTOR_CNT_TH and !!WKUP_DETECTOR_PADSEL.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_EN_7</name>
					<description>Enables for the wakeup detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x704</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Setting this bit activates the corresponding wakeup detector.The behavior is as specified in !!WKUP_DETECTOR,!!WKUP_DETECTOR_CNT_TH and !!WKUP_DETECTOR_PADSEL.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_0</name>
					<description>Configuration of wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.Note that the wkup detector should be disabled by setting !!WKUP_DETECTOR_EN_0 before changing the detection mode.The reason for that is that the pulse width counter is NOT cleared upon a mode change while the detector is enabled.</description>
					<addressOffset>0x708</addressOffset>
					<fields>
						<field>
							<name>MODE</name>
							<description>Wakeup detection mode. Out of range values default to Posedge.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FILTER</name>
							<description>0: signal filter disabled, 1: signal filter enabled. the signal mustbe stable for 4 always-on clock cycles before the value is being forwarded.can be used for debouncing.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MIODIO</name>
							<description>0: select index !!WKUP_DETECTOR_PADSEL from MIO pads,1: select index !!WKUP_DETECTOR_PADSEL from DIO pads.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_1</name>
					<description>Configuration of wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.Note that the wkup detector should be disabled by setting !!WKUP_DETECTOR_EN_0 before changing the detection mode.The reason for that is that the pulse width counter is NOT cleared upon a mode change while the detector is enabled.</description>
					<addressOffset>0x70c</addressOffset>
					<fields>
						<field>
							<name>MODE</name>
							<description>Wakeup detection mode. Out of range values default to Posedge.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FILTER</name>
							<description>0: signal filter disabled, 1: signal filter enabled. the signal mustbe stable for 4 always-on clock cycles before the value is being forwarded.can be used for debouncing.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MIODIO</name>
							<description>0: select index !!WKUP_DETECTOR_PADSEL from MIO pads,1: select index !!WKUP_DETECTOR_PADSEL from DIO pads.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_2</name>
					<description>Configuration of wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.Note that the wkup detector should be disabled by setting !!WKUP_DETECTOR_EN_0 before changing the detection mode.The reason for that is that the pulse width counter is NOT cleared upon a mode change while the detector is enabled.</description>
					<addressOffset>0x710</addressOffset>
					<fields>
						<field>
							<name>MODE</name>
							<description>Wakeup detection mode. Out of range values default to Posedge.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FILTER</name>
							<description>0: signal filter disabled, 1: signal filter enabled. the signal mustbe stable for 4 always-on clock cycles before the value is being forwarded.can be used for debouncing.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MIODIO</name>
							<description>0: select index !!WKUP_DETECTOR_PADSEL from MIO pads,1: select index !!WKUP_DETECTOR_PADSEL from DIO pads.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_3</name>
					<description>Configuration of wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.Note that the wkup detector should be disabled by setting !!WKUP_DETECTOR_EN_0 before changing the detection mode.The reason for that is that the pulse width counter is NOT cleared upon a mode change while the detector is enabled.</description>
					<addressOffset>0x714</addressOffset>
					<fields>
						<field>
							<name>MODE</name>
							<description>Wakeup detection mode. Out of range values default to Posedge.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FILTER</name>
							<description>0: signal filter disabled, 1: signal filter enabled. the signal mustbe stable for 4 always-on clock cycles before the value is being forwarded.can be used for debouncing.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MIODIO</name>
							<description>0: select index !!WKUP_DETECTOR_PADSEL from MIO pads,1: select index !!WKUP_DETECTOR_PADSEL from DIO pads.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_4</name>
					<description>Configuration of wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.Note that the wkup detector should be disabled by setting !!WKUP_DETECTOR_EN_0 before changing the detection mode.The reason for that is that the pulse width counter is NOT cleared upon a mode change while the detector is enabled.</description>
					<addressOffset>0x718</addressOffset>
					<fields>
						<field>
							<name>MODE</name>
							<description>Wakeup detection mode. Out of range values default to Posedge.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FILTER</name>
							<description>0: signal filter disabled, 1: signal filter enabled. the signal mustbe stable for 4 always-on clock cycles before the value is being forwarded.can be used for debouncing.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MIODIO</name>
							<description>0: select index !!WKUP_DETECTOR_PADSEL from MIO pads,1: select index !!WKUP_DETECTOR_PADSEL from DIO pads.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_5</name>
					<description>Configuration of wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.Note that the wkup detector should be disabled by setting !!WKUP_DETECTOR_EN_0 before changing the detection mode.The reason for that is that the pulse width counter is NOT cleared upon a mode change while the detector is enabled.</description>
					<addressOffset>0x71c</addressOffset>
					<fields>
						<field>
							<name>MODE</name>
							<description>Wakeup detection mode. Out of range values default to Posedge.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FILTER</name>
							<description>0: signal filter disabled, 1: signal filter enabled. the signal mustbe stable for 4 always-on clock cycles before the value is being forwarded.can be used for debouncing.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MIODIO</name>
							<description>0: select index !!WKUP_DETECTOR_PADSEL from MIO pads,1: select index !!WKUP_DETECTOR_PADSEL from DIO pads.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_6</name>
					<description>Configuration of wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.Note that the wkup detector should be disabled by setting !!WKUP_DETECTOR_EN_0 before changing the detection mode.The reason for that is that the pulse width counter is NOT cleared upon a mode change while the detector is enabled.</description>
					<addressOffset>0x720</addressOffset>
					<fields>
						<field>
							<name>MODE</name>
							<description>Wakeup detection mode. Out of range values default to Posedge.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FILTER</name>
							<description>0: signal filter disabled, 1: signal filter enabled. the signal mustbe stable for 4 always-on clock cycles before the value is being forwarded.can be used for debouncing.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MIODIO</name>
							<description>0: select index !!WKUP_DETECTOR_PADSEL from MIO pads,1: select index !!WKUP_DETECTOR_PADSEL from DIO pads.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_7</name>
					<description>Configuration of wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.Note that the wkup detector should be disabled by setting !!WKUP_DETECTOR_EN_0 before changing the detection mode.The reason for that is that the pulse width counter is NOT cleared upon a mode change while the detector is enabled.</description>
					<addressOffset>0x724</addressOffset>
					<fields>
						<field>
							<name>MODE</name>
							<description>Wakeup detection mode. Out of range values default to Posedge.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FILTER</name>
							<description>0: signal filter disabled, 1: signal filter enabled. the signal mustbe stable for 4 always-on clock cycles before the value is being forwarded.can be used for debouncing.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MIODIO</name>
							<description>0: select index !!WKUP_DETECTOR_PADSEL from MIO pads,1: select index !!WKUP_DETECTOR_PADSEL from DIO pads.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_CNT_TH_0</name>
					<description>Counter thresholds for wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x728</addressOffset>
					<fields>
						<field>
							<name>TH</name>
							<description>Counter threshold for TimedLow and TimedHigh wakeup detector modes (see !!WKUP_DETECTOR).The threshold is in terms of always-on clock cycles.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_CNT_TH_1</name>
					<description>Counter thresholds for wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x72c</addressOffset>
					<fields>
						<field>
							<name>TH</name>
							<description>Counter threshold for TimedLow and TimedHigh wakeup detector modes (see !!WKUP_DETECTOR).The threshold is in terms of always-on clock cycles.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_CNT_TH_2</name>
					<description>Counter thresholds for wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x730</addressOffset>
					<fields>
						<field>
							<name>TH</name>
							<description>Counter threshold for TimedLow and TimedHigh wakeup detector modes (see !!WKUP_DETECTOR).The threshold is in terms of always-on clock cycles.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_CNT_TH_3</name>
					<description>Counter thresholds for wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x734</addressOffset>
					<fields>
						<field>
							<name>TH</name>
							<description>Counter threshold for TimedLow and TimedHigh wakeup detector modes (see !!WKUP_DETECTOR).The threshold is in terms of always-on clock cycles.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_CNT_TH_4</name>
					<description>Counter thresholds for wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x738</addressOffset>
					<fields>
						<field>
							<name>TH</name>
							<description>Counter threshold for TimedLow and TimedHigh wakeup detector modes (see !!WKUP_DETECTOR).The threshold is in terms of always-on clock cycles.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_CNT_TH_5</name>
					<description>Counter thresholds for wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x73c</addressOffset>
					<fields>
						<field>
							<name>TH</name>
							<description>Counter threshold for TimedLow and TimedHigh wakeup detector modes (see !!WKUP_DETECTOR).The threshold is in terms of always-on clock cycles.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_CNT_TH_6</name>
					<description>Counter thresholds for wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x740</addressOffset>
					<fields>
						<field>
							<name>TH</name>
							<description>Counter threshold for TimedLow and TimedHigh wakeup detector modes (see !!WKUP_DETECTOR).The threshold is in terms of always-on clock cycles.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_CNT_TH_7</name>
					<description>Counter thresholds for wakeup condition detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x744</addressOffset>
					<fields>
						<field>
							<name>TH</name>
							<description>Counter threshold for TimedLow and TimedHigh wakeup detector modes (see !!WKUP_DETECTOR).The threshold is in terms of always-on clock cycles.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_PADSEL_0</name>
					<description>Pad selects for pad wakeup condition detectors.This register is NOT synced to the AON domain since the muxing mechanism is implemented in the same way as the pinmux muxing matrix.</description>
					<addressOffset>0x748</addressOffset>
					<fields>
						<field>
							<name>SEL</name>
							<description>Selects a specific MIO or DIO pad (depending on !!WKUP_DETECTOR configuration).In case of MIO, the pad select index is the same as used for !!PERIPH_INSEL, meaning that index0 and 1 just select constants 0 and 1, and the MIO pads live at indices &gt;= 2. In case of DIO pads,the pad select index corresponds 1:1 to the DIO pad to be selected.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_PADSEL_1</name>
					<description>Pad selects for pad wakeup condition detectors.This register is NOT synced to the AON domain since the muxing mechanism is implemented in the same way as the pinmux muxing matrix.</description>
					<addressOffset>0x74c</addressOffset>
					<fields>
						<field>
							<name>SEL</name>
							<description>Selects a specific MIO or DIO pad (depending on !!WKUP_DETECTOR configuration).In case of MIO, the pad select index is the same as used for !!PERIPH_INSEL, meaning that index0 and 1 just select constants 0 and 1, and the MIO pads live at indices &gt;= 2. In case of DIO pads,the pad select index corresponds 1:1 to the DIO pad to be selected.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_PADSEL_2</name>
					<description>Pad selects for pad wakeup condition detectors.This register is NOT synced to the AON domain since the muxing mechanism is implemented in the same way as the pinmux muxing matrix.</description>
					<addressOffset>0x750</addressOffset>
					<fields>
						<field>
							<name>SEL</name>
							<description>Selects a specific MIO or DIO pad (depending on !!WKUP_DETECTOR configuration).In case of MIO, the pad select index is the same as used for !!PERIPH_INSEL, meaning that index0 and 1 just select constants 0 and 1, and the MIO pads live at indices &gt;= 2. In case of DIO pads,the pad select index corresponds 1:1 to the DIO pad to be selected.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_PADSEL_3</name>
					<description>Pad selects for pad wakeup condition detectors.This register is NOT synced to the AON domain since the muxing mechanism is implemented in the same way as the pinmux muxing matrix.</description>
					<addressOffset>0x754</addressOffset>
					<fields>
						<field>
							<name>SEL</name>
							<description>Selects a specific MIO or DIO pad (depending on !!WKUP_DETECTOR configuration).In case of MIO, the pad select index is the same as used for !!PERIPH_INSEL, meaning that index0 and 1 just select constants 0 and 1, and the MIO pads live at indices &gt;= 2. In case of DIO pads,the pad select index corresponds 1:1 to the DIO pad to be selected.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_PADSEL_4</name>
					<description>Pad selects for pad wakeup condition detectors.This register is NOT synced to the AON domain since the muxing mechanism is implemented in the same way as the pinmux muxing matrix.</description>
					<addressOffset>0x758</addressOffset>
					<fields>
						<field>
							<name>SEL</name>
							<description>Selects a specific MIO or DIO pad (depending on !!WKUP_DETECTOR configuration).In case of MIO, the pad select index is the same as used for !!PERIPH_INSEL, meaning that index0 and 1 just select constants 0 and 1, and the MIO pads live at indices &gt;= 2. In case of DIO pads,the pad select index corresponds 1:1 to the DIO pad to be selected.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_PADSEL_5</name>
					<description>Pad selects for pad wakeup condition detectors.This register is NOT synced to the AON domain since the muxing mechanism is implemented in the same way as the pinmux muxing matrix.</description>
					<addressOffset>0x75c</addressOffset>
					<fields>
						<field>
							<name>SEL</name>
							<description>Selects a specific MIO or DIO pad (depending on !!WKUP_DETECTOR configuration).In case of MIO, the pad select index is the same as used for !!PERIPH_INSEL, meaning that index0 and 1 just select constants 0 and 1, and the MIO pads live at indices &gt;= 2. In case of DIO pads,the pad select index corresponds 1:1 to the DIO pad to be selected.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_PADSEL_6</name>
					<description>Pad selects for pad wakeup condition detectors.This register is NOT synced to the AON domain since the muxing mechanism is implemented in the same way as the pinmux muxing matrix.</description>
					<addressOffset>0x760</addressOffset>
					<fields>
						<field>
							<name>SEL</name>
							<description>Selects a specific MIO or DIO pad (depending on !!WKUP_DETECTOR configuration).In case of MIO, the pad select index is the same as used for !!PERIPH_INSEL, meaning that index0 and 1 just select constants 0 and 1, and the MIO pads live at indices &gt;= 2. In case of DIO pads,the pad select index corresponds 1:1 to the DIO pad to be selected.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_DETECTOR_PADSEL_7</name>
					<description>Pad selects for pad wakeup condition detectors.This register is NOT synced to the AON domain since the muxing mechanism is implemented in the same way as the pinmux muxing matrix.</description>
					<addressOffset>0x764</addressOffset>
					<fields>
						<field>
							<name>SEL</name>
							<description>Selects a specific MIO or DIO pad (depending on !!WKUP_DETECTOR configuration).In case of MIO, the pad select index is the same as used for !!PERIPH_INSEL, meaning that index0 and 1 just select constants 0 and 1, and the MIO pads live at indices &gt;= 2. In case of DIO pads,the pad select index corresponds 1:1 to the DIO pad to be selected.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_CAUSE</name>
					<description>Cause registers for wakeup detectors.Note that these registers are synced to the always-on clock.The first write access always completes immediately.However, read/write accesses following a write will block until that write has completed.</description>
					<addressOffset>0x768</addressOffset>
					<fields>
						<field>
							<name>CAUSE_0</name>
							<description>Set to 1 if the corresponding detector has detected a wakeup pattern. Write 0 to clear.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CAUSE_1</name>
							<description>Set to 1 if the corresponding detector has detected a wakeup pattern. Write 0 to clear.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CAUSE_2</name>
							<description>Set to 1 if the corresponding detector has detected a wakeup pattern. Write 0 to clear.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CAUSE_3</name>
							<description>Set to 1 if the corresponding detector has detected a wakeup pattern. Write 0 to clear.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CAUSE_4</name>
							<description>Set to 1 if the corresponding detector has detected a wakeup pattern. Write 0 to clear.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CAUSE_5</name>
							<description>Set to 1 if the corresponding detector has detected a wakeup pattern. Write 0 to clear.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CAUSE_6</name>
							<description>Set to 1 if the corresponding detector has detected a wakeup pattern. Write 0 to clear.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CAUSE_7</name>
							<description>Set to 1 if the corresponding detector has detected a wakeup pattern. Write 0 to clear.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>AON_TIMER_AON</name>
			<version>1.0.0</version>
			<description>Wakeup and watchdog timers running on a low-power, always-on clock</description>
			<baseAddress>0x40470000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>AON_TIMER_AON IRQ</name>
				<value>20</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>WKUP_CTRL</name>
					<description>Wakeup Timer Control register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>enable</name>
							<description>When set to 1, the wakeup timer will count</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>prescaler</name>
							<description>Pre-scaler value for wakeup timer count</description>
							<bitRange>[12:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_THOLD</name>
					<description>Wakeup Timer Threshold Register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>threshold</name>
							<description>The count at which a wakeup interrupt should be generated</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_COUNT</name>
					<description>Wakeup Timer Count Register</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>count</name>
							<description>The current wakeup counter value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WDOG_REGWEN</name>
					<description>Watchdog Timer Write Enable Register</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>regwen</name>
							<description>Once cleared, the watchdog configuration will be locked until the next reset</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WDOG_CTRL</name>
					<description>Watchdog Timer Control register</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>enable</name>
							<description>When set to 1, the watchdog timer will count</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>pause_in_sleep</name>
							<description>When set to 1, the watchdog timer will not count during sleep</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WDOG_BARK_THOLD</name>
					<description>Watchdog Timer Bark Threshold Register</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>threshold</name>
							<description>The count at which a watchdog bark interrupt should be generated</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WDOG_BITE_THOLD</name>
					<description>Watchdog Timer Bite Threshold Register</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>threshold</name>
							<description>The count at which a watchdog bite reset should be generated</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WDOG_COUNT</name>
					<description>Watchdog Timer Count Register</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>count</name>
							<description>The current watchdog counter value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTR_STATE</name>
					<description>Interrupt State Register</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>wkup_timer_expired</name>
							<description>Raised if the wakeup timer has hit the specified threshold</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>wdog_timer_bark</name>
							<description>Raised if the watchdog timer has hit the bark threshold</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INTR_TEST</name>
					<description>Interrupt Test Register</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>wkup_timer_expired</name>
							<description>Write 1 to force wkup_timer_expired interrupt</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>wdog_timer_bark</name>
							<description>Write 1 to force wdog_timer_bark interrupt</description>
							<bitRange>[1:1]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WKUP_CAUSE</name>
					<description>Wakeup request status</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>cause</name>
							<description>AON timer requested wakeup, write 0 to clear</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>AST</name>
			<version>1.0.0</version>
			<description>ast</description>
			<baseAddress>0x40480000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>AST IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>REGA0</name>
					<description>AST Register 0 for OTP/ROM Write Testing</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA1</name>
					<description>AST 1 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA2</name>
					<description>AST 2 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA3</name>
					<description>AST 3 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA4</name>
					<description>AST 4 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA5</name>
					<description>AST 5 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA6</name>
					<description>AST 6 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA7</name>
					<description>AST 7 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA8</name>
					<description>AST 8 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA9</name>
					<description>AST 9 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA10</name>
					<description>AST 10 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA11</name>
					<description>AST 11 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA12</name>
					<description>AST 13 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA13</name>
					<description>AST 13 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA14</name>
					<description>AST 14 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA15</name>
					<description>AST 15 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA16</name>
					<description>AST 16 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA17</name>
					<description>AST 17 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA18</name>
					<description>AST 18 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA19</name>
					<description>AST 19 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA20</name>
					<description>AST 20 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA21</name>
					<description>AST 21 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA22</name>
					<description>AST 22 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA23</name>
					<description>AST 23 Register for OTP/ROM Write Testing</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA24</name>
					<description>AST 24 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA25</name>
					<description>AST 25 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA26</name>
					<description>AST 26 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA27</name>
					<description>AST 27 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA28</name>
					<description>AST 28 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA29</name>
					<description>AST 29 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA30</name>
					<description>AST 30 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA31</name>
					<description>AST 31 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA32</name>
					<description>AST 32 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA33</name>
					<description>AST 33 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA34</name>
					<description>AST 34 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA35</name>
					<description>AST 35 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA36</name>
					<description>AST 36 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGA37</name>
					<description>AST 37 Register for OTP/ROM Write Testing</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGAL</name>
					<description>AST Last Register for OTP/ROM Write Testing</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>reg32</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGB_0</name>
					<description>AST Registers Array-B to set address space size</description>
					<addressOffset>0x200</addressOffset>
					<fields>
						<field>
							<name>reg32_0</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGB_1</name>
					<description>AST Registers Array-B to set address space size</description>
					<addressOffset>0x204</addressOffset>
					<fields>
						<field>
							<name>reg32_1</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGB_2</name>
					<description>AST Registers Array-B to set address space size</description>
					<addressOffset>0x208</addressOffset>
					<fields>
						<field>
							<name>reg32_2</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGB_3</name>
					<description>AST Registers Array-B to set address space size</description>
					<addressOffset>0x20c</addressOffset>
					<fields>
						<field>
							<name>reg32_3</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGB_4</name>
					<description>AST Registers Array-B to set address space size</description>
					<addressOffset>0x210</addressOffset>
					<fields>
						<field>
							<name>reg32_4</name>
							<description>32-bit Register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>SENSOR_CTRL_AON</name>
			<version>1.0.0</version>
			<description>sensor_ctrl_aon</description>
			<baseAddress>0x40490000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>SENSOR_CTRL_AON IRQ</name>
				<value>21</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CFG_REGWEN</name>
					<description>Controls the configurability of !!FATAL_ALERT_EN register.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Configuration enable.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_TRIG</name>
					<description>Alert trigger test</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_1</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_2</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_3</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_4</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_5</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_6</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_7</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_8</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_9</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_10</name>
							<description>Alert trigger for testing0 No alerts triggered1 Continuously trigger alert until disabledFor bit mapping, please see !!ALERT_TEST</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FATAL_ALERT_EN</name>
					<description>Each bit marks a corresponding alert as fatal or recoverable.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_1</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_2</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_3</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_4</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_5</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_6</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_7</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_8</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_9</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_10</name>
							<description>1 - An alert event is fatal.0 - An alert event is recoverable.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RECOV_ALERT</name>
					<description>Each bit represents a recoverable alert that has been triggered by AST.Since these are recoverable alerts, they can be cleared by software.</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_1</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_2</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_3</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_4</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_5</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_6</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_7</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_8</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_9</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>VAL_10</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FATAL_ALERT</name>
					<description>Each bit represents a fatal alert that has been triggered by AST.Since these registers represent fatal alerts, they cannot be cleared.The lower bits are used for ast alert events.The upper bits are used for local events.</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_1</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_2</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_3</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_4</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_5</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_6</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_7</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_8</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_9</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_10</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>VAL_11</name>
							<description>1 - An alert event has been set0 - No alert event has been set</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>Status readback for ast</description>
					<addressOffset>0xf8</addressOffset>
					<fields>
						<field>
							<name>ast_init_done</name>
							<description>AST has finished initializing</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>io_pok</name>
							<description>IO power is ready</description>
							<bitRange>[2:1]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>SRAM_CTRL_RET_AON</name>
			<version>1.0.0</version>
			<description>Interfacing on-chip SRAM blocks with system bus, supports lightweight scrambling, integrity and secure wipe</description>
			<baseAddress>0x40500000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>SRAM_CTRL_RET_AON IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>STATUS</name>
					<description>SRAM status register.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>BUS_INTEG_ERROR</name>
							<description>This bit is set to 1 if a fatal bus integrity fault is detected.This error triggers a fatal_error alert.This condition is terminal.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>INIT_ERROR</name>
							<description>This bit is set to 1 if a the initialization counter has reached an invalid state.This error triggers a fatal_error alert.This condition is terminal.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ESCALATED</name>
							<description>Set to 1 if the sram controller has received an escalate request.If this is set to 1, the scrambling keys have been reset to the default valuesand all subsequent memory requests will be blocked.This condition is terminal.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SCR_KEY_VALID</name>
							<description>Set to 1 if a new scrambling key has been successfully obtained from OTP.Note that if this is set to 0, the SRAM contents are still scrambled, but adefault all-zero key and nonce are used to do so.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SCR_KEY_SEED_VALID</name>
							<description>Set to 1 if the scrambling key has been derived from a valid key seed in OTP.If !!STATUS.SCR_KEY_VALID is set to 1, !!STATUS.SCR_KEY_SEED_VALID should be 1except for cases where the scrambling key seeds have not yet been provisioned toOTP. In such a case, the scrambling key is still ephemeral (i.e., it is derivedusing entropy from CSRNG), but a default all-zero value is used as the key seed.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>INIT_DONE</name>
							<description>Set to 1 if the hardware initialization triggered via !!CTRL.INIT has completed.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXEC_REGWEN</name>
					<description>Lock register for execution enable register.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When cleared to zero, !!EXEC can not be written anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXEC</name>
					<description>Sram execution enable.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Write kMultiBitBool4True to this field to enable execution from SRAM.Note that this register only takes effect if the EN_SRAM_IFETCH switchin the OTP HW_CFG partition is set to kMultiBitBool8True. Otherwise executionfrom SRAM cannot be enabled via this register.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL_REGWEN</name>
					<description>Lock register for control register.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When cleared to zero, !!CTRL can not be written anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL</name>
					<description>SRAM ctrl register.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>RENEW_SCR_KEY</name>
							<description>Write 1 to request a new scrambling key from OTP. After writing to this register, SRAM transactions willbe blocked until !!STATUS.SCR_KEY_VALID has been set to 1. If !!STATUS.SCR_KEY_VALID was already 1before triggering a key renewal, hardware will automatically clear that status bit such that softwarecan poll its status. Note that requesting a new scrambling key takes ~200 OTP cycles, which translatesto ~800 CPU cycles (OTP runs at 24MHz, CPU runs at 100MHz). Note that writing 1 to this register whilea key request is pending has no effect.</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>INIT</name>
							<description>Write 1 to request memory init.The init mechanism uses an LFSR that is seeded with a part of the nonce supplied when requesting a scrambling key.Once seeded, the memory is initialized with pseudo-random data pulled from the LFSR.Note that !!CTRL.RENEW_SCR_KEY takes priority when writing 1 to both !!CTRL.RENEW_SCR_KEY and !!CTRL.INIT with the same write transaction.This means that the key request will complete first, followed by SRAM initialization.</description>
							<bitRange>[1:1]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>FLASH_CTRL</name>
			<version>1.0.0</version>
			<description>Interfaces and manages integrated non-volatile flash memory; supports scrambling, integrity, and secure wipe</description>
			<baseAddress>0x41000000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>FLASH_CTRL IRQ</name>
				<value>22</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>DIS</name>
					<description>Disable flash functionality</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Disables flash functionality completely.This is a shortcut mechanism used by the software to completelykill flash in case of emergency.Since this register is rw0c instead of rw, to disable, write any value in the form of0xxx or xxx0, where x could be either 0 or 1.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXEC</name>
					<description>Controls whether flash can be used for code execution fetches</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>A value of 0xa26a38f7 allows flash to be used for code execution.Any other value prevents code execution.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INIT</name>
					<description>Controller init register</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Initializes the flash controller.During the initialization process, the flash controller requests the address and datascramble keys and reads out the root seeds stored in flash before allowing other usageof the flash controller.When the initialization sequence is complete, the flash read buffers are enabledand turned on.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL_REGWEN</name>
					<description>Controls the configurability of the !!CONTROL register.This register ensures the contents of !!CONTROL cannot be changed by software once a flashoperation has begun.It unlocks whenever the existing flash operation completes, regardless of success or error.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Configuration enable.This bit defaults to 1 and is set to 0 by hardware when flash operation is initiated.When the controller completes the flash operation, this bit is setback to 1 to allow software configuration of !!CONTROL</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CONTROL</name>
					<description>Control register</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>START</name>
							<description>Start flash transaction. This bit shall only be set at the same time or after the otherfields of the !!CONTROL register and !!ADDR have been programmed.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>OP</name>
							<description>Flash operation selection</description>
							<bitRange>[5:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_SEL</name>
							<description>Flash program operation type selection</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_SEL</name>
							<description>Flash erase operation type selection</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PARTITION_SEL</name>
							<description>When doing a read, program or page erase operation, selects either info or data partition for operation.When 0, select data partition - this is the portion of flash that is accessible both by the host and by the controller.When 1, select info partition - this is the portion of flash that is only accessible by the controller.When doing a bank erase operation, selects info partition also for erase.When 0, bank erase only erases data partition.When 1, bank erase erases data partition and info partition.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INFO_SEL</name>
							<description>Informational partions can have multiple types.This field selects the info type to be accessed.</description>
							<bitRange>[10:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>NUM</name>
							<description>One fewer than the number of bus words the flash operation should read or program.For example, to read 10 words, software should program this field with the value 9.</description>
							<bitRange>[27:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ADDR</name>
					<description>Address for flash operation</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>START</name>
							<description>Start address of a flash transaction. This is a byte address relative to the flashonly. Ie, an address of 0 will access address 0 of the requested partition.For read operations, the flash controller will truncate to the closest, lower wordaligned address. For example, if 0x13 is supplied, the controller will perform aread at address 0x10.Program operations behave similarly, the controller does not have read modified writesupport.For page erases, the controller will truncate to the closest lower page alignedaddress. Similarly for bank erases, the controller will truncate to the closestlower bank aligned address.</description>
							<bitRange>[19:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PROG_TYPE_EN</name>
					<description>Enable different program types</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>NORMAL</name>
							<description>Normal prog type available</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>REPAIR</name>
							<description>Repair prog type available</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERASE_SUSPEND</name>
					<description>Suspend erase</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>REQ</name>
							<description>When 1, request erase suspend.If no erase ongoing, the request is immediately cleared by hardwareIf erase ongoing, the request is fed to the flash_phy and cleared when the suspend is handled.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGION_CFG_REGWEN_0</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Region register write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGION_CFG_REGWEN_1</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Region register write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGION_CFG_REGWEN_2</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Region register write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGION_CFG_REGWEN_3</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Region register write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGION_CFG_REGWEN_4</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Region register write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGION_CFG_REGWEN_5</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Region register write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGION_CFG_REGWEN_6</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Region register write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGION_CFG_REGWEN_7</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Region register write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_CFG_0</name>
					<description>Memory property configuration for data partition</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply.If region is disabled, it is not matched against any incoming transaction.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is integrity checked and reliability ECC enabled.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_CFG_1</name>
					<description>Memory property configuration for data partition</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply.If region is disabled, it is not matched against any incoming transaction.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is integrity checked and reliability ECC enabled.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_CFG_2</name>
					<description>Memory property configuration for data partition</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply.If region is disabled, it is not matched against any incoming transaction.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is integrity checked and reliability ECC enabled.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_CFG_3</name>
					<description>Memory property configuration for data partition</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply.If region is disabled, it is not matched against any incoming transaction.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is integrity checked and reliability ECC enabled.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_CFG_4</name>
					<description>Memory property configuration for data partition</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply.If region is disabled, it is not matched against any incoming transaction.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is integrity checked and reliability ECC enabled.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_CFG_5</name>
					<description>Memory property configuration for data partition</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply.If region is disabled, it is not matched against any incoming transaction.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is integrity checked and reliability ECC enabled.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_CFG_6</name>
					<description>Memory property configuration for data partition</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply.If region is disabled, it is not matched against any incoming transaction.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is integrity checked and reliability ECC enabled.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_CFG_7</name>
					<description>Memory property configuration for data partition</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply.If region is disabled, it is not matched against any incoming transaction.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is integrity checked and reliability ECC enabled.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_0</name>
					<description>Memory base and size configuration for data partition</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>BASE</name>
							<description>Region base page. Note the granularity is page, not byte or word</description>
							<bitRange>[8:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SIZE</name>
							<description>Region size in number of pages.For example, if base is 0 and size is 1, then the region is defined by page 0.If base is 0 and size is 2, then the region is defined by pages 0 and 1.</description>
							<bitRange>[18:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_1</name>
					<description>Memory base and size configuration for data partition</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>BASE</name>
							<description>Region base page. Note the granularity is page, not byte or word</description>
							<bitRange>[8:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SIZE</name>
							<description>Region size in number of pages.For example, if base is 0 and size is 1, then the region is defined by page 0.If base is 0 and size is 2, then the region is defined by pages 0 and 1.</description>
							<bitRange>[18:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_2</name>
					<description>Memory base and size configuration for data partition</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>BASE</name>
							<description>Region base page. Note the granularity is page, not byte or word</description>
							<bitRange>[8:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SIZE</name>
							<description>Region size in number of pages.For example, if base is 0 and size is 1, then the region is defined by page 0.If base is 0 and size is 2, then the region is defined by pages 0 and 1.</description>
							<bitRange>[18:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_3</name>
					<description>Memory base and size configuration for data partition</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>BASE</name>
							<description>Region base page. Note the granularity is page, not byte or word</description>
							<bitRange>[8:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SIZE</name>
							<description>Region size in number of pages.For example, if base is 0 and size is 1, then the region is defined by page 0.If base is 0 and size is 2, then the region is defined by pages 0 and 1.</description>
							<bitRange>[18:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_4</name>
					<description>Memory base and size configuration for data partition</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>BASE</name>
							<description>Region base page. Note the granularity is page, not byte or word</description>
							<bitRange>[8:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SIZE</name>
							<description>Region size in number of pages.For example, if base is 0 and size is 1, then the region is defined by page 0.If base is 0 and size is 2, then the region is defined by pages 0 and 1.</description>
							<bitRange>[18:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_5</name>
					<description>Memory base and size configuration for data partition</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>BASE</name>
							<description>Region base page. Note the granularity is page, not byte or word</description>
							<bitRange>[8:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SIZE</name>
							<description>Region size in number of pages.For example, if base is 0 and size is 1, then the region is defined by page 0.If base is 0 and size is 2, then the region is defined by pages 0 and 1.</description>
							<bitRange>[18:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_6</name>
					<description>Memory base and size configuration for data partition</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>BASE</name>
							<description>Region base page. Note the granularity is page, not byte or word</description>
							<bitRange>[8:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SIZE</name>
							<description>Region size in number of pages.For example, if base is 0 and size is 1, then the region is defined by page 0.If base is 0 and size is 2, then the region is defined by pages 0 and 1.</description>
							<bitRange>[18:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_REGION_7</name>
					<description>Memory base and size configuration for data partition</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>BASE</name>
							<description>Region base page. Note the granularity is page, not byte or word</description>
							<bitRange>[8:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SIZE</name>
							<description>Region size in number of pages.For example, if base is 0 and size is 1, then the region is defined by page 0.If base is 0 and size is 2, then the region is defined by pages 0 and 1.</description>
							<bitRange>[18:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEFAULT_REGION</name>
					<description>Default region properties</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_0</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_1</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_2</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_3</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_4</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_5</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_6</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xdc</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_7</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xe0</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_8</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xe4</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_REGWEN_9</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0xe8</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_0</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0xec</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_1</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0xf0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_2</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0xf4</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_3</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0xf8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_4</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0xfc</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_5</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x100</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_6</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x104</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_7</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x108</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_8</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x10c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO0_PAGE_CFG_9</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO1_REGWEN_0</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x114</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info1 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO1_PAGE_CFG_0</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x118</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO2_REGWEN_0</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x11c</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info2 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO2_REGWEN_1</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x120</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info2 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO2_PAGE_CFG_0</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x124</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK0_INFO2_PAGE_CFG_1</name>
					<description>Memory property configuration for info partition in bank0, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x128</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_0</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x12c</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_1</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x130</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_2</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x134</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_3</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x138</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_4</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x13c</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_5</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x140</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_6</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x144</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_7</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x148</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_8</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x14c</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_REGWEN_9</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x150</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info0 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_0</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x154</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_1</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x158</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_2</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x15c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_3</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x160</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_4</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x164</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_5</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x168</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_6</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x16c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_7</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x170</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_8</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x174</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO0_PAGE_CFG_9</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x178</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO1_REGWEN_0</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x17c</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info1 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO1_PAGE_CFG_0</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x180</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO2_REGWEN_0</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x184</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info2 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO2_REGWEN_1</name>
					<description>Memory region registers configuration enable.</description>
					<addressOffset>0x188</addressOffset>
					<fields>
						<field>
							<name>REGION</name>
							<description>Info2 page write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO2_PAGE_CFG_0</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x18c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK1_INFO2_PAGE_CFG_1</name>
					<description>Memory property configuration for info partition in bank1, Unlike data partition, each page is individually configured.</description>
					<addressOffset>0x190</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Region enabled, following fields apply</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD_EN</name>
							<description>Region can be read</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PROG_EN</name>
							<description>Region can be programmed</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN</name>
							<description>Region can be erased</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SCRAMBLE_EN</name>
							<description>Region is scramble enabled.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_EN</name>
							<description>Region is ECC enabled (both integrity and reliability ECC).</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>HE_EN</name>
							<description>Region is high endurance enabled.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>HW_INFO_CFG_OVERRIDE</name>
					<description>HW interface info configuration rule overrides</description>
					<addressOffset>0x194</addressOffset>
					<fields>
						<field>
							<name>SCRAMBLE_DIS</name>
							<description>The hardwired hardware info configuration rules for scramble enable are logically AND'd withthis field.If the hardware rules hardwires scramble to enable, we can disable via software if needed.By default this field is false.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ECC_DIS</name>
							<description>The hardwired hardware info configuration rules for ECC enable are logically AND'd withthis field.If the hardware rules hardwires ECC to enable, we can disable via software if needed.By default this field is false.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BANK_CFG_REGWEN</name>
					<description>Bank configuration registers configuration enable.</description>
					<addressOffset>0x198</addressOffset>
					<fields>
						<field>
							<name>BANK</name>
							<description>Bank register write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MP_BANK_CFG_SHADOWED</name>
					<description>Memory properties bank configuration</description>
					<addressOffset>0x19c</addressOffset>
					<fields>
						<field>
							<name>ERASE_EN_0</name>
							<description>Bank wide erase enable</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ERASE_EN_1</name>
							<description>Bank wide erase enable</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OP_STATUS</name>
					<description>Flash Operation Status</description>
					<addressOffset>0x1a4</addressOffset>
					<fields>
						<field>
							<name>done</name>
							<description>Flash operation done. Set by HW, cleared by SW</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>err</name>
							<description>Flash operation error. Set by HW, cleared by SW. See !!ERR_CODE for more details.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>Flash Controller Status</description>
					<addressOffset>0x1a8</addressOffset>
					<fields>
						<field>
							<name>rd_full</name>
							<description>Flash read FIFO full, software must consume data</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>rd_empty</name>
							<description>Flash read FIFO empty</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>prog_full</name>
							<description>Flash program FIFO full</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>prog_empty</name>
							<description>Flash program FIFO empty, software must provide data</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>init_wip</name>
							<description>Flash controller undergoing init, inclusive of phy init</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>initialized</name>
							<description>Flash controller initialized</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEBUG_STATE</name>
					<description>Current flash fsm state</description>
					<addressOffset>0x1ac</addressOffset>
					<fields>
						<field>
							<name>lcmgr_state</name>
							<description>Current lcmgr interface staet</description>
							<bitRange>[10:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE</name>
					<description>Flash error code register.This register tabulates detailed error status of the flash.This is separate from !!OP_STATUS, which is used to indicate the current state of the software initiatedflash operation.Note, all errors in this register are considered recoverable errors, ie, errors that could have beengenerated by software.</description>
					<addressOffset>0x1b0</addressOffset>
					<fields>
						<field>
							<name>op_err</name>
							<description>Software has supplied an undefined operation.See !!CONTROL.OP for list of valid operations.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mp_err</name>
							<description>Flash access has encountered an access permission error.Please see !!ERR_ADDR for exact address.This is a synchronous error.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rd_err</name>
							<description>Flash read has an error.This could be a reliability ECC error or an storage integrity errorencountered during a software issued controller read, see !!STD_FAULT_STATUS.See !!ERR_ADDR for exact address.This is a synchronous error.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>prog_err</name>
							<description>Flash program has an error.This could be a program integrity error, see !!STD_FAULT_STATUS.This is a synchronous error.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>prog_win_err</name>
							<description>Flash program has a window resolution error. Ie, the start of programand end of program are in different windows. Please check !!ERR_ADDR.This is a synchronous error.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>prog_type_err</name>
							<description>Flash program selected unavailable type, see !!PROG_TYPE_EN.This is a synchronous error.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>update_err</name>
							<description>A shadow register encountered an update error.This is an asynchronous error.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>macro_err</name>
							<description>A recoverable error has been encountered in the flash macro.Please read the flash macro status registers for more details.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STD_FAULT_STATUS</name>
					<description>This register tabulates standard fault status of the flash.These represent errors that occur in the standard structures of the design.For example fsm integrity, counter integrity and tlul integrity.</description>
					<addressOffset>0x1b4</addressOffset>
					<fields>
						<field>
							<name>reg_intg_err</name>
							<description>The flash controller encountered a register integrity error.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>prog_intg_err</name>
							<description>The flash controller encountered a program data transmission integrity error.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>lcmgr_err</name>
							<description>The life cycle management interface has encountered a fatal error.The error is either an FSM sparse encoding error or a count error.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>lcmgr_intg_err</name>
							<description>The life cycle management interface has encountered a transmissionintegrity error. This is an integrity error on the generated integrityduring a life cycle management interface read.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>arb_fsm_err</name>
							<description>The arbiter fsm has encountered a sparse encoding error.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>storage_err</name>
							<description>A shadow register encountered a storage error.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>phy_fsm_err</name>
							<description>A flash phy fsm has encountered a sparse encoding error.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ctrl_cnt_err</name>
							<description>Flash ctrl read/prog has encountered a count error.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>fifo_err</name>
							<description>Flash primitive fifo's have encountered a count error.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FAULT_STATUS</name>
					<description>This register tabulates customized fault status of the flash.These are errors that are impossible to have been caused by software or unrecoverablein nature.</description>
					<addressOffset>0x1b8</addressOffset>
					<fields>
						<field>
							<name>op_err</name>
							<description>The flash life cycle management interface has supplied an undefined operation.See !!CONTROL.OP for list of valid operations.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>mp_err</name>
							<description>The flash life cycle management interface encountered a memory permission error.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>rd_err</name>
							<description>The flash life cycle management interface encountered a read error.This could be a reliability ECC error or an integrity ECC errorencountered during a read, see !!STD_FAULT_STATUS for more details.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>prog_err</name>
							<description>The flash life cycle management interface encountered a program error.This could be a program integirty eror, see !!STD_FAULT_STATUS for more details.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>prog_win_err</name>
							<description>The flash life cycle management interface encountered a program resolution error.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>prog_type_err</name>
							<description>The flash life cycle management interface encountered a program type error.A program type not supported by the flash macro was issued.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>seed_err</name>
							<description>The seed reading process encountered an unexpected error.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>phy_relbl_err</name>
							<description>The flash macro encountered a storage reliability ECC error.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>phy_storage_err</name>
							<description>The flash macro encountered a storage integrity ECC error.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>spurious_ack</name>
							<description>The flash emitted an unexpected acknowledgement.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>arb_err</name>
							<description>The phy arbiter encountered inconsistent results.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>host_gnt_err</name>
							<description>A host transaction was granted with illegal properties.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_ADDR</name>
					<description>Synchronous error address</description>
					<addressOffset>0x1bc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[19:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ECC_SINGLE_ERR_CNT</name>
					<description>Total number of single bit ECC error count</description>
					<addressOffset>0x1c0</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>This count will not wrap when saturated</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>Value_1</name>
							<description>This count will not wrap when saturated</description>
							<bitRange>[15:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ECC_SINGLE_ERR_ADDR_0</name>
					<description>Latest address of ECC single err</description>
					<addressOffset>0x1c8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Latest single error address for this bank</description>
							<bitRange>[19:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ECC_SINGLE_ERR_ADDR_1</name>
					<description>Latest address of ECC single err</description>
					<addressOffset>0x1cc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Latest single error address for this bank</description>
							<bitRange>[19:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PHY_ALERT_CFG</name>
					<description>Phy alert configuration</description>
					<addressOffset>0x1d0</addressOffset>
					<fields>
						<field>
							<name>alert_ack</name>
							<description>Acknowledge flash phy alert</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>alert_trig</name>
							<description>Trigger flash phy alert</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PHY_STATUS</name>
					<description>Flash Phy Status</description>
					<addressOffset>0x1d4</addressOffset>
					<fields>
						<field>
							<name>init_wip</name>
							<description>Flash phy controller initializing</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>prog_normal_avail</name>
							<description>Normal program supported</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>prog_repair_avail</name>
							<description>Program repair supported</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>Scratch</name>
					<description>Flash Controller Scratch</description>
					<addressOffset>0x1d8</addressOffset>
					<fields>
						<field>
							<name>data</name>
							<description>Flash ctrl scratch register</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FIFO_LVL</name>
					<description>Programmable depth where FIFOs should generate interrupts</description>
					<addressOffset>0x1dc</addressOffset>
					<fields>
						<field>
							<name>PROG</name>
							<description>When the program FIFO drains to this level, trigger an interrupt.Default value is set such that interrupt does not trigger at reset.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RD</name>
							<description>When the read FIFO fills to this level, trigger an interrupt.Default value is set such that interrupt does not trigger at reset.</description>
							<bitRange>[12:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FIFO_RST</name>
					<description>Reset for flash controller FIFOs</description>
					<addressOffset>0x1e0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Active high resets for both program and read FIFOs. This is especially useful after the controllerencounters an error of some kind.This bit will hold the FIFO in reset as long as it is set.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CURR_FIFO_LVL</name>
					<description>Current program and read fifo depth</description>
					<addressOffset>0x1e4</addressOffset>
					<fields>
						<field>
							<name>PROG</name>
							<description>Current program fifo depth</description>
							<bitRange>[4:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RD</name>
							<description>Current read fifo depth</description>
							<bitRange>[12:8]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR0_REGWEN</name>
					<description/>
					<addressOffset>0x1e8</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR1</name>
					<description/>
					<addressOffset>0x1ec</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[12:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR2</name>
					<description/>
					<addressOffset>0x1f0</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field4</name>
							<description/>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field5</name>
							<description/>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field6</name>
							<description/>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field7</name>
							<description/>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR3</name>
					<description/>
					<addressOffset>0x1f4</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[10:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[13:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field4</name>
							<description/>
							<bitRange>[16:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field5</name>
							<description/>
							<bitRange>[19:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field6</name>
							<description/>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field7</name>
							<description/>
							<bitRange>[23:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field8</name>
							<description/>
							<bitRange>[25:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field9</name>
							<description/>
							<bitRange>[27:26]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR4</name>
					<description/>
					<addressOffset>0x1f8</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[5:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[8:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[11:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR5</name>
					<description/>
					<addressOffset>0x1fc</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[4:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[13:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[18:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field4</name>
							<description/>
							<bitRange>[22:19]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR6</name>
					<description/>
					<addressOffset>0x200</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[5:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[13:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field3</name>
							<description/>
							<bitRange>[16:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field4</name>
							<description/>
							<bitRange>[18:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field5</name>
							<description/>
							<bitRange>[20:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field6</name>
							<description/>
							<bitRange>[22:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field7</name>
							<description/>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field8</name>
							<description/>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR7</name>
					<description/>
					<addressOffset>0x204</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[16:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR8</name>
					<description/>
					<addressOffset>0x208</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR9</name>
					<description/>
					<addressOffset>0x20c</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR10</name>
					<description/>
					<addressOffset>0x210</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR11</name>
					<description/>
					<addressOffset>0x214</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR12</name>
					<description/>
					<addressOffset>0x218</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[9:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR13</name>
					<description/>
					<addressOffset>0x21c</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[19:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR14</name>
					<description/>
					<addressOffset>0x220</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR15</name>
					<description/>
					<addressOffset>0x224</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR16</name>
					<description/>
					<addressOffset>0x228</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR17</name>
					<description/>
					<addressOffset>0x22c</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR18</name>
					<description/>
					<addressOffset>0x230</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR19</name>
					<description/>
					<addressOffset>0x234</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CSR20</name>
					<description/>
					<addressOffset>0x238</addressOffset>
					<fields>
						<field>
							<name>field0</name>
							<description/>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field1</name>
							<description/>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>field2</name>
							<description/>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>RV_DM</name>
			<version>1.0.0</version>
			<description>Enables debug support for Ibex, access protected by life cycle</description>
			<baseAddress>0x41200000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>RV_DM IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>HALTED</name>
					<description>Write to this address to acknowledge that the core has halted.</description>
					<addressOffset>0x100</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>GOING</name>
					<description>Write to this address to acknowledge that the core is executing.</description>
					<addressOffset>0x108</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RESUMING</name>
					<description>Write to this address to acknowledge that the core is resuming non-debug operation.</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXCEPTION</name>
					<description>An exception was triggered while the core was in debug mode.</description>
					<addressOffset>0x118</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WHERETO</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x300</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_0</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x338</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_1</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x33c</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_2</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x340</addressOffset>
					<fields>
						<field>
							<name>Value_2</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_3</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x344</addressOffset>
					<fields>
						<field>
							<name>Value_3</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_4</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x348</addressOffset>
					<fields>
						<field>
							<name>Value_4</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_5</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x34c</addressOffset>
					<fields>
						<field>
							<name>Value_5</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_6</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x350</addressOffset>
					<fields>
						<field>
							<name>Value_6</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_7</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x354</addressOffset>
					<fields>
						<field>
							<name>Value_7</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_8</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x358</addressOffset>
					<fields>
						<field>
							<name>Value_8</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ABSTRACTCMD_9</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x35c</addressOffset>
					<fields>
						<field>
							<name>Value_9</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PROGRAM_BUFFER_0</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x360</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PROGRAM_BUFFER_1</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x364</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PROGRAM_BUFFER_2</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x368</addressOffset>
					<fields>
						<field>
							<name>Value_2</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PROGRAM_BUFFER_3</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x36c</addressOffset>
					<fields>
						<field>
							<name>Value_3</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PROGRAM_BUFFER_4</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x370</addressOffset>
					<fields>
						<field>
							<name>Value_4</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PROGRAM_BUFFER_5</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x374</addressOffset>
					<fields>
						<field>
							<name>Value_5</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PROGRAM_BUFFER_6</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x378</addressOffset>
					<fields>
						<field>
							<name>Value_6</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PROGRAM_BUFFER_7</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x37c</addressOffset>
					<fields>
						<field>
							<name>Value_7</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATAADDR_0</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x380</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATAADDR_1</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x384</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_0</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x400</addressOffset>
					<fields>
						<field>
							<name>Value_0</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_1</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x404</addressOffset>
					<fields>
						<field>
							<name>Value_1</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_2</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x408</addressOffset>
					<fields>
						<field>
							<name>Value_2</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_3</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x40c</addressOffset>
					<fields>
						<field>
							<name>Value_3</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_4</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x410</addressOffset>
					<fields>
						<field>
							<name>Value_4</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_5</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x414</addressOffset>
					<fields>
						<field>
							<name>Value_5</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_6</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x418</addressOffset>
					<fields>
						<field>
							<name>Value_6</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_7</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x41c</addressOffset>
					<fields>
						<field>
							<name>Value_7</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_8</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x420</addressOffset>
					<fields>
						<field>
							<name>Value_8</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_9</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x424</addressOffset>
					<fields>
						<field>
							<name>Value_9</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_10</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x428</addressOffset>
					<fields>
						<field>
							<name>Value_10</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_11</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x42c</addressOffset>
					<fields>
						<field>
							<name>Value_11</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_12</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x430</addressOffset>
					<fields>
						<field>
							<name>Value_12</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_13</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x434</addressOffset>
					<fields>
						<field>
							<name>Value_13</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_14</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x438</addressOffset>
					<fields>
						<field>
							<name>Value_14</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_15</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x43c</addressOffset>
					<fields>
						<field>
							<name>Value_15</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_16</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x440</addressOffset>
					<fields>
						<field>
							<name>Value_16</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_17</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x444</addressOffset>
					<fields>
						<field>
							<name>Value_17</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_18</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x448</addressOffset>
					<fields>
						<field>
							<name>Value_18</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_19</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x44c</addressOffset>
					<fields>
						<field>
							<name>Value_19</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_20</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x450</addressOffset>
					<fields>
						<field>
							<name>Value_20</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_21</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x454</addressOffset>
					<fields>
						<field>
							<name>Value_21</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_22</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x458</addressOffset>
					<fields>
						<field>
							<name>Value_22</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_23</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x45c</addressOffset>
					<fields>
						<field>
							<name>Value_23</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_24</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x460</addressOffset>
					<fields>
						<field>
							<name>Value_24</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_25</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x464</addressOffset>
					<fields>
						<field>
							<name>Value_25</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_26</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x468</addressOffset>
					<fields>
						<field>
							<name>Value_26</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_27</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x46c</addressOffset>
					<fields>
						<field>
							<name>Value_27</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_28</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x470</addressOffset>
					<fields>
						<field>
							<name>Value_28</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_29</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x474</addressOffset>
					<fields>
						<field>
							<name>Value_29</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_30</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x478</addressOffset>
					<fields>
						<field>
							<name>Value_30</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_31</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x47c</addressOffset>
					<fields>
						<field>
							<name>Value_31</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_32</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x480</addressOffset>
					<fields>
						<field>
							<name>Value_32</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_33</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x484</addressOffset>
					<fields>
						<field>
							<name>Value_33</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_34</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x488</addressOffset>
					<fields>
						<field>
							<name>Value_34</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_35</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x48c</addressOffset>
					<fields>
						<field>
							<name>Value_35</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_36</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x490</addressOffset>
					<fields>
						<field>
							<name>Value_36</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_37</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x494</addressOffset>
					<fields>
						<field>
							<name>Value_37</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_38</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x498</addressOffset>
					<fields>
						<field>
							<name>Value_38</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_39</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x49c</addressOffset>
					<fields>
						<field>
							<name>Value_39</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_40</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4a0</addressOffset>
					<fields>
						<field>
							<name>Value_40</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_41</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4a4</addressOffset>
					<fields>
						<field>
							<name>Value_41</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_42</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4a8</addressOffset>
					<fields>
						<field>
							<name>Value_42</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_43</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4ac</addressOffset>
					<fields>
						<field>
							<name>Value_43</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_44</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4b0</addressOffset>
					<fields>
						<field>
							<name>Value_44</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_45</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4b4</addressOffset>
					<fields>
						<field>
							<name>Value_45</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_46</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4b8</addressOffset>
					<fields>
						<field>
							<name>Value_46</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_47</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4bc</addressOffset>
					<fields>
						<field>
							<name>Value_47</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_48</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4c0</addressOffset>
					<fields>
						<field>
							<name>Value_48</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_49</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4c4</addressOffset>
					<fields>
						<field>
							<name>Value_49</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_50</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4c8</addressOffset>
					<fields>
						<field>
							<name>Value_50</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_51</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4cc</addressOffset>
					<fields>
						<field>
							<name>Value_51</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_52</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4d0</addressOffset>
					<fields>
						<field>
							<name>Value_52</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_53</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4d4</addressOffset>
					<fields>
						<field>
							<name>Value_53</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_54</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4d8</addressOffset>
					<fields>
						<field>
							<name>Value_54</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_55</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4dc</addressOffset>
					<fields>
						<field>
							<name>Value_55</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_56</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4e0</addressOffset>
					<fields>
						<field>
							<name>Value_56</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_57</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4e4</addressOffset>
					<fields>
						<field>
							<name>Value_57</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_58</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4e8</addressOffset>
					<fields>
						<field>
							<name>Value_58</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_59</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4ec</addressOffset>
					<fields>
						<field>
							<name>Value_59</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_60</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4f0</addressOffset>
					<fields>
						<field>
							<name>Value_60</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_61</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4f4</addressOffset>
					<fields>
						<field>
							<name>Value_61</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_62</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4f8</addressOffset>
					<fields>
						<field>
							<name>Value_62</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_63</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x4fc</addressOffset>
					<fields>
						<field>
							<name>Value_63</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_64</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x500</addressOffset>
					<fields>
						<field>
							<name>Value_64</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_65</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x504</addressOffset>
					<fields>
						<field>
							<name>Value_65</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_66</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x508</addressOffset>
					<fields>
						<field>
							<name>Value_66</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_67</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x50c</addressOffset>
					<fields>
						<field>
							<name>Value_67</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_68</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x510</addressOffset>
					<fields>
						<field>
							<name>Value_68</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_69</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x514</addressOffset>
					<fields>
						<field>
							<name>Value_69</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_70</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x518</addressOffset>
					<fields>
						<field>
							<name>Value_70</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_71</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x51c</addressOffset>
					<fields>
						<field>
							<name>Value_71</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_72</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x520</addressOffset>
					<fields>
						<field>
							<name>Value_72</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_73</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x524</addressOffset>
					<fields>
						<field>
							<name>Value_73</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_74</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x528</addressOffset>
					<fields>
						<field>
							<name>Value_74</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_75</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x52c</addressOffset>
					<fields>
						<field>
							<name>Value_75</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_76</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x530</addressOffset>
					<fields>
						<field>
							<name>Value_76</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_77</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x534</addressOffset>
					<fields>
						<field>
							<name>Value_77</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_78</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x538</addressOffset>
					<fields>
						<field>
							<name>Value_78</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_79</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x53c</addressOffset>
					<fields>
						<field>
							<name>Value_79</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_80</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x540</addressOffset>
					<fields>
						<field>
							<name>Value_80</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_81</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x544</addressOffset>
					<fields>
						<field>
							<name>Value_81</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_82</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x548</addressOffset>
					<fields>
						<field>
							<name>Value_82</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_83</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x54c</addressOffset>
					<fields>
						<field>
							<name>Value_83</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_84</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x550</addressOffset>
					<fields>
						<field>
							<name>Value_84</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_85</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x554</addressOffset>
					<fields>
						<field>
							<name>Value_85</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_86</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x558</addressOffset>
					<fields>
						<field>
							<name>Value_86</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_87</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x55c</addressOffset>
					<fields>
						<field>
							<name>Value_87</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_88</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x560</addressOffset>
					<fields>
						<field>
							<name>Value_88</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_89</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x564</addressOffset>
					<fields>
						<field>
							<name>Value_89</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_90</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x568</addressOffset>
					<fields>
						<field>
							<name>Value_90</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_91</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x56c</addressOffset>
					<fields>
						<field>
							<name>Value_91</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_92</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x570</addressOffset>
					<fields>
						<field>
							<name>Value_92</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_93</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x574</addressOffset>
					<fields>
						<field>
							<name>Value_93</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_94</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x578</addressOffset>
					<fields>
						<field>
							<name>Value_94</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_95</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x57c</addressOffset>
					<fields>
						<field>
							<name>Value_95</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_96</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x580</addressOffset>
					<fields>
						<field>
							<name>Value_96</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_97</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x584</addressOffset>
					<fields>
						<field>
							<name>Value_97</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_98</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x588</addressOffset>
					<fields>
						<field>
							<name>Value_98</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_99</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x58c</addressOffset>
					<fields>
						<field>
							<name>Value_99</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_100</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x590</addressOffset>
					<fields>
						<field>
							<name>Value_100</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_101</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x594</addressOffset>
					<fields>
						<field>
							<name>Value_101</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_102</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x598</addressOffset>
					<fields>
						<field>
							<name>Value_102</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_103</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x59c</addressOffset>
					<fields>
						<field>
							<name>Value_103</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_104</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5a0</addressOffset>
					<fields>
						<field>
							<name>Value_104</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_105</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5a4</addressOffset>
					<fields>
						<field>
							<name>Value_105</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_106</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5a8</addressOffset>
					<fields>
						<field>
							<name>Value_106</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_107</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5ac</addressOffset>
					<fields>
						<field>
							<name>Value_107</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_108</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5b0</addressOffset>
					<fields>
						<field>
							<name>Value_108</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_109</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5b4</addressOffset>
					<fields>
						<field>
							<name>Value_109</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_110</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5b8</addressOffset>
					<fields>
						<field>
							<name>Value_110</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_111</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5bc</addressOffset>
					<fields>
						<field>
							<name>Value_111</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_112</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5c0</addressOffset>
					<fields>
						<field>
							<name>Value_112</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_113</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5c4</addressOffset>
					<fields>
						<field>
							<name>Value_113</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_114</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5c8</addressOffset>
					<fields>
						<field>
							<name>Value_114</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_115</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5cc</addressOffset>
					<fields>
						<field>
							<name>Value_115</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_116</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5d0</addressOffset>
					<fields>
						<field>
							<name>Value_116</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_117</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5d4</addressOffset>
					<fields>
						<field>
							<name>Value_117</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_118</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5d8</addressOffset>
					<fields>
						<field>
							<name>Value_118</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_119</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5dc</addressOffset>
					<fields>
						<field>
							<name>Value_119</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_120</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5e0</addressOffset>
					<fields>
						<field>
							<name>Value_120</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_121</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5e4</addressOffset>
					<fields>
						<field>
							<name>Value_121</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_122</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5e8</addressOffset>
					<fields>
						<field>
							<name>Value_122</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_123</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5ec</addressOffset>
					<fields>
						<field>
							<name>Value_123</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_124</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5f0</addressOffset>
					<fields>
						<field>
							<name>Value_124</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_125</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5f4</addressOffset>
					<fields>
						<field>
							<name>Value_125</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_126</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5f8</addressOffset>
					<fields>
						<field>
							<name>Value_126</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_127</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x5fc</addressOffset>
					<fields>
						<field>
							<name>Value_127</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_128</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x600</addressOffset>
					<fields>
						<field>
							<name>Value_128</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_129</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x604</addressOffset>
					<fields>
						<field>
							<name>Value_129</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_130</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x608</addressOffset>
					<fields>
						<field>
							<name>Value_130</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_131</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x60c</addressOffset>
					<fields>
						<field>
							<name>Value_131</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_132</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x610</addressOffset>
					<fields>
						<field>
							<name>Value_132</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_133</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x614</addressOffset>
					<fields>
						<field>
							<name>Value_133</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_134</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x618</addressOffset>
					<fields>
						<field>
							<name>Value_134</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_135</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x61c</addressOffset>
					<fields>
						<field>
							<name>Value_135</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_136</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x620</addressOffset>
					<fields>
						<field>
							<name>Value_136</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_137</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x624</addressOffset>
					<fields>
						<field>
							<name>Value_137</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_138</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x628</addressOffset>
					<fields>
						<field>
							<name>Value_138</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_139</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x62c</addressOffset>
					<fields>
						<field>
							<name>Value_139</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_140</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x630</addressOffset>
					<fields>
						<field>
							<name>Value_140</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_141</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x634</addressOffset>
					<fields>
						<field>
							<name>Value_141</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_142</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x638</addressOffset>
					<fields>
						<field>
							<name>Value_142</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_143</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x63c</addressOffset>
					<fields>
						<field>
							<name>Value_143</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_144</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x640</addressOffset>
					<fields>
						<field>
							<name>Value_144</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_145</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x644</addressOffset>
					<fields>
						<field>
							<name>Value_145</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_146</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x648</addressOffset>
					<fields>
						<field>
							<name>Value_146</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_147</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x64c</addressOffset>
					<fields>
						<field>
							<name>Value_147</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_148</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x650</addressOffset>
					<fields>
						<field>
							<name>Value_148</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_149</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x654</addressOffset>
					<fields>
						<field>
							<name>Value_149</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_150</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x658</addressOffset>
					<fields>
						<field>
							<name>Value_150</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_151</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x65c</addressOffset>
					<fields>
						<field>
							<name>Value_151</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_152</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x660</addressOffset>
					<fields>
						<field>
							<name>Value_152</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_153</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x664</addressOffset>
					<fields>
						<field>
							<name>Value_153</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_154</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x668</addressOffset>
					<fields>
						<field>
							<name>Value_154</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_155</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x66c</addressOffset>
					<fields>
						<field>
							<name>Value_155</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_156</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x670</addressOffset>
					<fields>
						<field>
							<name>Value_156</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_157</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x674</addressOffset>
					<fields>
						<field>
							<name>Value_157</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_158</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x678</addressOffset>
					<fields>
						<field>
							<name>Value_158</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_159</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x67c</addressOffset>
					<fields>
						<field>
							<name>Value_159</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_160</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x680</addressOffset>
					<fields>
						<field>
							<name>Value_160</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_161</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x684</addressOffset>
					<fields>
						<field>
							<name>Value_161</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_162</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x688</addressOffset>
					<fields>
						<field>
							<name>Value_162</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_163</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x68c</addressOffset>
					<fields>
						<field>
							<name>Value_163</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_164</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x690</addressOffset>
					<fields>
						<field>
							<name>Value_164</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_165</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x694</addressOffset>
					<fields>
						<field>
							<name>Value_165</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_166</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x698</addressOffset>
					<fields>
						<field>
							<name>Value_166</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_167</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x69c</addressOffset>
					<fields>
						<field>
							<name>Value_167</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_168</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6a0</addressOffset>
					<fields>
						<field>
							<name>Value_168</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_169</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6a4</addressOffset>
					<fields>
						<field>
							<name>Value_169</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_170</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6a8</addressOffset>
					<fields>
						<field>
							<name>Value_170</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_171</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6ac</addressOffset>
					<fields>
						<field>
							<name>Value_171</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_172</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6b0</addressOffset>
					<fields>
						<field>
							<name>Value_172</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_173</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6b4</addressOffset>
					<fields>
						<field>
							<name>Value_173</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_174</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6b8</addressOffset>
					<fields>
						<field>
							<name>Value_174</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_175</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6bc</addressOffset>
					<fields>
						<field>
							<name>Value_175</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_176</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6c0</addressOffset>
					<fields>
						<field>
							<name>Value_176</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_177</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6c4</addressOffset>
					<fields>
						<field>
							<name>Value_177</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_178</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6c8</addressOffset>
					<fields>
						<field>
							<name>Value_178</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_179</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6cc</addressOffset>
					<fields>
						<field>
							<name>Value_179</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_180</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6d0</addressOffset>
					<fields>
						<field>
							<name>Value_180</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_181</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6d4</addressOffset>
					<fields>
						<field>
							<name>Value_181</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_182</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6d8</addressOffset>
					<fields>
						<field>
							<name>Value_182</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_183</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6dc</addressOffset>
					<fields>
						<field>
							<name>Value_183</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_184</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6e0</addressOffset>
					<fields>
						<field>
							<name>Value_184</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_185</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6e4</addressOffset>
					<fields>
						<field>
							<name>Value_185</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_186</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6e8</addressOffset>
					<fields>
						<field>
							<name>Value_186</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_187</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6ec</addressOffset>
					<fields>
						<field>
							<name>Value_187</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_188</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6f0</addressOffset>
					<fields>
						<field>
							<name>Value_188</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_189</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6f4</addressOffset>
					<fields>
						<field>
							<name>Value_189</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_190</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6f8</addressOffset>
					<fields>
						<field>
							<name>Value_190</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_191</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x6fc</addressOffset>
					<fields>
						<field>
							<name>Value_191</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_192</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x700</addressOffset>
					<fields>
						<field>
							<name>Value_192</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_193</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x704</addressOffset>
					<fields>
						<field>
							<name>Value_193</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_194</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x708</addressOffset>
					<fields>
						<field>
							<name>Value_194</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_195</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x70c</addressOffset>
					<fields>
						<field>
							<name>Value_195</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_196</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x710</addressOffset>
					<fields>
						<field>
							<name>Value_196</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_197</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x714</addressOffset>
					<fields>
						<field>
							<name>Value_197</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_198</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x718</addressOffset>
					<fields>
						<field>
							<name>Value_198</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_199</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x71c</addressOffset>
					<fields>
						<field>
							<name>Value_199</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_200</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x720</addressOffset>
					<fields>
						<field>
							<name>Value_200</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_201</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x724</addressOffset>
					<fields>
						<field>
							<name>Value_201</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_202</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x728</addressOffset>
					<fields>
						<field>
							<name>Value_202</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_203</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x72c</addressOffset>
					<fields>
						<field>
							<name>Value_203</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_204</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x730</addressOffset>
					<fields>
						<field>
							<name>Value_204</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_205</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x734</addressOffset>
					<fields>
						<field>
							<name>Value_205</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_206</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x738</addressOffset>
					<fields>
						<field>
							<name>Value_206</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_207</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x73c</addressOffset>
					<fields>
						<field>
							<name>Value_207</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_208</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x740</addressOffset>
					<fields>
						<field>
							<name>Value_208</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_209</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x744</addressOffset>
					<fields>
						<field>
							<name>Value_209</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_210</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x748</addressOffset>
					<fields>
						<field>
							<name>Value_210</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_211</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x74c</addressOffset>
					<fields>
						<field>
							<name>Value_211</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_212</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x750</addressOffset>
					<fields>
						<field>
							<name>Value_212</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_213</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x754</addressOffset>
					<fields>
						<field>
							<name>Value_213</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_214</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x758</addressOffset>
					<fields>
						<field>
							<name>Value_214</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_215</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x75c</addressOffset>
					<fields>
						<field>
							<name>Value_215</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_216</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x760</addressOffset>
					<fields>
						<field>
							<name>Value_216</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_217</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x764</addressOffset>
					<fields>
						<field>
							<name>Value_217</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_218</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x768</addressOffset>
					<fields>
						<field>
							<name>Value_218</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_219</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x76c</addressOffset>
					<fields>
						<field>
							<name>Value_219</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_220</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x770</addressOffset>
					<fields>
						<field>
							<name>Value_220</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_221</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x774</addressOffset>
					<fields>
						<field>
							<name>Value_221</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_222</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x778</addressOffset>
					<fields>
						<field>
							<name>Value_222</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_223</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x77c</addressOffset>
					<fields>
						<field>
							<name>Value_223</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_224</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x780</addressOffset>
					<fields>
						<field>
							<name>Value_224</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_225</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x784</addressOffset>
					<fields>
						<field>
							<name>Value_225</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_226</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x788</addressOffset>
					<fields>
						<field>
							<name>Value_226</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_227</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x78c</addressOffset>
					<fields>
						<field>
							<name>Value_227</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_228</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x790</addressOffset>
					<fields>
						<field>
							<name>Value_228</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_229</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x794</addressOffset>
					<fields>
						<field>
							<name>Value_229</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_230</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x798</addressOffset>
					<fields>
						<field>
							<name>Value_230</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_231</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x79c</addressOffset>
					<fields>
						<field>
							<name>Value_231</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_232</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7a0</addressOffset>
					<fields>
						<field>
							<name>Value_232</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_233</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7a4</addressOffset>
					<fields>
						<field>
							<name>Value_233</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_234</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7a8</addressOffset>
					<fields>
						<field>
							<name>Value_234</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_235</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7ac</addressOffset>
					<fields>
						<field>
							<name>Value_235</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_236</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7b0</addressOffset>
					<fields>
						<field>
							<name>Value_236</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_237</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7b4</addressOffset>
					<fields>
						<field>
							<name>Value_237</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_238</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7b8</addressOffset>
					<fields>
						<field>
							<name>Value_238</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_239</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7bc</addressOffset>
					<fields>
						<field>
							<name>Value_239</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_240</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7c0</addressOffset>
					<fields>
						<field>
							<name>Value_240</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_241</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7c4</addressOffset>
					<fields>
						<field>
							<name>Value_241</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_242</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7c8</addressOffset>
					<fields>
						<field>
							<name>Value_242</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_243</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7cc</addressOffset>
					<fields>
						<field>
							<name>Value_243</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_244</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7d0</addressOffset>
					<fields>
						<field>
							<name>Value_244</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_245</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7d4</addressOffset>
					<fields>
						<field>
							<name>Value_245</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_246</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7d8</addressOffset>
					<fields>
						<field>
							<name>Value_246</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_247</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7dc</addressOffset>
					<fields>
						<field>
							<name>Value_247</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_248</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7e0</addressOffset>
					<fields>
						<field>
							<name>Value_248</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_249</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7e4</addressOffset>
					<fields>
						<field>
							<name>Value_249</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_250</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7e8</addressOffset>
					<fields>
						<field>
							<name>Value_250</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_251</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7ec</addressOffset>
					<fields>
						<field>
							<name>Value_251</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_252</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7f0</addressOffset>
					<fields>
						<field>
							<name>Value_252</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_253</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7f4</addressOffset>
					<fields>
						<field>
							<name>Value_253</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_254</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7f8</addressOffset>
					<fields>
						<field>
							<name>Value_254</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FLAGS_255</name>
					<description>TODO: No description provided in the spec.</description>
					<addressOffset>0x7fc</addressOffset>
					<fields>
						<field>
							<name>Value_255</name>
							<description>Value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>RV_PLIC</name>
			<version>1.0.0</version>
			<description>rv_plic</description>
			<baseAddress>0x48000000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>RV_PLIC IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>PRIO0</name>
					<description>Interrupt Source 0 Priority</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO1</name>
					<description>Interrupt Source 1 Priority</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO2</name>
					<description>Interrupt Source 2 Priority</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO3</name>
					<description>Interrupt Source 3 Priority</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO4</name>
					<description>Interrupt Source 4 Priority</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO5</name>
					<description>Interrupt Source 5 Priority</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO6</name>
					<description>Interrupt Source 6 Priority</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO7</name>
					<description>Interrupt Source 7 Priority</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO8</name>
					<description>Interrupt Source 8 Priority</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO9</name>
					<description>Interrupt Source 9 Priority</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO10</name>
					<description>Interrupt Source 10 Priority</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO11</name>
					<description>Interrupt Source 11 Priority</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO12</name>
					<description>Interrupt Source 12 Priority</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO13</name>
					<description>Interrupt Source 13 Priority</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO14</name>
					<description>Interrupt Source 14 Priority</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO15</name>
					<description>Interrupt Source 15 Priority</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO16</name>
					<description>Interrupt Source 16 Priority</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO17</name>
					<description>Interrupt Source 17 Priority</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO18</name>
					<description>Interrupt Source 18 Priority</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO19</name>
					<description>Interrupt Source 19 Priority</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO20</name>
					<description>Interrupt Source 20 Priority</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO21</name>
					<description>Interrupt Source 21 Priority</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO22</name>
					<description>Interrupt Source 22 Priority</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO23</name>
					<description>Interrupt Source 23 Priority</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO24</name>
					<description>Interrupt Source 24 Priority</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO25</name>
					<description>Interrupt Source 25 Priority</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO26</name>
					<description>Interrupt Source 26 Priority</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO27</name>
					<description>Interrupt Source 27 Priority</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO28</name>
					<description>Interrupt Source 28 Priority</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO29</name>
					<description>Interrupt Source 29 Priority</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO30</name>
					<description>Interrupt Source 30 Priority</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO31</name>
					<description>Interrupt Source 31 Priority</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO32</name>
					<description>Interrupt Source 32 Priority</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO33</name>
					<description>Interrupt Source 33 Priority</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO34</name>
					<description>Interrupt Source 34 Priority</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO35</name>
					<description>Interrupt Source 35 Priority</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO36</name>
					<description>Interrupt Source 36 Priority</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO37</name>
					<description>Interrupt Source 37 Priority</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO38</name>
					<description>Interrupt Source 38 Priority</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO39</name>
					<description>Interrupt Source 39 Priority</description>
					<addressOffset>0xdc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO40</name>
					<description>Interrupt Source 40 Priority</description>
					<addressOffset>0xe0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO41</name>
					<description>Interrupt Source 41 Priority</description>
					<addressOffset>0xe4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO42</name>
					<description>Interrupt Source 42 Priority</description>
					<addressOffset>0xe8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO43</name>
					<description>Interrupt Source 43 Priority</description>
					<addressOffset>0xec</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO44</name>
					<description>Interrupt Source 44 Priority</description>
					<addressOffset>0xf0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO45</name>
					<description>Interrupt Source 45 Priority</description>
					<addressOffset>0xf4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO46</name>
					<description>Interrupt Source 46 Priority</description>
					<addressOffset>0xf8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO47</name>
					<description>Interrupt Source 47 Priority</description>
					<addressOffset>0xfc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO48</name>
					<description>Interrupt Source 48 Priority</description>
					<addressOffset>0x100</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO49</name>
					<description>Interrupt Source 49 Priority</description>
					<addressOffset>0x104</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO50</name>
					<description>Interrupt Source 50 Priority</description>
					<addressOffset>0x108</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO51</name>
					<description>Interrupt Source 51 Priority</description>
					<addressOffset>0x10c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO52</name>
					<description>Interrupt Source 52 Priority</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO53</name>
					<description>Interrupt Source 53 Priority</description>
					<addressOffset>0x114</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO54</name>
					<description>Interrupt Source 54 Priority</description>
					<addressOffset>0x118</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO55</name>
					<description>Interrupt Source 55 Priority</description>
					<addressOffset>0x11c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO56</name>
					<description>Interrupt Source 56 Priority</description>
					<addressOffset>0x120</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO57</name>
					<description>Interrupt Source 57 Priority</description>
					<addressOffset>0x124</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO58</name>
					<description>Interrupt Source 58 Priority</description>
					<addressOffset>0x128</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO59</name>
					<description>Interrupt Source 59 Priority</description>
					<addressOffset>0x12c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO60</name>
					<description>Interrupt Source 60 Priority</description>
					<addressOffset>0x130</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO61</name>
					<description>Interrupt Source 61 Priority</description>
					<addressOffset>0x134</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO62</name>
					<description>Interrupt Source 62 Priority</description>
					<addressOffset>0x138</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO63</name>
					<description>Interrupt Source 63 Priority</description>
					<addressOffset>0x13c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO64</name>
					<description>Interrupt Source 64 Priority</description>
					<addressOffset>0x140</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO65</name>
					<description>Interrupt Source 65 Priority</description>
					<addressOffset>0x144</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO66</name>
					<description>Interrupt Source 66 Priority</description>
					<addressOffset>0x148</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO67</name>
					<description>Interrupt Source 67 Priority</description>
					<addressOffset>0x14c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO68</name>
					<description>Interrupt Source 68 Priority</description>
					<addressOffset>0x150</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO69</name>
					<description>Interrupt Source 69 Priority</description>
					<addressOffset>0x154</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO70</name>
					<description>Interrupt Source 70 Priority</description>
					<addressOffset>0x158</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO71</name>
					<description>Interrupt Source 71 Priority</description>
					<addressOffset>0x15c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO72</name>
					<description>Interrupt Source 72 Priority</description>
					<addressOffset>0x160</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO73</name>
					<description>Interrupt Source 73 Priority</description>
					<addressOffset>0x164</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO74</name>
					<description>Interrupt Source 74 Priority</description>
					<addressOffset>0x168</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO75</name>
					<description>Interrupt Source 75 Priority</description>
					<addressOffset>0x16c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO76</name>
					<description>Interrupt Source 76 Priority</description>
					<addressOffset>0x170</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO77</name>
					<description>Interrupt Source 77 Priority</description>
					<addressOffset>0x174</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO78</name>
					<description>Interrupt Source 78 Priority</description>
					<addressOffset>0x178</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO79</name>
					<description>Interrupt Source 79 Priority</description>
					<addressOffset>0x17c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO80</name>
					<description>Interrupt Source 80 Priority</description>
					<addressOffset>0x180</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO81</name>
					<description>Interrupt Source 81 Priority</description>
					<addressOffset>0x184</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO82</name>
					<description>Interrupt Source 82 Priority</description>
					<addressOffset>0x188</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO83</name>
					<description>Interrupt Source 83 Priority</description>
					<addressOffset>0x18c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO84</name>
					<description>Interrupt Source 84 Priority</description>
					<addressOffset>0x190</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO85</name>
					<description>Interrupt Source 85 Priority</description>
					<addressOffset>0x194</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO86</name>
					<description>Interrupt Source 86 Priority</description>
					<addressOffset>0x198</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO87</name>
					<description>Interrupt Source 87 Priority</description>
					<addressOffset>0x19c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO88</name>
					<description>Interrupt Source 88 Priority</description>
					<addressOffset>0x1a0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO89</name>
					<description>Interrupt Source 89 Priority</description>
					<addressOffset>0x1a4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO90</name>
					<description>Interrupt Source 90 Priority</description>
					<addressOffset>0x1a8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO91</name>
					<description>Interrupt Source 91 Priority</description>
					<addressOffset>0x1ac</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO92</name>
					<description>Interrupt Source 92 Priority</description>
					<addressOffset>0x1b0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO93</name>
					<description>Interrupt Source 93 Priority</description>
					<addressOffset>0x1b4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO94</name>
					<description>Interrupt Source 94 Priority</description>
					<addressOffset>0x1b8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO95</name>
					<description>Interrupt Source 95 Priority</description>
					<addressOffset>0x1bc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO96</name>
					<description>Interrupt Source 96 Priority</description>
					<addressOffset>0x1c0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO97</name>
					<description>Interrupt Source 97 Priority</description>
					<addressOffset>0x1c4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO98</name>
					<description>Interrupt Source 98 Priority</description>
					<addressOffset>0x1c8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO99</name>
					<description>Interrupt Source 99 Priority</description>
					<addressOffset>0x1cc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO100</name>
					<description>Interrupt Source 100 Priority</description>
					<addressOffset>0x1d0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO101</name>
					<description>Interrupt Source 101 Priority</description>
					<addressOffset>0x1d4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO102</name>
					<description>Interrupt Source 102 Priority</description>
					<addressOffset>0x1d8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO103</name>
					<description>Interrupt Source 103 Priority</description>
					<addressOffset>0x1dc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO104</name>
					<description>Interrupt Source 104 Priority</description>
					<addressOffset>0x1e0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO105</name>
					<description>Interrupt Source 105 Priority</description>
					<addressOffset>0x1e4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO106</name>
					<description>Interrupt Source 106 Priority</description>
					<addressOffset>0x1e8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO107</name>
					<description>Interrupt Source 107 Priority</description>
					<addressOffset>0x1ec</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO108</name>
					<description>Interrupt Source 108 Priority</description>
					<addressOffset>0x1f0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO109</name>
					<description>Interrupt Source 109 Priority</description>
					<addressOffset>0x1f4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO110</name>
					<description>Interrupt Source 110 Priority</description>
					<addressOffset>0x1f8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO111</name>
					<description>Interrupt Source 111 Priority</description>
					<addressOffset>0x1fc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO112</name>
					<description>Interrupt Source 112 Priority</description>
					<addressOffset>0x200</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO113</name>
					<description>Interrupt Source 113 Priority</description>
					<addressOffset>0x204</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO114</name>
					<description>Interrupt Source 114 Priority</description>
					<addressOffset>0x208</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO115</name>
					<description>Interrupt Source 115 Priority</description>
					<addressOffset>0x20c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO116</name>
					<description>Interrupt Source 116 Priority</description>
					<addressOffset>0x210</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO117</name>
					<description>Interrupt Source 117 Priority</description>
					<addressOffset>0x214</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO118</name>
					<description>Interrupt Source 118 Priority</description>
					<addressOffset>0x218</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO119</name>
					<description>Interrupt Source 119 Priority</description>
					<addressOffset>0x21c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO120</name>
					<description>Interrupt Source 120 Priority</description>
					<addressOffset>0x220</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO121</name>
					<description>Interrupt Source 121 Priority</description>
					<addressOffset>0x224</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO122</name>
					<description>Interrupt Source 122 Priority</description>
					<addressOffset>0x228</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO123</name>
					<description>Interrupt Source 123 Priority</description>
					<addressOffset>0x22c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO124</name>
					<description>Interrupt Source 124 Priority</description>
					<addressOffset>0x230</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO125</name>
					<description>Interrupt Source 125 Priority</description>
					<addressOffset>0x234</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO126</name>
					<description>Interrupt Source 126 Priority</description>
					<addressOffset>0x238</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO127</name>
					<description>Interrupt Source 127 Priority</description>
					<addressOffset>0x23c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO128</name>
					<description>Interrupt Source 128 Priority</description>
					<addressOffset>0x240</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO129</name>
					<description>Interrupt Source 129 Priority</description>
					<addressOffset>0x244</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO130</name>
					<description>Interrupt Source 130 Priority</description>
					<addressOffset>0x248</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO131</name>
					<description>Interrupt Source 131 Priority</description>
					<addressOffset>0x24c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO132</name>
					<description>Interrupt Source 132 Priority</description>
					<addressOffset>0x250</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO133</name>
					<description>Interrupt Source 133 Priority</description>
					<addressOffset>0x254</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO134</name>
					<description>Interrupt Source 134 Priority</description>
					<addressOffset>0x258</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO135</name>
					<description>Interrupt Source 135 Priority</description>
					<addressOffset>0x25c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO136</name>
					<description>Interrupt Source 136 Priority</description>
					<addressOffset>0x260</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO137</name>
					<description>Interrupt Source 137 Priority</description>
					<addressOffset>0x264</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO138</name>
					<description>Interrupt Source 138 Priority</description>
					<addressOffset>0x268</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO139</name>
					<description>Interrupt Source 139 Priority</description>
					<addressOffset>0x26c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO140</name>
					<description>Interrupt Source 140 Priority</description>
					<addressOffset>0x270</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO141</name>
					<description>Interrupt Source 141 Priority</description>
					<addressOffset>0x274</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO142</name>
					<description>Interrupt Source 142 Priority</description>
					<addressOffset>0x278</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO143</name>
					<description>Interrupt Source 143 Priority</description>
					<addressOffset>0x27c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO144</name>
					<description>Interrupt Source 144 Priority</description>
					<addressOffset>0x280</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO145</name>
					<description>Interrupt Source 145 Priority</description>
					<addressOffset>0x284</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO146</name>
					<description>Interrupt Source 146 Priority</description>
					<addressOffset>0x288</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO147</name>
					<description>Interrupt Source 147 Priority</description>
					<addressOffset>0x28c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO148</name>
					<description>Interrupt Source 148 Priority</description>
					<addressOffset>0x290</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO149</name>
					<description>Interrupt Source 149 Priority</description>
					<addressOffset>0x294</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO150</name>
					<description>Interrupt Source 150 Priority</description>
					<addressOffset>0x298</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO151</name>
					<description>Interrupt Source 151 Priority</description>
					<addressOffset>0x29c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO152</name>
					<description>Interrupt Source 152 Priority</description>
					<addressOffset>0x2a0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO153</name>
					<description>Interrupt Source 153 Priority</description>
					<addressOffset>0x2a4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO154</name>
					<description>Interrupt Source 154 Priority</description>
					<addressOffset>0x2a8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO155</name>
					<description>Interrupt Source 155 Priority</description>
					<addressOffset>0x2ac</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO156</name>
					<description>Interrupt Source 156 Priority</description>
					<addressOffset>0x2b0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO157</name>
					<description>Interrupt Source 157 Priority</description>
					<addressOffset>0x2b4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO158</name>
					<description>Interrupt Source 158 Priority</description>
					<addressOffset>0x2b8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO159</name>
					<description>Interrupt Source 159 Priority</description>
					<addressOffset>0x2bc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO160</name>
					<description>Interrupt Source 160 Priority</description>
					<addressOffset>0x2c0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO161</name>
					<description>Interrupt Source 161 Priority</description>
					<addressOffset>0x2c4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO162</name>
					<description>Interrupt Source 162 Priority</description>
					<addressOffset>0x2c8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO163</name>
					<description>Interrupt Source 163 Priority</description>
					<addressOffset>0x2cc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO164</name>
					<description>Interrupt Source 164 Priority</description>
					<addressOffset>0x2d0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO165</name>
					<description>Interrupt Source 165 Priority</description>
					<addressOffset>0x2d4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO166</name>
					<description>Interrupt Source 166 Priority</description>
					<addressOffset>0x2d8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO167</name>
					<description>Interrupt Source 167 Priority</description>
					<addressOffset>0x2dc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO168</name>
					<description>Interrupt Source 168 Priority</description>
					<addressOffset>0x2e0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO169</name>
					<description>Interrupt Source 169 Priority</description>
					<addressOffset>0x2e4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO170</name>
					<description>Interrupt Source 170 Priority</description>
					<addressOffset>0x2e8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO171</name>
					<description>Interrupt Source 171 Priority</description>
					<addressOffset>0x2ec</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO172</name>
					<description>Interrupt Source 172 Priority</description>
					<addressOffset>0x2f0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO173</name>
					<description>Interrupt Source 173 Priority</description>
					<addressOffset>0x2f4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO174</name>
					<description>Interrupt Source 174 Priority</description>
					<addressOffset>0x2f8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO175</name>
					<description>Interrupt Source 175 Priority</description>
					<addressOffset>0x2fc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO176</name>
					<description>Interrupt Source 176 Priority</description>
					<addressOffset>0x300</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO177</name>
					<description>Interrupt Source 177 Priority</description>
					<addressOffset>0x304</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO178</name>
					<description>Interrupt Source 178 Priority</description>
					<addressOffset>0x308</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO179</name>
					<description>Interrupt Source 179 Priority</description>
					<addressOffset>0x30c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO180</name>
					<description>Interrupt Source 180 Priority</description>
					<addressOffset>0x310</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO181</name>
					<description>Interrupt Source 181 Priority</description>
					<addressOffset>0x314</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO182</name>
					<description>Interrupt Source 182 Priority</description>
					<addressOffset>0x318</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO183</name>
					<description>Interrupt Source 183 Priority</description>
					<addressOffset>0x31c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PRIO184</name>
					<description>Interrupt Source 184 Priority</description>
					<addressOffset>0x320</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IP_0</name>
					<description>Interrupt Pending</description>
					<addressOffset>0x1000</addressOffset>
					<fields>
						<field>
							<name>P_0</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_1</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_2</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_3</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_4</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_5</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_6</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_7</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_8</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_9</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_10</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_11</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_12</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_13</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_14</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_15</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_16</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_17</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_18</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_19</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_20</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_21</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_22</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_23</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_24</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_25</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_26</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_27</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_28</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_29</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_30</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_31</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IP_1</name>
					<description>Interrupt Pending</description>
					<addressOffset>0x1080</addressOffset>
					<fields>
						<field>
							<name>P_32</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_33</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_34</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_35</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_36</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_37</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_38</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_39</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_40</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_41</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_42</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_43</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_44</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_45</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_46</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_47</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_48</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_49</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_50</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_51</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_52</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_53</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_54</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_55</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_56</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_57</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_58</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_59</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_60</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_61</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_62</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_63</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IP_2</name>
					<description>Interrupt Pending</description>
					<addressOffset>0x1100</addressOffset>
					<fields>
						<field>
							<name>P_64</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_65</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_66</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_67</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_68</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_69</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_70</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_71</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_72</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_73</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_74</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_75</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_76</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_77</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_78</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_79</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_80</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_81</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_82</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_83</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_84</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_85</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_86</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_87</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_88</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_89</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_90</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_91</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_92</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_93</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_94</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_95</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IP_3</name>
					<description>Interrupt Pending</description>
					<addressOffset>0x1180</addressOffset>
					<fields>
						<field>
							<name>P_96</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_97</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_98</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_99</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_100</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_101</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_102</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_103</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_104</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_105</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_106</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_107</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_108</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_109</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_110</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_111</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_112</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_113</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_114</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_115</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_116</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_117</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_118</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_119</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_120</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_121</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_122</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_123</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_124</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_125</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_126</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_127</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IP_4</name>
					<description>Interrupt Pending</description>
					<addressOffset>0x1200</addressOffset>
					<fields>
						<field>
							<name>P_128</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_129</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_130</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_131</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_132</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_133</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_134</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_135</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_136</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_137</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_138</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_139</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_140</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_141</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_142</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_143</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_144</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_145</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_146</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_147</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_148</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_149</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_150</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_151</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_152</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_153</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_154</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_155</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_156</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_157</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_158</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_159</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IP_5</name>
					<description>Interrupt Pending</description>
					<addressOffset>0x1280</addressOffset>
					<fields>
						<field>
							<name>P_160</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_161</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_162</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_163</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_164</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_165</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_166</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_167</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_168</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_169</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_170</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_171</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_172</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_173</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_174</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_175</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_176</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_177</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_178</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_179</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_180</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_181</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_182</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_183</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>P_184</name>
							<description>Interrupt Pending of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IE0_0</name>
					<description>Interrupt Enable for Target 0</description>
					<addressOffset>0x2000</addressOffset>
					<fields>
						<field>
							<name>E_0</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_1</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_2</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_3</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_4</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_5</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_6</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_7</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_8</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_9</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_10</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_11</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_12</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_13</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_14</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_15</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_16</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_17</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_18</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_19</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_20</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_21</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_22</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_23</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_24</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_25</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_26</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_27</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_28</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_29</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_30</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_31</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IE0_1</name>
					<description>Interrupt Enable for Target 0</description>
					<addressOffset>0x2080</addressOffset>
					<fields>
						<field>
							<name>E_32</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_33</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_34</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_35</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_36</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_37</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_38</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_39</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_40</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_41</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_42</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_43</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_44</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_45</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_46</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_47</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_48</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_49</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_50</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_51</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_52</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_53</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_54</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_55</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_56</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_57</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_58</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_59</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_60</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_61</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_62</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_63</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IE0_2</name>
					<description>Interrupt Enable for Target 0</description>
					<addressOffset>0x2100</addressOffset>
					<fields>
						<field>
							<name>E_64</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_65</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_66</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_67</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_68</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_69</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_70</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_71</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_72</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_73</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_74</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_75</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_76</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_77</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_78</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_79</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_80</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_81</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_82</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_83</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_84</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_85</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_86</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_87</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_88</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_89</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_90</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_91</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_92</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_93</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_94</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_95</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IE0_3</name>
					<description>Interrupt Enable for Target 0</description>
					<addressOffset>0x2180</addressOffset>
					<fields>
						<field>
							<name>E_96</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_97</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_98</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_99</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_100</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_101</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_102</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_103</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_104</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_105</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_106</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_107</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_108</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_109</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_110</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_111</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_112</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_113</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_114</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_115</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_116</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_117</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_118</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_119</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_120</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_121</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_122</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_123</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_124</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_125</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_126</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_127</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IE0_4</name>
					<description>Interrupt Enable for Target 0</description>
					<addressOffset>0x2200</addressOffset>
					<fields>
						<field>
							<name>E_128</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_129</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_130</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_131</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_132</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_133</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_134</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_135</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_136</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_137</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_138</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_139</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_140</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_141</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_142</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_143</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_144</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_145</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_146</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_147</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_148</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_149</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_150</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_151</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_152</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_153</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_154</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_155</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[27:27]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_156</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[28:28]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_157</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[29:29]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_158</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[30:30]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_159</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[31:31]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IE0_5</name>
					<description>Interrupt Enable for Target 0</description>
					<addressOffset>0x2280</addressOffset>
					<fields>
						<field>
							<name>E_160</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_161</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_162</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_163</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_164</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_165</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_166</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_167</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_168</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_169</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_170</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_171</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_172</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_173</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_174</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_175</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_176</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_177</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_178</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_179</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_180</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_181</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_182</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_183</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>E_184</name>
							<description>Interrupt Enable of Source</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>THRESHOLD0</name>
					<description>Threshold of priority for Target 0</description>
					<addressOffset>0x200000</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CC0</name>
					<description>Claim interrupt by read, complete interrupt by write for Target 0.Value read/written is interrupt ID. Reading a value of 0 means no pending interrupts.</description>
					<addressOffset>0x200004</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Value</description>
							<bitRange>[7:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MSIP0</name>
					<description>msip for Hart 0.Write 1 to here asserts software interrupt for Hart msip_o[0], write 0 to clear.</description>
					<addressOffset>0x4000000</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Software Interrupt Pending register</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_TEST</name>
					<description>Alert Test Register.</description>
					<addressOffset>0x4004000</addressOffset>
					<fields>
						<field>
							<name>fatal_fault</name>
							<description>'Write 1 to trigger one alert event of this kind.'</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>AES</name>
			<version>1.0.0</version>
			<description>AES encryption and decryption engine with SCA and FI countermeasures</description>
			<baseAddress>0x41100000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>AES IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>KEY_SHARE0_0</name>
					<description>Initial Key Registers Share 0.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>key_share0_0</name>
							<description>Initial Key Share 0</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_1</name>
					<description>Initial Key Registers Share 0.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>key_share0_1</name>
							<description>Initial Key Share 0</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_2</name>
					<description>Initial Key Registers Share 0.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>key_share0_2</name>
							<description>Initial Key Share 0</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_3</name>
					<description>Initial Key Registers Share 0.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>key_share0_3</name>
							<description>Initial Key Share 0</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_4</name>
					<description>Initial Key Registers Share 0.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>key_share0_4</name>
							<description>Initial Key Share 0</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_5</name>
					<description>Initial Key Registers Share 0.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>key_share0_5</name>
							<description>Initial Key Share 0</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_6</name>
					<description>Initial Key Registers Share 0.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>key_share0_6</name>
							<description>Initial Key Share 0</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_7</name>
					<description>Initial Key Registers Share 0.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>key_share0_7</name>
							<description>Initial Key Share 0</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_0</name>
					<description>Initial Key Registers Share 1.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>key_share1_0</name>
							<description>Initial Key Share 1</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_1</name>
					<description>Initial Key Registers Share 1.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>key_share1_1</name>
							<description>Initial Key Share 1</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_2</name>
					<description>Initial Key Registers Share 1.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>key_share1_2</name>
							<description>Initial Key Share 1</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_3</name>
					<description>Initial Key Registers Share 1.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>key_share1_3</name>
							<description>Initial Key Share 1</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_4</name>
					<description>Initial Key Registers Share 1.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>key_share1_4</name>
							<description>Initial Key Share 1</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_5</name>
					<description>Initial Key Registers Share 1.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>key_share1_5</name>
							<description>Initial Key Share 1</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_6</name>
					<description>Initial Key Registers Share 1.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>key_share1_6</name>
							<description>Initial Key Share 1</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_7</name>
					<description>Initial Key Registers Share 1.The actual initial key corresponds to Initial Key Registers Share 0 XORed with Initial Key Registers Share 1.Loaded into the internal Full Key register upon starting encryption/decryption of the next block.All key registers (Share 0 and Share 1) must be written at least once when the key is changed, regardless of key length (write random data for unused bits).The order in which the registers are updated does not matter.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to these registers are ignored.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>key_share1_7</name>
							<description>Initial Key Share 1</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IV_0</name>
					<description>Initialization Vector Registers.The initialization vector (IV) or initial counter value must be written to these registers when starting a new message in CBC or CTR mode (see Control Register), respectively.In CBC and CTR modes, the AES unit does not start encryption/decryption with a partially updated IV.Each register has to be written at least once.The order in which the registers are written does not matter.If the AES unit is non-idle, writes to these registers are ignored.Whenever starting a new message, the corresponding IV value must be provided by the processor.Once started, the AES unit automatically updates the contents of these registers.In ECB mode, the IV registers are not used and do not need to be configured.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>iv_0</name>
							<description>Initialization Vector</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IV_1</name>
					<description>Initialization Vector Registers.The initialization vector (IV) or initial counter value must be written to these registers when starting a new message in CBC or CTR mode (see Control Register), respectively.In CBC and CTR modes, the AES unit does not start encryption/decryption with a partially updated IV.Each register has to be written at least once.The order in which the registers are written does not matter.If the AES unit is non-idle, writes to these registers are ignored.Whenever starting a new message, the corresponding IV value must be provided by the processor.Once started, the AES unit automatically updates the contents of these registers.In ECB mode, the IV registers are not used and do not need to be configured.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>iv_1</name>
							<description>Initialization Vector</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IV_2</name>
					<description>Initialization Vector Registers.The initialization vector (IV) or initial counter value must be written to these registers when starting a new message in CBC or CTR mode (see Control Register), respectively.In CBC and CTR modes, the AES unit does not start encryption/decryption with a partially updated IV.Each register has to be written at least once.The order in which the registers are written does not matter.If the AES unit is non-idle, writes to these registers are ignored.Whenever starting a new message, the corresponding IV value must be provided by the processor.Once started, the AES unit automatically updates the contents of these registers.In ECB mode, the IV registers are not used and do not need to be configured.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>iv_2</name>
							<description>Initialization Vector</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IV_3</name>
					<description>Initialization Vector Registers.The initialization vector (IV) or initial counter value must be written to these registers when starting a new message in CBC or CTR mode (see Control Register), respectively.In CBC and CTR modes, the AES unit does not start encryption/decryption with a partially updated IV.Each register has to be written at least once.The order in which the registers are written does not matter.If the AES unit is non-idle, writes to these registers are ignored.Whenever starting a new message, the corresponding IV value must be provided by the processor.Once started, the AES unit automatically updates the contents of these registers.In ECB mode, the IV registers are not used and do not need to be configured.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>iv_3</name>
							<description>Initialization Vector</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_IN_0</name>
					<description>Input Data Registers.If MANUAL_OPERATION=0 (see Control Register), the AES unit automatically starts encryption/decryption after all Input Data registers have been written.Each register has to be written at least once.The order in which the registers are written does not matter.Loaded into the internal State register upon starting encryption/decryption of the next block.After that, the processor can update the Input Data registers (See INPUT_READY field of Status Register).Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>data_in_0</name>
							<description>Input Data</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_IN_1</name>
					<description>Input Data Registers.If MANUAL_OPERATION=0 (see Control Register), the AES unit automatically starts encryption/decryption after all Input Data registers have been written.Each register has to be written at least once.The order in which the registers are written does not matter.Loaded into the internal State register upon starting encryption/decryption of the next block.After that, the processor can update the Input Data registers (See INPUT_READY field of Status Register).Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>data_in_1</name>
							<description>Input Data</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_IN_2</name>
					<description>Input Data Registers.If MANUAL_OPERATION=0 (see Control Register), the AES unit automatically starts encryption/decryption after all Input Data registers have been written.Each register has to be written at least once.The order in which the registers are written does not matter.Loaded into the internal State register upon starting encryption/decryption of the next block.After that, the processor can update the Input Data registers (See INPUT_READY field of Status Register).Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>data_in_2</name>
							<description>Input Data</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_IN_3</name>
					<description>Input Data Registers.If MANUAL_OPERATION=0 (see Control Register), the AES unit automatically starts encryption/decryption after all Input Data registers have been written.Each register has to be written at least once.The order in which the registers are written does not matter.Loaded into the internal State register upon starting encryption/decryption of the next block.After that, the processor can update the Input Data registers (See INPUT_READY field of Status Register).Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>data_in_3</name>
							<description>Input Data</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_OUT_0</name>
					<description>Output Data Register.Holds the output data produced by the AES unit during the last encryption/decryption operation.If MANUAL_OPERATION=0 (see Control Register), the AES unit is stalled when the previous output data has not yet been read and is about to be overwritten.Each register has to be read at least once.The order in which the registers are read does not matter.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>data_out_0</name>
							<description>Output Data</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_OUT_1</name>
					<description>Output Data Register.Holds the output data produced by the AES unit during the last encryption/decryption operation.If MANUAL_OPERATION=0 (see Control Register), the AES unit is stalled when the previous output data has not yet been read and is about to be overwritten.Each register has to be read at least once.The order in which the registers are read does not matter.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>data_out_1</name>
							<description>Output Data</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_OUT_2</name>
					<description>Output Data Register.Holds the output data produced by the AES unit during the last encryption/decryption operation.If MANUAL_OPERATION=0 (see Control Register), the AES unit is stalled when the previous output data has not yet been read and is about to be overwritten.Each register has to be read at least once.The order in which the registers are read does not matter.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>data_out_2</name>
							<description>Output Data</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DATA_OUT_3</name>
					<description>Output Data Register.Holds the output data produced by the AES unit during the last encryption/decryption operation.If MANUAL_OPERATION=0 (see Control Register), the AES unit is stalled when the previous output data has not yet been read and is about to be overwritten.Each register has to be read at least once.The order in which the registers are read does not matter.Upon reset, these registers are cleared with pseudo-random data.</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>data_out_3</name>
							<description>Output Data</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL_SHADOWED</name>
					<description>Control Register.Can only be updated when the AES unit is idle.If the AES unit is non-idle, writes to this register are ignored.This register is shadowed, meaning two subsequent write operations are required to change its content.If the two write operations try to set a different value, a recoverable alert is triggered (See Status Register).A read operation clears the internal phase tracking: The next write operation is always considered a first write operation of an update sequence.Any write operation to this register will clear the status tracking required for automatic mode (See MANUAL_OPERATION field).A write to the Control Register is considered the start of a new message.Hence, software needs to provide new key, IV and input data afterwards.</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>OPERATION</name>
							<description>2-bit one-hot field to select the operation of AES unit.Invalid input values, i.e., values with multiple bits set and value 2'b00, are mapped to AES_ENC (2'b01).</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MODE</name>
							<description>6-bit one-hot field to select AES block cipher mode.Invalid input values, i.e., values with multiple bits set and value 6'b00_0000, are mapped to AES_NONE (6'b10_0000).</description>
							<bitRange>[7:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>KEY_LEN</name>
							<description>3-bit one-hot field to select AES key length.Invalid input values, i.e., values with multiple bits set, value 3'b000, and value 3'b010 in case 192-bit keys are not supported (because disabled at compile time) are mapped to AES_256 (3'b100).</description>
							<bitRange>[10:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SIDELOAD</name>
							<description>Controls whether the AES unit uses the key provided by the key manager via key sideload interface (1) or the key provided by software via Initial Key Registers KEY_SHARE1_0 - KEY_SHARE1_7 (0).</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>PRNG_RESEED_RATE</name>
							<description>3-bit one-hot field to control the reseeding rate of the internal pseudo-random number generator (PRNG) used for masking.Invalid input values, i.e., values with multiple bits set and value 3'b000 are mapped to the highest reseeding rate PER_1 (3'b001).</description>
							<bitRange>[14:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MANUAL_OPERATION</name>
							<description>Controls whether the AES unit is operated in normal/automatic mode (0) or fully manual mode (1).In automatic mode (0), the AES unit automatically i) starts to encrypt/decrypt when it receives new input data, and ii) stalls during the last encryption/decryption cycle if the previous output data has not yet been read.This is the most efficient mode to operate in.Note that the corresponding status tracking is automatically cleared upon a write to the Control Register.In manual mode (1), the AES unit i) only starts to encrypt/decrypt after receiving a start trigger (see Trigger Register), and ii) overwrites previous output data irrespective of whether it has been read out or not.This mode is useful if software needs full control over the AES unit.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL_AUX_SHADOWED</name>
					<description>Auxiliary Control Register.This register is shadowed, meaning two subsequent write operations are required to change its content.If the two write operations try to set a different value, a recoverable alert is triggered (See Status Register).A read operation clears the internal phase tracking: The next write operation is always considered a first write operation of an update sequence.</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>KEY_TOUCH_FORCES_RESEED</name>
							<description>Controls whether providing a new key triggers the reseeding of internal pseudo-random number generators used for clearing and masking (1) or not (0).</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FORCE_MASKS</name>
							<description>Allow the internal masking PRNG to advance (0) or force its internal state (1) leading to constant masks.Setting all masks to constant value can be useful when performing SCA.To completely disable the masking, the second key share (KEY_SHARE1_0 - KEY_SHARE1_7) must be zero as well.In addition, a special seed needs to be loaded into the masking PRNG using the EDN interface.Only applicable if both the Masking parameter and the SecAllowForcingMasks parameter are set to one.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL_AUX_REGWEN</name>
					<description>Lock bit for Auxiliary Control Register.</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>Auxiliary Control Register configuration enable bit.If this is cleared to 0, the Auxiliary Control Register cannot be written anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>TRIGGER</name>
					<description>Trigger Register.Each bit is individually cleared to zero when executing the corresponding trigger.While executing any of the triggered operations, the AES unit will set the IDLE bit in the Status Register to zero.The processor must check the Status Register before triggering further actions.For example, writes to Initial Key and IV Registers are ignored while the AES unit is busy.Writes to the Input Data Registers are not ignored but the data will be cleared if a KEY_IV_DATA_IN_CLEAR operation is pending.</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>START</name>
							<description>Keep AES unit paused (0) or trigger the encryption/decryption of one data block (1).This trigger is cleared to `0` if MANUAL_OPERATION=0 or if MODE=AES_NONE (see Control Register).</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>KEY_IV_DATA_IN_CLEAR</name>
							<description>Keep current values in Initial Key, internal Full Key and Decryption Key registers, IV registers and Input Data registers (0) or clear all those registers with pseudo-random data (1).</description>
							<bitRange>[1:1]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>DATA_OUT_CLEAR</name>
							<description>Keep current values in Output Data registers (0) or clear those registers with pseudo-random data (1).</description>
							<bitRange>[2:2]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>PRNG_RESEED</name>
							<description>Keep continuing with the current states of the internal pseudo-random number generators used for register clearing and masking (0) or perform a reseed of the internal states from the connected entropy source (1).If the KEY_TOUCH_FORCES_RESEED bit in the Auxiliary Control Register is set to one, this trigger will automatically get set after providing a new initial key.</description>
							<bitRange>[3:3]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>Status Register</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>IDLE</name>
							<description>The AES unit is idle (1) or busy (0).This flag is `0` if one of the following operations is currently running: i) encryption/decryption, ii) register clearing or iii) PRNG reseeding.This flag is also `0` if an encryption/decryption is running but the AES unit is stalled.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>STALL</name>
							<description>The AES unit is not stalled (0) or stalled (1) because there is previousoutput data that must be read by the processor before the AES unit canoverwrite this data.This flag is not meaningful if MANUAL_OPERATION=1 (see Control Register).</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>OUTPUT_LOST</name>
							<description>All previous output data has been fully read by the processor (0) or at least one previous output data block has been lost (1).It has been overwritten by the AES unit before the processor could fully read it.Once set to `1`, this flag remains set until AES operation is restarted by re-writing the Control Register.The primary use of this flag is for design verification.This flag is not meaningful if MANUAL_OPERATION=0 (see Control Register).</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>OUTPUT_VALID</name>
							<description>The AES unit has no valid output (0) or has valid output data (1).</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>INPUT_READY</name>
							<description>The AES unit is ready (1) or not ready (0) to receive new data input via the DATA_IN registers.If the present values in the DATA_IN registers have not yet been loaded into themodule this flag is `0` (not ready).</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ALERT_RECOV_CTRL_UPDATE_ERR</name>
							<description>An update error has not occurred (0) or has occurred (1) in the shadowed Control Register.AES operation needs to be restarted by re-writing the Control Register.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ALERT_FATAL_FAULT</name>
							<description>No fatal fault has occurred inside the AES unit (0).A fatal fault has occurred and the AES unit needs to be reset (1).Examples for fatal faults includei) storage errors in the Control Register,ii) if any internal FSM enters an invalid state,iii) if any sparsely encoded signal takes on an invalid value,iv) errors in the internal round counter,v) escalations triggered by the life cycle controller, andvi) fatal integrity failures on the TL-UL bus.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>HMAC</name>
			<version>1.0.0</version>
			<description>Accelerator for SHA-256-based keyed hash message authentication code and the SHA-256 hash function</description>
			<baseAddress>0x41110000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>HMAC IRQ</name>
				<value>23</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CFG</name>
					<description>HMAC Configuration register.The register is updated when the engine is in Idle.If the software updates the register while the engine computes the hash,the updated value is discarded.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>hmac_en</name>
							<description>HMAC datapath enable.If this bit is 1, HMAC operates when `hash_start` toggles.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sha_en</name>
							<description>SHA256 enable. If 0, SHA engine won't initiate compression,this is used to stop operation of the SHA engine until configurationhas been done. When the SHA engine is disabled the digest is cleared.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>endian_swap</name>
							<description>Endian swap.If 0, each value will be added to the message in little-endianbyte order. The value is written to MSG_FIFO same to the SW writes.If 1, then each individual multi-byte value, regardless of itsalignment, written to !!MSG_FIFO will be added to the messagein big-endian byte order.A message written to !!MSG_FIFO one byte at a time will not beaffected by this setting.From a hardware perspective byte swaps are performed on a TL-ULword granularity.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>digest_swap</name>
							<description>Digest register byte swap.If 1 the value contained in each digest output register isconverted to big-endian byte order.This setting does not affect the order of the digest outputregisters, !!DIGEST_0 still contains the first 4 bytes ofthe digest.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD</name>
					<description>HMAC command register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>hash_start</name>
							<description>If writes 1 into this field, SHA256 or HMAC begins its operation.CPU should configure relative information first, such as message_length,secret_key.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>hash_process</name>
							<description>If writes 1 into this field, SHA256 or HMAC calculates the digest or signingbased on currently received message.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>HMAC Status register</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>fifo_empty</name>
							<description>FIFO empty</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>fifo_full</name>
							<description>FIFO full. Data written to the FIFO whilst it is full will cause back-pressure on the interconnect</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>fifo_depth</name>
							<description>FIFO entry count.</description>
							<bitRange>[8:4]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE</name>
					<description>HMAC Error Code</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>err_code</name>
							<description>If error interrupt occurs, this register has information of error cause.Please take a look at `hw/ip/hmac/rtl/hmac_pkg.sv:err_code_e enum type.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WIPE_SECRET</name>
					<description>Randomize internal secret registers.If CPU writes value into the register, the value is used to randomize internalvariables such as secret key, internal state machine, or hash value.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>secret</name>
							<description>Secret value</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_0</name>
					<description>HMAC Secret KeySHA256 assumes secret key is hashed 256bit key.Order of the secret key is:key[255:0] = {KEY0, KEY1, KEY2, ... , KEY7};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>key_0</name>
							<description>32-bit chunk of 256-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_1</name>
					<description>HMAC Secret KeySHA256 assumes secret key is hashed 256bit key.Order of the secret key is:key[255:0] = {KEY0, KEY1, KEY2, ... , KEY7};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>key_1</name>
							<description>32-bit chunk of 256-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_2</name>
					<description>HMAC Secret KeySHA256 assumes secret key is hashed 256bit key.Order of the secret key is:key[255:0] = {KEY0, KEY1, KEY2, ... , KEY7};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>key_2</name>
							<description>32-bit chunk of 256-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_3</name>
					<description>HMAC Secret KeySHA256 assumes secret key is hashed 256bit key.Order of the secret key is:key[255:0] = {KEY0, KEY1, KEY2, ... , KEY7};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>key_3</name>
							<description>32-bit chunk of 256-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_4</name>
					<description>HMAC Secret KeySHA256 assumes secret key is hashed 256bit key.Order of the secret key is:key[255:0] = {KEY0, KEY1, KEY2, ... , KEY7};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>key_4</name>
							<description>32-bit chunk of 256-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_5</name>
					<description>HMAC Secret KeySHA256 assumes secret key is hashed 256bit key.Order of the secret key is:key[255:0] = {KEY0, KEY1, KEY2, ... , KEY7};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>key_5</name>
							<description>32-bit chunk of 256-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_6</name>
					<description>HMAC Secret KeySHA256 assumes secret key is hashed 256bit key.Order of the secret key is:key[255:0] = {KEY0, KEY1, KEY2, ... , KEY7};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>key_6</name>
							<description>32-bit chunk of 256-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_7</name>
					<description>HMAC Secret KeySHA256 assumes secret key is hashed 256bit key.Order of the secret key is:key[255:0] = {KEY0, KEY1, KEY2, ... , KEY7};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>key_7</name>
							<description>32-bit chunk of 256-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_0</name>
					<description>Digest output. If HMAC is disabled, the register shows result of SHA256 Order of the digest is: digest[255:0] = {DIGEST0, DIGEST1, DIGEST2, ... , DIGEST7};</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>digest_0</name>
							<description>32-bit chunk of 256-bit Digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_1</name>
					<description>Digest output. If HMAC is disabled, the register shows result of SHA256 Order of the digest is: digest[255:0] = {DIGEST0, DIGEST1, DIGEST2, ... , DIGEST7};</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>digest_1</name>
							<description>32-bit chunk of 256-bit Digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_2</name>
					<description>Digest output. If HMAC is disabled, the register shows result of SHA256 Order of the digest is: digest[255:0] = {DIGEST0, DIGEST1, DIGEST2, ... , DIGEST7};</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>digest_2</name>
							<description>32-bit chunk of 256-bit Digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_3</name>
					<description>Digest output. If HMAC is disabled, the register shows result of SHA256 Order of the digest is: digest[255:0] = {DIGEST0, DIGEST1, DIGEST2, ... , DIGEST7};</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>digest_3</name>
							<description>32-bit chunk of 256-bit Digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_4</name>
					<description>Digest output. If HMAC is disabled, the register shows result of SHA256 Order of the digest is: digest[255:0] = {DIGEST0, DIGEST1, DIGEST2, ... , DIGEST7};</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>digest_4</name>
							<description>32-bit chunk of 256-bit Digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_5</name>
					<description>Digest output. If HMAC is disabled, the register shows result of SHA256 Order of the digest is: digest[255:0] = {DIGEST0, DIGEST1, DIGEST2, ... , DIGEST7};</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>digest_5</name>
							<description>32-bit chunk of 256-bit Digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_6</name>
					<description>Digest output. If HMAC is disabled, the register shows result of SHA256 Order of the digest is: digest[255:0] = {DIGEST0, DIGEST1, DIGEST2, ... , DIGEST7};</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>digest_6</name>
							<description>32-bit chunk of 256-bit Digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_7</name>
					<description>Digest output. If HMAC is disabled, the register shows result of SHA256 Order of the digest is: digest[255:0] = {DIGEST0, DIGEST1, DIGEST2, ... , DIGEST7};</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>digest_7</name>
							<description>32-bit chunk of 256-bit Digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MSG_LENGTH_LOWER</name>
					<description>Received Message Length calculated by the HMAC in bits [31:0]Message is byte granularity.lower 3bits [2:0] are ignored.</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>v</name>
							<description>Message Length [31:0]</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MSG_LENGTH_UPPER</name>
					<description>Received Message Length calculated by the HMAC in bits [63:32]</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>v</name>
							<description>Message Length [63:32]</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>KMAC</name>
			<version>1.0.0</version>
			<description>Accelerator for Keccak-based keyed hash message authentication code and SHA-3 hash functions; with SCA and FI countermeasures</description>
			<baseAddress>0x41120000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>KMAC IRQ</name>
				<value>24</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CFG_REGWEN</name>
					<description>Controls the configurability of !!CFG_SHADOWED register.This register ensures the contents of !!CFG_SHADOWED register cannot bechanged by the software while the KMAC/SHA3 is in operation mode.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>en</name>
							<description>Configuration enable.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CFG_SHADOWED</name>
					<description>KMAC Configuration register.This register is updated when the hashing engine is in Idle.If the software updates the register while the engine computes, theupdated value will be discarded.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>kmac_en</name>
							<description>KMAC datapath enable.If this bit is 1, the incoming message is processed in KMACwith the secret key.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>kstrength</name>
							<description>Hashing Strength3 bit field to select the security strength of SHA3 hashingengine. If mode field is set to SHAKE or cSHAKE, only 128 and256 strength can be selected. Other value will result errorwhen hashing starts.</description>
							<bitRange>[3:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>mode</name>
							<description>Keccak hashing mode.This module supports SHA3 main hashing algorithm and the partof its derived functions, SHAKE and cSHAKE with limitations.This field is to select the mode.</description>
							<bitRange>[5:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>msg_endianness</name>
							<description>Message Endianness.If 1 then each individual multi-byte value, regardless of itsalignment, written to !!MSG_FIFO will be added to the messagein big-endian byte order.If 0, each value will be added to the message in little-endianbyte order.A message written to !!MSG_FIFO one byte at a time will not beaffected by this setting.From a hardware perspective byte swaps are performed on a TL-ULword granularity.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>state_endianness</name>
							<description>State Endianness.If 1 then each individual word in the !!STATE output registeris converted to big-endian byte order.The order of the words in relation to one another is notchanged.This setting does not affect how the state is interpretedduring computation.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>sideload</name>
							<description>Sideloaded Key.If 1, KMAC uses KeyMgr sideloaded key for SW initiated KMACoperation. KMAC uses the sideloaded key regardless of thisconfiguration when KeyMgr initiates the KMAC operation forKey Derivation Function (KDF).</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>entropy_mode</name>
							<description>Entropy ModeUsing this field, software can configure mode of operation of the internal pseudo-random number generator (PRNG).For the hardware to actually switch to an entropy mode other than the default idle_mode, software further needs to set the !!CFG_SHADOWED.entropy_ready bit.After that point, the hardware cannot be made to return to idle_mode unless the module is reset.</description>
							<bitRange>[17:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>entropy_fast_process</name>
							<description>Entropy Fast process mode.If 1, entropy logic uses garbage data while not processing the KMACkey block. It will re-use previous entropy value and will notexpand the entropy when it is consumed. Only it refreshes theentropy while processing the secret key block. This process shouldnot be used if SCA resistance is required because it may cause sidechannel leakage.</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>msg_mask</name>
							<description>Message Masking with PRNG.If 1, KMAC applies PRNG to the input messages to the Keccak modulewhen KMAC mode is on.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>entropy_ready</name>
							<description>Entropy Ready status.Software sets this field to allow the entropy generator in KMAC tofetch the entropy and run.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>err_processed</name>
							<description>When error occurs and one of the state machine stays at Error handling state, SW may process the error based on ERR_CODE, then let FSM back to the reset state</description>
							<bitRange>[25:25]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>en_unsupported_modestrength</name>
							<description>Enable Unsupported Mode and Strength configs.SW may set this field for KMAC to move forward with unsupportedKeccak Mode and Strength configurations, such as cSHAKE512.If not set, KMAC won't propagate the SW command (CmdStart) to therest of the blocks (AppIntf, KMAC Core, SHA3).</description>
							<bitRange>[26:26]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD</name>
					<description>KMAC/ SHA3 command register.This register is to control the KMAC to start accepting message,to process the message, and to manually run additional keccakrounds at the end. Only at certain stage, the CMD affects to thecontrol logic. It follows the sequence of`start` --&gt; `process` --&gt; {`run` if needed --&gt; } `done`</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>cmd</name>
							<description>Issue a command to the KMAC/SHA3 IP. The command is sparseencoded. To prevent sw from writing multiple commands at once,the field is defined as enum.</description>
							<bitRange>[5:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>entropy_req</name>
							<description>SW triggered Entropy RequestIf writes 1 to this field</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>hash_cnt_clr</name>
							<description>If writes 1, it clears the hash (KMAC) counter in the entropy module</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>KMAC/SHA3 Status register.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>sha3_idle</name>
							<description>If 1, SHA3 hashing engine is in idle state.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>sha3_absorb</name>
							<description>If 1, SHA3 is receiving message stream and processing it</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>sha3_squeeze</name>
							<description>If 1, SHA3 completes sponge absorbing stage.In this stage, SW can manually run the hashing engine.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>fifo_depth</name>
							<description>Count of occupied entries in the message FIFO.</description>
							<bitRange>[12:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>fifo_empty</name>
							<description>Message FIFO Empty indicator.The FIFO's `Pass` parameter is set to `1'b 1`. So, by default, ifthe SHA engine is ready, the write data to FIFO just passesthrough.In this case, `fifo_depth` remains **0**. `fifo_empty`, however,lowers the value to **0** for a cycle, then goes back to the emptystate, **1**.See the &quot;Message FIFO&quot; section in the spec for the reason.</description>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>fifo_full</name>
							<description>Message FIFO Full indicator</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ALERT_FATAL_FAULT</name>
							<description>No fatal fault has occurred inside the KMAC unit (0).A fatal fault has occured and the KMAC unit needs to be reset (1),Examples for such faults includei) TL-UL bus integrity faultii) storage errors in the shadow registersiii) errors in the message, round, or key counteriv) any internal FSM entering an invalid statev) an error in the redundant lfsr</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ALERT_RECOV_CTRL_UPDATE_ERR</name>
							<description>An update error has not occurred (0) or has occured (1) in the shadowed Control Register.KMAC operation needs to be restarted by re-writing the Control Register.</description>
							<bitRange>[17:17]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_PERIOD</name>
					<description>Entropy Timer Periods.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>prescaler</name>
							<description>EDN Wait timer prescaler.EDN Wait timer has 16 bit value. The timer value is increased when the timer pulse is generated. Timer pulse is raises when the number of the clock cycles hit this prescaler value.The exact period of the timer pulse is unknown as the KMAC input clock may contain jitters.</description>
							<bitRange>[9:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>wait_timer</name>
							<description>EDN request wait timer.The entropy module in KMAC waits up to this field in the timer pulseafter it sends request to EDN module. If the timer expires, theentropy module moves to an error state and notifies to the system.If there is a pending EDN request during wait timer update, then this update is delayed until the EDN request is complete.If 0, the entropy module waits the EDN response always. If EDN doesnot respond in this configuration, the software shall reset the IP.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_REFRESH_HASH_CNT</name>
					<description>Entropy Refresh CounterKMAC entropy can be refreshed after the given threshold KMAC operationsrun. If the KMAC hash counter !!ENTROPY_REFRESH_HASH_CNT hits (GTE) theconfigured threshold !!ENTROPY_REFRESH_THRESHOLD_SHADOWED, the entropymodule in the KMAC IP requests new seed to EDN and reset the KMAChash counter.If the threshold is 0, the refresh by the counter does not work. And thecounter is only reset by the CMD.hash_cnt_clr CSR bit.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>hash_cnt</name>
							<description>Hash (KMAC) counter</description>
							<bitRange>[9:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_REFRESH_THRESHOLD_SHADOWED</name>
					<description>Entropy Refresh ThresholdKMAC entropy can be refreshed after the given threshold KMAC operationsrun. If the KMAC hash counter !!ENTROPY_REFRESH_HASH_CNT hits (GTE) theconfigured threshold !!ENTROPY_REFRESH_THRESHOLD_SHADOWED, the entropymodule in the KMAC IP requests new seed to EDN and reset the KMAChash counter.If the threshold is 0, the refresh by the counter does not work. And thecounter is only reset by the CMD.hash_cnt_clr CSR bit.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>threshold</name>
							<description>Hash Threshold</description>
							<bitRange>[9:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_SEED_0</name>
					<description>Entropy SeedEntropy seed registers for the integrated entropy generator.If !!CFG_SHADOWED.entropy_mode is set to sw_mode, software first needs to set!!CFG_SHADOWED.entropy_ready and then write the !!ENTROPY_SEED_0 -!!ENTROPY_SEED_4 registers in ascending order. Software writes one 32-bit valueto every register which is subsequently loaded into the corresponding 32-bit LFSRchunk of the entropy generator.After writing all !!ENTROPY_SEED_0 registers, the entropy generator will startits operation. After this point, writing these registers has no longer anyeffect.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>seed_0</name>
							<description>32-bit chunk of the entropy generator seed</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_SEED_1</name>
					<description>Entropy SeedEntropy seed registers for the integrated entropy generator.If !!CFG_SHADOWED.entropy_mode is set to sw_mode, software first needs to set!!CFG_SHADOWED.entropy_ready and then write the !!ENTROPY_SEED_0 -!!ENTROPY_SEED_4 registers in ascending order. Software writes one 32-bit valueto every register which is subsequently loaded into the corresponding 32-bit LFSRchunk of the entropy generator.After writing all !!ENTROPY_SEED_0 registers, the entropy generator will startits operation. After this point, writing these registers has no longer anyeffect.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>seed_1</name>
							<description>32-bit chunk of the entropy generator seed</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_SEED_2</name>
					<description>Entropy SeedEntropy seed registers for the integrated entropy generator.If !!CFG_SHADOWED.entropy_mode is set to sw_mode, software first needs to set!!CFG_SHADOWED.entropy_ready and then write the !!ENTROPY_SEED_0 -!!ENTROPY_SEED_4 registers in ascending order. Software writes one 32-bit valueto every register which is subsequently loaded into the corresponding 32-bit LFSRchunk of the entropy generator.After writing all !!ENTROPY_SEED_0 registers, the entropy generator will startits operation. After this point, writing these registers has no longer anyeffect.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>seed_2</name>
							<description>32-bit chunk of the entropy generator seed</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_SEED_3</name>
					<description>Entropy SeedEntropy seed registers for the integrated entropy generator.If !!CFG_SHADOWED.entropy_mode is set to sw_mode, software first needs to set!!CFG_SHADOWED.entropy_ready and then write the !!ENTROPY_SEED_0 -!!ENTROPY_SEED_4 registers in ascending order. Software writes one 32-bit valueto every register which is subsequently loaded into the corresponding 32-bit LFSRchunk of the entropy generator.After writing all !!ENTROPY_SEED_0 registers, the entropy generator will startits operation. After this point, writing these registers has no longer anyeffect.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>seed_3</name>
							<description>32-bit chunk of the entropy generator seed</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_SEED_4</name>
					<description>Entropy SeedEntropy seed registers for the integrated entropy generator.If !!CFG_SHADOWED.entropy_mode is set to sw_mode, software first needs to set!!CFG_SHADOWED.entropy_ready and then write the !!ENTROPY_SEED_0 -!!ENTROPY_SEED_4 registers in ascending order. Software writes one 32-bit valueto every register which is subsequently loaded into the corresponding 32-bit LFSRchunk of the entropy generator.After writing all !!ENTROPY_SEED_0 registers, the entropy generator will startits operation. After this point, writing these registers has no longer anyeffect.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>seed_4</name>
							<description>32-bit chunk of the entropy generator seed</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_0</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>key_0</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_1</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>key_1</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_2</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>key_2</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_3</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>key_3</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_4</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>key_4</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_5</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>key_5</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_6</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>key_6</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_7</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>key_7</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_8</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>key_8</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_9</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>key_9</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_10</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>key_10</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_11</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>key_11</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_12</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>key_12</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_13</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>key_13</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_14</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>key_14</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE0_15</name>
					<description>KMAC Secret KeyKMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>key_15</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_0</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>key_0</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_1</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>key_1</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_2</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>key_2</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_3</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>key_3</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_4</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>key_4</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_5</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>key_5</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_6</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>key_6</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_7</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>key_7</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_8</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>key_8</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_9</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>key_9</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_10</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>key_10</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_11</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xdc</addressOffset>
					<fields>
						<field>
							<name>key_11</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_12</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xe0</addressOffset>
					<fields>
						<field>
							<name>key_12</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_13</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xe4</addressOffset>
					<fields>
						<field>
							<name>key_13</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_14</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xe8</addressOffset>
					<fields>
						<field>
							<name>key_14</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_SHARE1_15</name>
					<description>KMAC Secret Key, 2nd share.KMAC secret key can be up to 512 bit.Order of the secret key is:key[512:0] = {KEY15, KEY14, ... , KEY0};The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.Current KMAC supports up to 512 bit secret key. It is the swresponsibility to keep upper bits of the secret key to 0.</description>
					<addressOffset>0xec</addressOffset>
					<fields>
						<field>
							<name>key_15</name>
							<description>32-bit chunk of up-to 512-bit Secret Key</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_LEN</name>
					<description>Secret Key length in bit.This value is used to make encoded secret key in KMAC.KMAC supports certain lengths of the secret key. Currently itsupports 128b, 192b, 256b, 384b, and 512b secret keys.</description>
					<addressOffset>0xf0</addressOffset>
					<fields>
						<field>
							<name>len</name>
							<description>Key length choice</description>
							<bitRange>[2:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_0</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0xf4</addressOffset>
					<fields>
						<field>
							<name>prefix_0</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_1</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0xf8</addressOffset>
					<fields>
						<field>
							<name>prefix_1</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_2</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0xfc</addressOffset>
					<fields>
						<field>
							<name>prefix_2</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_3</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x100</addressOffset>
					<fields>
						<field>
							<name>prefix_3</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_4</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x104</addressOffset>
					<fields>
						<field>
							<name>prefix_4</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_5</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x108</addressOffset>
					<fields>
						<field>
							<name>prefix_5</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_6</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x10c</addressOffset>
					<fields>
						<field>
							<name>prefix_6</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_7</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>prefix_7</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_8</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x114</addressOffset>
					<fields>
						<field>
							<name>prefix_8</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_9</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x118</addressOffset>
					<fields>
						<field>
							<name>prefix_9</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>PREFIX_10</name>
					<description>cSHAKE Prefix register.Prefix including Function Name N and Customization String S.The SHA3 assumes this register value is encoded as:`encode_string(N) || encode_string(S) || 0`. It means that thesoftware can freely decide the length of N or S based on thegiven Prefix register size 320bit. 320bit is determined to have32-bit of N and up to 256-bit of S + encode of their length.It is SW responsibility to fill the register with encoded valuethat is described at Section 2.3.2 String Encoding in NIST SP800-185 specification.Order of Prefix is:prefix[end:0] := {PREFIX(N-1), ..., PREFIX(1), PREFIX(0) }The registers are allowed to be updated when the engine is in Idle state.If the engine computes the hash, it discards any attempts to update the secret keysand report an error.</description>
					<addressOffset>0x11c</addressOffset>
					<fields>
						<field>
							<name>prefix_10</name>
							<description>32-bit chunk of Encoded NS Prefix</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE</name>
					<description>KMAC/SHA3 Error Code</description>
					<addressOffset>0x120</addressOffset>
					<fields>
						<field>
							<name>err_code</name>
							<description>If error interrupt occurs, this register has information of error cause.Please take a look at `hw/ip/kmac/rtl/kmac_pkg.sv:err_code_e enum type.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>OTBN</name>
			<version>1.0.0</version>
			<description>Programmable coprocessor for asymmetric cryptography with SCA and FI countermeasures</description>
			<baseAddress>0x41130000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>OTBN IRQ</name>
				<value>25</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CMD</name>
					<description>Command RegisterA command initiates an OTBN operation. While performing the operation,OTBN is busy; the !!STATUS register reflects that.All operations signal their completion by raising the doneinterrupt; alternatively, software may poll the !!STATUS register.Writes are ignored if OTBN is not idle.Unrecognized commands are ignored.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>cmd</name>
							<description>The operation to perform.| Value | Name | Description ||:------|:--------------|:------------|| 0xd8 | EXECUTE | Starts the execution of the program stored in the instruction memory, starting at address zero. || 0xc3 | SEC_WIPE_DMEM | Securely removes all contents from the data memory. || 0x1e | SEC_WIPE_IMEM | Securely removes all contents from the instruction memory. |</description>
							<bitRange>[7:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL</name>
					<description>Control Register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>software_errs_fatal</name>
							<description>Controls the reaction to software errors.When set software errors produce fatal errors, rather thanrecoverable errors.Writes are ignored if OTBN is not idle.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>STATUS</name>
					<description>Status Register</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>status</name>
							<description>Indicates the current operational state OTBN is in.All BUSY values represent an operation started by a write to the!!CMD register.| Value | Name | Description ||:------|:-------------------|:------------------------------------------------------|| 0x00 | IDLE | OTBN is idle: it is not performing any action. || 0x01 | BUSY_EXECUTE | OTBN is busy executing software. || 0x02 | BUSY_SEC_WIPE_DMEM | OTBN is busy securely wiping the data memory. || 0x03 | BUSY_SEC_WIPE_IMEM | OTBN is busy securely wiping the instruction memory. || 0x04 | BUSY_SEC_WIPE_INT | OTBN is busy securely wiping the internal state. || 0xFF | LOCKED | OTBN is locked as reaction to a fatal error, and must be reset to unlock it again. See also the section &quot;Reaction to Fatal Errors&quot;. |</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_BITS</name>
					<description>Operation Result RegisterDescribes the errors detected during an operation.Refer to the &quot;List of Errors&quot; section for a detailed description of theerrors.The host CPU can clear this register when OTBN is not running,by writing any value. Write attempts while OTBN is running are ignored.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>bad_data_addr</name>
							<description>A `BAD_DATA_ADDR` error was observed.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>bad_insn_addr</name>
							<description>A `BAD_INSN_ADDR` error was observed.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>call_stack</name>
							<description>A `CALL_STACK` error was observed.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>illegal_insn</name>
							<description>An `ILLEGAL_INSN` error was observed.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>loop</name>
							<description>A `LOOP` error was observed.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>key_invalid</name>
							<description>A `KEY_INVALID` error was observed.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rnd_rep_chk_fail</name>
							<description>An `RND_REP_CHK_FAIL` error was observed.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>rnd_fips_chk_fail</name>
							<description>An `RND_FIPS_CHK_FAIL` error was observed.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>imem_intg_violation</name>
							<description>A `IMEM_INTG_VIOLATION` error was observed.</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>dmem_intg_violation</name>
							<description>A `DMEM_INTG_VIOLATION` error was observed.</description>
							<bitRange>[17:17]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>reg_intg_violation</name>
							<description>A `REG_INTG_VIOLATION` error was observed.</description>
							<bitRange>[18:18]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>bus_intg_violation</name>
							<description>A `BUS_INTG_VIOLATION` error was observed.</description>
							<bitRange>[19:19]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>bad_internal_state</name>
							<description>A `BAD_INTERNAL_STATE` error was observed.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>illegal_bus_access</name>
							<description>An `ILLEGAL_BUS_ACCESS` error was observed.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>lifecycle_escalation</name>
							<description>A `LIFECYCLE_ESCALATION` error was observed.</description>
							<bitRange>[22:22]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>fatal_software</name>
							<description>A `FATAL_SOFTWARE` error was observed.</description>
							<bitRange>[23:23]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FATAL_ALERT_CAUSE</name>
					<description>Fatal Alert Cause RegisterDescribes any errors that led to a fatal alert.A fatal error puts OTBN in locked state; the value of this registerdoes not change until OTBN is reset.Refer to the &quot;List of Errors&quot; section for a detailed description of theerrors.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>imem_intg_violation</name>
							<description>A `IMEM_INTG_VIOLATION` error was observed.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>dmem_intg_violation</name>
							<description>A `DMEM_INTG_VIOLATION` error was observed.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>reg_intg_violation</name>
							<description>A `REG_INTG_VIOLATION` error was observed.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>bus_intg_violation</name>
							<description>A `BUS_INTG_VIOLATION` error was observed.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>bad_internal_state</name>
							<description>A `BAD_INTERNAL_STATE` error was observed.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>illegal_bus_access</name>
							<description>A `ILLEGAL_BUS_ACCESS` error was observed.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>lifecycle_escalation</name>
							<description>A `LIFECYCLE_ESCALATION` error was observed.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>fatal_software</name>
							<description>A `FATAL_SOFTWARE` error was observed.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INSN_CNT</name>
					<description>Instruction Count RegisterReturns the number of instructions executed in the current or lastoperation. The counter saturates at 2^32-1 and is reset to 0 at thestart of a new operation.Only the EXECUTE operation counts instructions; for all other operationsthis register remains at 0. Instructions triggering an error do notcount towards the total.Always reads as 0 if OTBN is locked.The host CPU can clear this register when OTBN is not running,by writing any value. Write attempts while OTBN is running are ignored.</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>insn_cnt</name>
							<description>The number of executed instructions.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>LOAD_CHECKSUM</name>
					<description>A 32-bit CRC checksum of data written to memorySee the &quot;Memory Load Integrity&quot; section of the manual for full details.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>checksum</name>
							<description>Checksum accumulator</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>KEYMGR</name>
			<version>1.0.0</version>
			<description>Managing identities and root keys; shielding confidential assets from software; providing a key derivation interface for software</description>
			<baseAddress>0x41140000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>KEYMGR IRQ</name>
				<value>26</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>CFG_REGWEN</name>
					<description>Key manager configuration enable</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>key manager configuration enable.When key manager operation is started (see CONTROL), registers protected by this EN are no longermodifiable until the operation completes.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>START</name>
					<description>Key manager operation start</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Start key manager operations</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CONTROL_SHADOWED</name>
					<description>Key manager operation controls</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>OPERATION</name>
							<description>Key manager operation selection. All values not enumerated below behave the same as disable</description>
							<bitRange>[6:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CDI_SEL</name>
							<description>When the OPERATION field is programmed to generate output, this field selectsthe appropriate CDI to use.This field should be programmed for both hw / sw generation.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>DEST_SEL</name>
							<description>When the OPERATION field is programmed to generate output, this field selectsthe appropriate crypto cipher target.This field should be programmed for both hw / sw generation, as this helps diverisifies the output.</description>
							<bitRange>[13:12]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SIDELOAD_CLEAR</name>
					<description>sideload key slots clear</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Depending on the value programmed, a different sideload key slot is cleared.If the value programmed is not one of the enumerated values below, ALL sideloadkey slots are continuously cleared. In order to stop continuous clearing, SW shouldtoggle the clear bit again (i.e. disable continuous clearing).</description>
							<bitRange>[2:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RESEED_INTERVAL_REGWEN</name>
					<description>regwen for reseed interval</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Configuration enable for reseed interval</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RESEED_INTERVAL_SHADOWED</name>
					<description>Reseed interval for key manager entropy reseed</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Number of key manager cycles before the entropy is reseeded</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_BINDING_REGWEN</name>
					<description>Register write enable for SOFTWARE_BINDING</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Software binding register write enable.This is locked by software and unlocked by hardware upon a successful advance call.Software binding resets to 1, and its value cannot be altered by software until advancement to Init state.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SEALING_SW_BINDING_0</name>
					<description>Software binding input to sealing portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SEALING_SW_BINDING_1</name>
					<description>Software binding input to sealing portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>VAL_1</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SEALING_SW_BINDING_2</name>
					<description>Software binding input to sealing portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>VAL_2</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SEALING_SW_BINDING_3</name>
					<description>Software binding input to sealing portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>VAL_3</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SEALING_SW_BINDING_4</name>
					<description>Software binding input to sealing portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>VAL_4</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SEALING_SW_BINDING_5</name>
					<description>Software binding input to sealing portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>VAL_5</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SEALING_SW_BINDING_6</name>
					<description>Software binding input to sealing portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>VAL_6</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SEALING_SW_BINDING_7</name>
					<description>Software binding input to sealing portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>VAL_7</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ATTEST_SW_BINDING_0</name>
					<description>Software binding input to the attestation portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ATTEST_SW_BINDING_1</name>
					<description>Software binding input to the attestation portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>VAL_1</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ATTEST_SW_BINDING_2</name>
					<description>Software binding input to the attestation portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>VAL_2</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ATTEST_SW_BINDING_3</name>
					<description>Software binding input to the attestation portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>VAL_3</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ATTEST_SW_BINDING_4</name>
					<description>Software binding input to the attestation portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>VAL_4</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ATTEST_SW_BINDING_5</name>
					<description>Software binding input to the attestation portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>VAL_5</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ATTEST_SW_BINDING_6</name>
					<description>Software binding input to the attestation portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>VAL_6</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ATTEST_SW_BINDING_7</name>
					<description>Software binding input to the attestation portion of the key manager.This register is lockable and shared between key manager stages.This binding value is not considered secret, however its integrity is very important.The software binding is locked by software and unlocked by hardware upon a successful advance operation.</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>VAL_7</name>
							<description>Software binding value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>Salt_0</name>
					<description>Salt value used as part of output generation</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Salt value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>Salt_1</name>
					<description>Salt value used as part of output generation</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>VAL_1</name>
							<description>Salt value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>Salt_2</name>
					<description>Salt value used as part of output generation</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>VAL_2</name>
							<description>Salt value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>Salt_3</name>
					<description>Salt value used as part of output generation</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>VAL_3</name>
							<description>Salt value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>Salt_4</name>
					<description>Salt value used as part of output generation</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>VAL_4</name>
							<description>Salt value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>Salt_5</name>
					<description>Salt value used as part of output generation</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>VAL_5</name>
							<description>Salt value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>Salt_6</name>
					<description>Salt value used as part of output generation</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>VAL_6</name>
							<description>Salt value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>Salt_7</name>
					<description>Salt value used as part of output generation</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>VAL_7</name>
							<description>Salt value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>KEY_VERSION</name>
					<description>Version used as part of output generation</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Key version</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAX_CREATOR_KEY_VER_REGWEN</name>
					<description>Register write enable for MAX_CREATOR_KEY_VERSION</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>MAX_CREATOR_KEY_VERSION configure enable.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAX_CREATOR_KEY_VER_SHADOWED</name>
					<description>Max creator key version</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Max key version.Any key version up to the value specificed in this register is valid.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAX_OWNER_INT_KEY_VER_REGWEN</name>
					<description>Register write enable for MAX_OWNER_INT_KEY_VERSION</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>MAX_OWNER_INTERMEDIATE_KEY configure enable.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAX_OWNER_INT_KEY_VER_SHADOWED</name>
					<description>Max owner intermediate key version</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Max key version.Any key version up to the value specificed in this register is valid.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAX_OWNER_KEY_VER_REGWEN</name>
					<description>Register write enable for MAX_OWNER_KEY_VERSION</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>MAX_OWNER_KEY configure enable.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAX_OWNER_KEY_VER_SHADOWED</name>
					<description>Max owner key version</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Max key version.Any key version up to the value specificed in this register is valid.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE0_OUTPUT_0</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE0_OUTPUT_1</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xdc</addressOffset>
					<fields>
						<field>
							<name>VAL_1</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE0_OUTPUT_2</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xe0</addressOffset>
					<fields>
						<field>
							<name>VAL_2</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE0_OUTPUT_3</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xe4</addressOffset>
					<fields>
						<field>
							<name>VAL_3</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE0_OUTPUT_4</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xe8</addressOffset>
					<fields>
						<field>
							<name>VAL_4</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE0_OUTPUT_5</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xec</addressOffset>
					<fields>
						<field>
							<name>VAL_5</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE0_OUTPUT_6</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xf0</addressOffset>
					<fields>
						<field>
							<name>VAL_6</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE0_OUTPUT_7</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xf4</addressOffset>
					<fields>
						<field>
							<name>VAL_7</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE1_OUTPUT_0</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xf8</addressOffset>
					<fields>
						<field>
							<name>VAL_0</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE1_OUTPUT_1</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0xfc</addressOffset>
					<fields>
						<field>
							<name>VAL_1</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE1_OUTPUT_2</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0x100</addressOffset>
					<fields>
						<field>
							<name>VAL_2</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE1_OUTPUT_3</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0x104</addressOffset>
					<fields>
						<field>
							<name>VAL_3</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE1_OUTPUT_4</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0x108</addressOffset>
					<fields>
						<field>
							<name>VAL_4</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE1_OUTPUT_5</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0x10c</addressOffset>
					<fields>
						<field>
							<name>VAL_5</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE1_OUTPUT_6</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>VAL_6</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_SHARE1_OUTPUT_7</name>
					<description>Key manager software output.When a software output operation is selected, the results of the operation are placedhere.</description>
					<addressOffset>0x114</addressOffset>
					<fields>
						<field>
							<name>VAL_7</name>
							<description>Software output value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>WORKING_STATE</name>
					<description>Key manager working state.This is a readout of the current key manager working state</description>
					<addressOffset>0x118</addressOffset>
					<fields>
						<field>
							<name>STATE</name>
							<description>Key manager control state</description>
							<bitRange>[2:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OP_STATUS</name>
					<description>Key manager status.Hardware sets the status based on software initiated operations.This register must be explicitly cleared by software.Software clears by writing back whatever it reads.</description>
					<addressOffset>0x11c</addressOffset>
					<fields>
						<field>
							<name>STATUS</name>
							<description>Operation status.</description>
							<bitRange>[1:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE</name>
					<description>Key manager error code.This register must be explicitly cleared by software.This register represents both synchronous and asynchronous recoverableerrors.Synchronous errors refer to those that only happen when a keymgr operation isinvoked, while asynchronous refers to errors that can happen at any time.</description>
					<addressOffset>0x120</addressOffset>
					<fields>
						<field>
							<name>INVALID_OP</name>
							<description>Invalid operation issued to key manager, synchronous error</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVALID_KMAC_INPUT</name>
							<description>Invalid data issued to kmac interface, synchronous error</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVALID_SHADOW_UPDATE</name>
							<description>An error observed during shadow register updates, asynchronous error</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FAULT_STATUS</name>
					<description>This register represents both synchronous and asynchronous fatal faults.Synchronous faults refer to those that only happen when a keymgr operation isinvoked, while asynchronous refers to faults that can happen at any time.</description>
					<addressOffset>0x124</addressOffset>
					<fields>
						<field>
							<name>CMD</name>
							<description>A non-onehot command was seen in kmac, asynchronous fault.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>KMAC_FSM</name>
							<description>The kmac transfer interface FSM is in an invalid state, asynchronous fault.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>KMAC_DONE</name>
							<description>The kmac transfer interface encountered an unexpected done, asynchronous fault.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>KMAC_OP</name>
							<description>KMAC reported an error during keymgr usage, this should never happen - synchronous fault.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>KMAC_OUT</name>
							<description>KMAC data returned as all 0's or all 1's - synchronous fault</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>REGFILE_INTG</name>
							<description>Register file integrity error, asynchronous fault</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SHADOW</name>
							<description>Shadow copy storage error, asynchronous fault</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CTRL_FSM_INTG</name>
							<description>Control FSM integrity error, asynchronous fault</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CTRL_FSM_CHK</name>
							<description>Control FSM cross check error, asynchronous fault</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CTRL_FSM_CNT</name>
							<description>Control FSM counter integrity error, asynchronous fault</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RESEED_CNT</name>
							<description>Reseed counter integrity error, asynchronous fault</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SIDE_CTRL_FSM</name>
							<description>Sideload control FSM integrity error, asynchronous fault</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SIDE_CTRL_SEL</name>
							<description>Sideload control key select error, synchronous fault</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>KEY_ECC</name>
							<description>Secret key ecc error, asynchronous fault</description>
							<bitRange>[13:13]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEBUG</name>
					<description>The register holds some debug information that may be convenient if keymgrmisbehaves.</description>
					<addressOffset>0x128</addressOffset>
					<fields>
						<field>
							<name>INVALID_CREATOR_SEED</name>
							<description>Creator seed failed input checks during operation</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVALID_OWNER_SEED</name>
							<description>Owner seed failed input checks during operation</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVALID_DEV_ID</name>
							<description>Device ID failed input checks during operation</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVALID_HEALTH_STATE</name>
							<description>Health state failed input checks during operation</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVALID_KEY_VERSION</name>
							<description>Key version failed input checks during operation</description>
							<bitRange>[4:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVALID_KEY</name>
							<description>Key fed to kmac failed input checks during operation</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>INVALID_DIGEST</name>
							<description>ROM digest failed input checks during operation</description>
							<bitRange>[6:6]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>CSRNG</name>
			<version>1.0.0</version>
			<description>Takes entropy bits to produce cryptographically secure random numbers for consumption by hardware blocks and by software</description>
			<baseAddress>0x41150000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>CSRNG IRQ</name>
				<value>27</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>REGWEN</name>
					<description>Register write enable for all control registers</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When true, all writeable registers can be modified.When false, they become read-only.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL</name>
					<description>Control register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>ENABLE</name>
							<description>Setting this field to kMultiBitBool4True will enable the CSRNG module. The modulesof the entropy complex may only be enabled and disabled in a specific order, seeProgrammers Guide for details.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SW_APP_ENABLE</name>
							<description>Setting this field to kMultiBitBool4True will enable reading from the !!GENBITS register.This application interface for software (register based) will be enabledonly if the otp_en_csrng_sw_app_read input vector is set to the enable encoding.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>READ_INT_STATE</name>
							<description>Setting this field to kMultiBitBool4True will enable reading from the !!INT_STATE_VAL register.Reading the internal state of the enable instances will be enabledonly if the otp_en_csrng_sw_app_read input vector is set to the enable encoding.</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CMD_REQ</name>
					<description>Command request register</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>CMD_REQ</name>
							<description>Writing this request with defined CSRNG commands will initiate allpossible CSRNG actions. The application interface must wait for the&quot;ack&quot; to return before issuing new commands.</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_CMD_STS</name>
					<description>Application interface command status register</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>CMD_RDY</name>
							<description>This bit indicates when the command interface is ready to accept commands.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CMD_STS</name>
							<description>This one bit field is the status code returned with the application command ack.It is updated each time a command ack is asserted on the internal applicationinterface for software use.0b0: Request completed successfully0b1: Request completed with an error</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>GENBITS_VLD</name>
					<description>Generate bits returned valid register</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>GENBITS_VLD</name>
							<description>This bit is set when genbits are available on this application interface.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>GENBITS_FIPS</name>
							<description>This bit is set when genbits are FIPS/CC compliant.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>GENBITS</name>
					<description>Generate bits returned register</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>GENBITS</name>
							<description>Reading this register will get the generated bits that were requested withthe generate request. This register must be four times for each requestnumber made. For example, a application command generate request witha `creq` value of 4 requires this register to be read 16 times to get allof the data out of the FIFO path.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INT_STATE_NUM</name>
					<description>Internal state number register</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>INT_STATE_NUM</name>
							<description>Setting this field will set the number for which internal state can beselected for a read access. Up to 16 internal state values can be chosenfrom this register. The actual number of valid internal state fieldsis set by parameter NHwApps plus 1 software app. For those selections that pointto reserved locations (greater than NHwApps plus 1), the returned valuewill be zero. Writing this register will also reset the internal readpointer for the !!INT_STATE_VAL register.Note: This register should be read back after being written to ensurethat the !!INT_STATE_VAL read back is accurate.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>INT_STATE_VAL</name>
					<description>Internal state read access register</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>INT_STATE_VAL</name>
							<description>Reading this register will dump out the contents of the selected internal state field.Since the internal state field is 448 bits wide, it will require 14 reads from thisregister to gather the entire field. Once 14 reads have been done, the internal readpointer (selects 32 bits of the 448 bit field) will reset to zero. The !!INT_STATE_NUMcan be re-written at this time (internal read pointer is also reset), and thenanother internal state field can be read.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>HW_EXC_STS</name>
					<description>Hardware instance exception status register</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>HW_EXC_STS</name>
							<description>Reading this register indicates whether one of the CSRNG HW instances hasencountered an exception. Each bit corresponds to a particular hardwareinstance, with bit 0 corresponding to instance HW0, bit 1 correspondingto instance HW1, and so forth. (To monitor the status of requests madeto the SW instance, check the !!SW_CMD_STS register). Writing a zero to this registerresets the status bits.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RECOV_ALERT_STS</name>
					<description>Recoverable alert status register</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>ENABLE_FIELD_ALERT</name>
							<description>This bit is set when the ENABLE field in the !!CTRL register is set toa value other than kMultiBitBool4True or kMultiBitBool4False.Writing a zero resets this status bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>SW_APP_ENABLE_FIELD_ALERT</name>
							<description>This bit is set when the SW_APP_ENABLE field in the !!CTRL register is set toa value other than kMultiBitBool4True or kMultiBitBool4False.Writing a zero resets this status bit.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>READ_INT_STATE_FIELD_ALERT</name>
							<description>This bit is set when the READ_INT_STATE field in the !!CTRL register is set toa value other than kMultiBitBool4True or kMultiBitBool4False.Writing a zero resets this status bit.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ACMD_FLAG0_FIELD_ALERT</name>
							<description>This bit is set when the FLAG0 field in the Application Command is set toa value other than kMultiBitBool4True or kMultiBitBool4False.Writing a zero resets this status bit.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CS_BUS_CMP_ALERT</name>
							<description>This bit is set when the software application port genbits bus value is equalto the prior valid value on the bus, indicating a possible attack.Writing a zero resets this status bit.</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CS_MAIN_SM_ALERT</name>
							<description>This bit is set when an unsupported/illegal CSRNG command is being processed.The main FSM will hang unless the module enable field is set to the disabled state.</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE</name>
					<description>Hardware detection of error conditions status register</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>SFIFO_CMD_ERR</name>
							<description>This bit will be set to one when an error has been detected for thecommand stage command FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_GENBITS_ERR</name>
							<description>This bit will be set to one when an error has been detected for thecommand stage genbits FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_CMDREQ_ERR</name>
							<description>This bit will be set to one when an error has been detected for thecmdreq FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_RCSTAGE_ERR</name>
							<description>This bit will be set to one when an error has been detected for thercstage FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_KEYVRC_ERR</name>
							<description>This bit will be set to one when an error has been detected for thekeyvrc FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_UPDREQ_ERR</name>
							<description>This bit will be set to one when an error has been detected for theupdreq FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_BENCREQ_ERR</name>
							<description>This bit will be set to one when an error has been detected for thebencreq FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_BENCACK_ERR</name>
							<description>This bit will be set to one when an error has been detected for thebencack FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_PDATA_ERR</name>
							<description>This bit will be set to one when an error has been detected for thepdata FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_FINAL_ERR</name>
							<description>This bit will be set to one when an error has been detected for thefinal FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_GBENCACK_ERR</name>
							<description>This bit will be set to one when an error has been detected for thegbencack FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_GRCSTAGE_ERR</name>
							<description>This bit will be set to one when an error has been detected for thegrcstage FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_GGENREQ_ERR</name>
							<description>This bit will be set to one when an error has been detected for theggenreq FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[12:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_GADSTAGE_ERR</name>
							<description>This bit will be set to one when an error has been detected for thegadstage FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[13:13]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_GGENBITS_ERR</name>
							<description>This bit will be set to one when an error has been detected for theggenbits FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[14:14]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_BLKENC_ERR</name>
							<description>This bit will be set to one when an error has been detected for theblkenc FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CMD_STAGE_SM_ERR</name>
							<description>This bit will be set to one when an illegal state has been detected for thecommand stage state machine. This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>MAIN_SM_ERR</name>
							<description>This bit will be set to one when an illegal state has been detected for themain state machine. This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>DRBG_GEN_SM_ERR</name>
							<description>This bit will be set to one when an illegal state has been detected for thectr_drbg gen state machine. This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>DRBG_UPDBE_SM_ERR</name>
							<description>This bit will be set to one when an illegal state has been detected for thectr_drbg update block encode state machine. This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>DRBG_UPDOB_SM_ERR</name>
							<description>This bit will be set to one when an illegal state has been detected for thectr_drbg update out block state machine. This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>AES_CIPHER_SM_ERR</name>
							<description>This bit will be set to one when an AES fatal error has been detected.This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[25:25]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CMD_GEN_CNT_ERR</name>
							<description>This bit will be set to one when a mismatch in any of the hardened countershas been detected.This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[26:26]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FIFO_WRITE_ERR</name>
							<description>This bit will be set to one when any of the source bits (bits 0 through 15 of thisthis register) are asserted as a result of an error pulse generated fromany full FIFO that has been recieved a write pulse.This bit will stay set until the next reset.</description>
							<bitRange>[28:28]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FIFO_READ_ERR</name>
							<description>This bit will be set to one when any of the source bits (bits 0 through 15 of thisthis register) are asserted as a result of an error pulse generated fromany empty FIFO that has recieved a read pulse.This bit will stay set until the next reset.</description>
							<bitRange>[29:29]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FIFO_STATE_ERR</name>
							<description>This bit will be set to one when any of the source bits (bits 0 through 15 of thisthis register) are asserted as a result of an error pulse generated fromany FIFO where both the empty and full status bits are set.This bit will stay set until the next reset.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE_TEST</name>
					<description>Test error conditions register</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>ERR_CODE_TEST</name>
							<description>Setting this field will set the bit number for which an errorwill be forced in the hardware. This bit number is that same onefound in the !!ERR_CODE register. The action of writing thisregister will force an error pulse. The sole purpose of thisregister is to test that any error properly propagates to eitheran interrupt or an alert.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAIN_SM_STATE</name>
					<description>Main state machine state debug register</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>MAIN_SM_STATE</name>
							<description>This is the state of the CSRNG main state machine.See the RTL file `csrng_main_sm` for the meaning of the values.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>ENTROPY_SRC</name>
			<version>1.0.0</version>
			<description>Filters and checks raw entropy bits from a random noise source and forwards them to CSRNG</description>
			<baseAddress>0x41160000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>ENTROPY_SRC IRQ</name>
				<value>28</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>ME_REGWEN</name>
					<description>Register write enable for module enable register</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When true, the !!MODULE_ENABLE register can be modified.When false, it becomes read-only.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_REGUPD</name>
					<description>Register write enable for control and threshold registers</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When this bit true and the MODULE_ENABLE field is false,the REGWEN write enable bit read as true, and is distributed toall associated control and threshold registers.When false, these registers become read-only.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REGWEN</name>
					<description>Register write enable for all control registers</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>This read-only write enable bit will allow write access to control and threshold registers that are associated with this bit, but only when the !!MODULE_ENABLE register is set to `kMultiBitBool4False` and the !!SW_REGUPD write enable bit is set to true.When read as false, these registers become read-only.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REV</name>
					<description>Revision register</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>CHIP_TYPE</name>
							<description>Read of this register shows the type of chip using this block.</description>
							<bitRange>[23:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>HW_REVISION</name>
							<description>Read of this register shows the revision of this block.</description>
							<bitRange>[15:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ABI_REVISION</name>
							<description>Read of this register shows the ABI of this block.</description>
							<bitRange>[7:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MODULE_ENABLE</name>
					<description>Module enable register</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>MODULE_ENABLE</name>
							<description>Setting this field to `kMultiBitBool4True` will enable the ENTROPY_SRC module. Setting this field to `kMultiBitBool4False` will effectively reset the module.The modules of the entropy complex may only be enabled and disabled in a specific order, see Programmers Guide for details.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CONF</name>
					<description>Configuration register</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>FIPS_ENABLE</name>
							<description>Setting this field to `kMultiBitBool4True` selects the FIPS/CC compliant mode (or short FIPS mode).In this mode, the ENTROPY_SRC block can generate FIPS qualified entropy.Additional requirements to generate FIPS qualified entropy are i) that at most one of the !!ENTROPY_CONTROL.ES_ROUTE and !!ENTROPY_CONTROL.ES_TYPE fields are set to `kMultiBitBool4True` but not both, and ii) that !!CONF.RNG_BIT_ENABLE is set to `kMultiBitBool4False`.Setting this field to `kMultiBitBool4False` selects the boot-time / bypass mode in which the hardware conditioning is bypassed.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ENTROPY_DATA_REG_ENABLE</name>
							<description>Setting this field to `kMultiBitBool4True` will enable reading entropy values from the !!ENTROPY_DATA register.This function also requires that the otp_en_entropy_src_fw_read input is set to `kMultiBitBool8True`.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>THRESHOLD_SCOPE</name>
							<description>This field controls the scope (either by-line or by-sum) of the health checks.If set to `kMultiBitBool4True`, the Adaptive Proportion and Markov Tests will accumulate all RNG input lines into a single score, and thresholds will be applied to the sum all the entropy input lines.If set to `kMultiBitBool4False`, the RNG input lines are all scored individually.A statistical deviation in any one input line, be it due to coincidence or failure, will force rejection of the sample, and count toward the total alert count.</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RNG_BIT_ENABLE</name>
							<description>Setting this field to `kMultiBitBool4True` enables the single RNG bit mode, where only one bit is sampled.Note that the ENTROPY_SRC block can only generate FIPS qualified entropy if this field is set to `kMultiBitBool4False`.Additional requirements to generate FIPS qualified entropy are i) that !!CONF.FIPS_ENABLE is set to `kMultiBitBool4True`, and ii) that at most one of the !!ENTROPY_CONTROL.ES_ROUTE and !!ENTROPY_CONTROL.ES_TYPE fields but not both are set to `kMultiBitBool4True`.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RNG_BIT_SEL</name>
							<description>When the above bit iset, this field selects which bit from the RNG bus willbe processed when in single RNG bit mode.This two bit field selects the RNG bit stream:0b00: RNG bit 00b01: RNG bit 10b10: RNG bit 20b11: RNG bit 3</description>
							<bitRange>[25:24]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_CONTROL</name>
					<description>Entropy control register</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>ES_ROUTE</name>
							<description>When this field is `kMultiBitBool4False`, the generated entropy will be forwarded out of this module to the hardware interface.Setting this field to `kMultiBitBool4True` routes the generated entropy to the !!ENTROPY_DATA register to be read by firmware.Note that for !!ENTROPY_DATA to become readable, also !!CONF.ENTROPY_DATA_REG_ENABLE needs to be set to `kMultiBitBool4True`.In addition, the otp_en_entropy_src_fw_read input needs to be set to `kMultiBitBool8True`.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ES_TYPE</name>
							<description>When this field is `kMultiBitBool4False`, the hardware conditioning inside the ENTROPY_SRC block is enabled.Setting this field to `kMultiBitBool4True` will bypass the hardware conditioning.For this to work, also !!ENTROPY_CONTROL.ES_ROUTE needs to be set to `kMultiBitBool4True` to route the unconditioned, raw entropy to the !!ENTROPY_DATA register.Alternatively, the hardware conditioning can be bypassed by setting !!CONF.FIPS_ENABLE to `kMultiBitBool4False` to disable FIPS mode and enable bypass / boot-time mode.In both cases, the ENTROPY_SRC block will not generate FIPS qualified entropy.To generate FIPS qualified entropy, i) !!CONF.FIPS_ENABLE needs to be set to `kMultiBitBool4True`, ii) !!CONF.RNG_BIT_ENABLE needs to be set to `kMultiBitBool4False`, and iii) at most one of the !!ENTROPY_CONTROL.ES_ROUTE and !!ENTROPY_CONTROL.ES_TYPE fields needs to be set to `kMultiBitBool4True` but not both.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ENTROPY_DATA</name>
					<description>Entropy data bits</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>A read of this register provides generated entropy bits to firmware.For this to work also !!CONF.ENTROPY_DATA_REG_ENABLE needs to be set to `kMultiBitBool4True`.In addition, the otp_en_entropy_src_fw_read input needs to be set to `kMultiBitBool8True`.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>HEALTH_TEST_WINDOWS</name>
					<description>Health test windows register</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>FIPS_WINDOW</name>
							<description>This is the window size for all health tests.This value is used when entropy is being tested in FIPS/CC compliance mode (for simplicity referred to as FIPS mode).The default value is (2048 bits * 1 clock/4 bits);</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_WINDOW</name>
							<description>This is the window size for all health tests when running in bypass mode.This mode is active after reset for the first and only test run, or when this mode is programmed by firmware by setting !!CONF.FIPS_ENABLE to `kMultiBitBool4False`.The default value is (384 bits * 1 clock/4 bits);Note that currently only a window size of 384 is supported and tested (this corresponds to the register default value 0x60).Do not use any other values, unless you know what you are doing.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REPCNT_THRESHOLDS</name>
					<description>Repetition count test thresholds register</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>FIPS_THRESH</name>
							<description>This is the threshold size for the repetition count health test. This value is used in FIPS mode. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_THRESH</name>
							<description>This is the threshold size for the repetition count health test running in bypass mode. This mode is active after reset for the first and only test run, or when this mode is programmed by firmware. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REPCNTS_THRESHOLDS</name>
					<description>Repetition count symbol test thresholds register</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>FIPS_THRESH</name>
							<description>This is the threshold size for the repetition count symbol health test. This value is used in FIPS mode. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_THRESH</name>
							<description>This is the threshold size for the repetition count symbol health test running in bypass mode. This mode is active after reset for the first and only test run, or when this mode is programmed by firmware. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ADAPTP_HI_THRESHOLDS</name>
					<description>Adaptive proportion test high thresholds register</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>FIPS_THRESH</name>
							<description>This is the threshold size for the adaptive proportion health test. This value is used in FIPS mode. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_THRESH</name>
							<description>This is the threshold size for the adaptive proportion health test running in bypass mode. This mode is active after reset for the first and only test run, or when this mode is programmed by firmware. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ADAPTP_LO_THRESHOLDS</name>
					<description>Adaptive proportion test low thresholds register</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>FIPS_THRESH</name>
							<description>This is the threshold size for the adaptive proportion health test. This value is used in FIPS mode. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is greater than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_THRESH</name>
							<description>This is the threshold size for the adaptive proportion health test running in bypass mode. This mode is active after reset for the first and only test run, or when this mode is programmed by firmware. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is greater than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BUCKET_THRESHOLDS</name>
					<description>Bucket test thresholds register</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>FIPS_THRESH</name>
							<description>This is the threshold size for the bucket health test. This value is used in FIPS mode. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_THRESH</name>
							<description>This is the threshold size for the bucket health test running in bypass mode. This mode is active after reset for the first and only test run, or when this mode is programmed by firmware. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MARKOV_HI_THRESHOLDS</name>
					<description>Markov test high thresholds register</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>FIPS_THRESH</name>
							<description>This is the threshold size for the Markov health test. This value is used in FIPS mode. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_THRESH</name>
							<description>This is the threshold size for the Markov health test running in bypass mode. This mode is active after reset for the first and only test run, or when this mode is programmed by firmware. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MARKOV_LO_THRESHOLDS</name>
					<description>Markov test low thresholds register</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>FIPS_THRESH</name>
							<description>This is the threshold size for the Markov health test. This value is used in FIPS mode. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is greater than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_THRESH</name>
							<description>This is the threshold size for the Markov health test running in bypass mode. This mode is active after reset for the first and only test run, or when this mode is programmed by firmware. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is greater than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXTHT_HI_THRESHOLDS</name>
					<description>External health test high thresholds register</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>FIPS_THRESH</name>
							<description>This is the threshold size for the external health test. This value is used in FIPS mode. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_THRESH</name>
							<description>This is the threshold size for the external health test running in bypass mode. This mode is active after reset for the first and only test run, or when this mode is programmed by firmware. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is less than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXTHT_LO_THRESHOLDS</name>
					<description>External health test low thresholds register</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>FIPS_THRESH</name>
							<description>This is the threshold size for the external health test. This value is used in FIPS mode. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is greater than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BYPASS_THRESH</name>
							<description>This is the threshold size for the external health test running in bypass mode. This mode is active after reset for the first and only test run, or when this mode is programmed by firmware. This register must be written before the module is enabled. Writing to this register will only update the register if the written value is greater than the current value of this register. A read from this register always reflects the current value.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REPCNT_HI_WATERMARKS</name>
					<description>Repetition count test high watermarks register</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>FIPS_WATERMARK</name>
							<description>High watermark value of the REPCNT test in FIPS mode.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYPASS_WATERMARK</name>
							<description>High watermark value of the REPCNT test in bypass mode.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REPCNTS_HI_WATERMARKS</name>
					<description>Repetition count symbol test high watermarks register</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>FIPS_WATERMARK</name>
							<description>High watermark value of the REPCNTS test in FIPS mode.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYPASS_WATERMARK</name>
							<description>High watermark value of the REPCNTS test in bypass mode.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ADAPTP_HI_WATERMARKS</name>
					<description>Adaptive proportion test high watermarks register</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>FIPS_WATERMARK</name>
							<description>High watermark value of the adaptive proportion test in FIPS mode.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYPASS_WATERMARK</name>
							<description>High watermark value of the adaptive proportion test in bypass mode.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ADAPTP_LO_WATERMARKS</name>
					<description>Adaptive proportion test low watermarks register</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>FIPS_WATERMARK</name>
							<description>Low watermark value of the adaptive proportion test in FIPS mode.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYPASS_WATERMARK</name>
							<description>Low watermark value of the adaptive proportion test in bypass mode.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXTHT_HI_WATERMARKS</name>
					<description>External health test high watermarks register</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>FIPS_WATERMARK</name>
							<description>High watermark value of the external health test in FIPS mode.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYPASS_WATERMARK</name>
							<description>High watermark value of the external health test in bypass mode.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXTHT_LO_WATERMARKS</name>
					<description>External health test low watermarks register</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>FIPS_WATERMARK</name>
							<description>Low watermark value of the external health test in FIPS mode.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYPASS_WATERMARK</name>
							<description>Low watermark value of the external health test in bypass mode.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BUCKET_HI_WATERMARKS</name>
					<description>Bucket test high watermarks register</description>
					<addressOffset>0xa0</addressOffset>
					<fields>
						<field>
							<name>FIPS_WATERMARK</name>
							<description>High watermark value of the bucket test in FIPS mode.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYPASS_WATERMARK</name>
							<description>High watermark value of the bucket test in bypass mode.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MARKOV_HI_WATERMARKS</name>
					<description>Markov test high watermarks register</description>
					<addressOffset>0xa4</addressOffset>
					<fields>
						<field>
							<name>FIPS_WATERMARK</name>
							<description>High watermark value of the Markov test in FIPS mode.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYPASS_WATERMARK</name>
							<description>High watermark value of the Markov test in bypass mode.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MARKOV_LO_WATERMARKS</name>
					<description>Markov test low watermarks register</description>
					<addressOffset>0xa8</addressOffset>
					<fields>
						<field>
							<name>FIPS_WATERMARK</name>
							<description>Low watermark value of the Markov test in FIPS mode.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BYPASS_WATERMARK</name>
							<description>Low watermark value of the Markov test in bypass mode.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REPCNT_TOTAL_FAILS</name>
					<description>Repetition count test failure counter register</description>
					<addressOffset>0xac</addressOffset>
					<fields>
						<field>
							<name>REPCNT_TOTAL_FAILS</name>
							<description>This register will hold a running count of test failures observed during normal operation. It will persist until cleared.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>REPCNTS_TOTAL_FAILS</name>
					<description>Repetition count symbol test failure counter register</description>
					<addressOffset>0xb0</addressOffset>
					<fields>
						<field>
							<name>REPCNTS_TOTAL_FAILS</name>
							<description>This register will hold a running count of test failures observed during normal operation. It will persist until cleared.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ADAPTP_HI_TOTAL_FAILS</name>
					<description>Adaptive proportion high test failure counter register</description>
					<addressOffset>0xb4</addressOffset>
					<fields>
						<field>
							<name>ADAPTP_HI_TOTAL_FAILS</name>
							<description>This register will hold a running count of test failures observed during normal operation. It will persist until cleared.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ADAPTP_LO_TOTAL_FAILS</name>
					<description>Adaptive proportion low test failure counter register</description>
					<addressOffset>0xb8</addressOffset>
					<fields>
						<field>
							<name>ADAPTP_LO_TOTAL_FAILS</name>
							<description>This register will hold a running count of test failures observed during normal operation. It will persist until cleared.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BUCKET_TOTAL_FAILS</name>
					<description>Bucket test failure counter register</description>
					<addressOffset>0xbc</addressOffset>
					<fields>
						<field>
							<name>BUCKET_TOTAL_FAILS</name>
							<description>This register will hold a running count of test failures observed during normal operation. It will persist until cleared.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MARKOV_HI_TOTAL_FAILS</name>
					<description>Markov high test failure counter register</description>
					<addressOffset>0xc0</addressOffset>
					<fields>
						<field>
							<name>MARKOV_HI_TOTAL_FAILS</name>
							<description>This register will hold a running count of test failures observed during normal operation. It will persist until cleared.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MARKOV_LO_TOTAL_FAILS</name>
					<description>Markov low test failure counter register</description>
					<addressOffset>0xc4</addressOffset>
					<fields>
						<field>
							<name>MARKOV_LO_TOTAL_FAILS</name>
							<description>This register will hold a running count of test failures observed during normal operation. It will persist until cleared.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXTHT_HI_TOTAL_FAILS</name>
					<description>External health test high threshold failure counter register</description>
					<addressOffset>0xc8</addressOffset>
					<fields>
						<field>
							<name>EXTHT_HI_TOTAL_FAILS</name>
							<description>This register will hold a running count of test failures observed during normal operation. It will persist until cleared.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXTHT_LO_TOTAL_FAILS</name>
					<description>External health test low threshold failure counter register</description>
					<addressOffset>0xcc</addressOffset>
					<fields>
						<field>
							<name>EXTHT_LO_TOTAL_FAILS</name>
							<description>This register will hold a running count of test failures observed during normal operation. It will persist until cleared.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_THRESHOLD</name>
					<description>Alert threshold register</description>
					<addressOffset>0xd0</addressOffset>
					<fields>
						<field>
							<name>ALERT_THRESHOLD</name>
							<description>This is the threshold size that will signal an alert when value is reached. A value of zero will disable alerts. The default value is 2.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ALERT_THRESHOLD_INV</name>
							<description>This should be set to the value above, but inverted.</description>
							<bitRange>[31:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_SUMMARY_FAIL_COUNTS</name>
					<description>Alert summary failure counts register</description>
					<addressOffset>0xd4</addressOffset>
					<fields>
						<field>
							<name>ANY_FAIL_COUNT</name>
							<description>This field will hold a running count of the total alert count, which is a sum of all of the other counters in the !!ALERT_FAIL_COUNTS register. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[15:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ALERT_FAIL_COUNTS</name>
					<description>Alert failure counts register</description>
					<addressOffset>0xd8</addressOffset>
					<fields>
						<field>
							<name>REPCNT_FAIL_COUNT</name>
							<description>This field will hold a running count of test failures that contribute to the total alert count. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ADAPTP_HI_FAIL_COUNT</name>
							<description>This field will hold a running count of test failures that contribute to the total alert count. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[11:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ADAPTP_LO_FAIL_COUNT</name>
							<description>This field will hold a running count of test failures that contribute to the total alert count. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[15:12]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>BUCKET_FAIL_COUNT</name>
							<description>This field will hold a running count of test failures that contribute to the total alert count. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[19:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>MARKOV_HI_FAIL_COUNT</name>
							<description>This field will hold a running count of test failures that contribute to the total alert count. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[23:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>MARKOV_LO_FAIL_COUNT</name>
							<description>This field will hold a running count of test failures that contribute to the total alert count. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[27:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>REPCNTS_FAIL_COUNT</name>
							<description>This field will hold a running count of test failures that contribute to the total alert count. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[31:28]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXTHT_FAIL_COUNTS</name>
					<description>External health test alert failure counts register</description>
					<addressOffset>0xdc</addressOffset>
					<fields>
						<field>
							<name>EXTHT_HI_FAIL_COUNT</name>
							<description>This field will hold a running count of test failures that contribute to the total alert count. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>EXTHT_LO_FAIL_COUNT</name>
							<description>This field will hold a running count of test failures that contribute to the total alert count. It will be reset after every passing test sequence unless in firmware override mode (extract and insert only). If an alert is signaled, this value will persist until it is cleared.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FW_OV_CONTROL</name>
					<description>Firmware override control register</description>
					<addressOffset>0xe0</addressOffset>
					<fields>
						<field>
							<name>FW_OV_MODE</name>
							<description>Setting this field to `kMultiBitBool4True` will put the entropy flow in firmware override mode.In this mode, firmware can monitor the post-health test entropy by readingthe observe FIFO (see !!FW_OV_RD_DATA).For this to work, the otp_en_entropy_src_fw_over input needs to be set to `kMultiBitBool8True`.Note that the post-health test entropy bits collected in the observe FIFO continue to flow through the hardware pipeline and may eventually reach the block hardware interface.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FW_OV_ENTROPY_INSERT</name>
							<description>Setting this field to `kMultiBitBool4True` allows firmware to extract entropy bits by reading the observe FIFO (see !!FW_OV_RD_DATA) and insert entropy bits into the entropy flow by writing the !!FW_OV_WR_DATA register.This is useful e.g. for performing additional health tests and/or firmware-based conditioning.For this to work, !!FW_OV_CONTROL.FW_OV_MODE needs to be set to `kMultiBitBool4True`.In addition, the otp_en_entropy_src_fw_over input needs to be set to `kMultiBitBool8True`.Firmware can use the hardware conditioning for the inserted entropy bits (see !!FW_OV_SHA3_START).Note that if the field is set to `kMultiBitBool4True`, post-health test entropy bits do NOT continue to flow through the hardware pipeline.Also, the !!FW_OV_CONTROL.FW_OV_MODE bit must be set.The observe FIFO will collect 2 kBit of contiguous entropy bits.Any entropy bits arriving after the observe FIFO is full are being discarded.Firmware has to read out the entire observe FIFO to restart entropy collection.Only entropy bits inserted by firmware by writing !!FW_OV_WR_DATA may eventually reach the block hardware interface.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FW_OV_SHA3_START</name>
					<description>Firmware override sha3 block start control register</description>
					<addressOffset>0xe4</addressOffset>
					<fields>
						<field>
							<name>FW_OV_INSERT_START</name>
							<description>Setting this field to `kMultiBitBool4True` will instruct the ENTROPY_SRC main state machine to start the SHA3 process and be ready to accept entropy data.This field should be set prior to writing the !!FW_OV_WR_DATA register.Once all data has been written, this field should be set to `kMultiBitBool4False`.Once that happened, the SHA3 block will finish processing and push the result into the esfinal FIFO.Note that clearing this bit to `kMultiBitBool4False` while there is still unprocessed entropy in !!FW_OV_WR_DATA will start the SHA3 engine before data can be added to the input message, and will also signal a recoverable alert in !!RECOV_ALERT_STS.ES_FW_OV_DISABLE_ALERT.To avoid this, check that !!FW_OV_WR_FIFO_FULL is clear before setting this field to `kMultiBitBool4False`.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FW_OV_WR_FIFO_FULL</name>
					<description>Firmware override FIFO write full status register</description>
					<addressOffset>0xe8</addressOffset>
					<fields>
						<field>
							<name>FW_OV_WR_FIFO_FULL</name>
							<description>&quot;When this bit is clear, writes to the FW_OV_WR_DATA register are allowed.If this bit is set, it is the equivalent to a FIFO full condition, and writesto the FW_OV_WR_DATA register must be delayed until this bit is reset.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FW_OV_RD_FIFO_OVERFLOW</name>
					<description>Firmware override observe FIFO overflow status</description>
					<addressOffset>0xec</addressOffset>
					<fields>
						<field>
							<name>FW_OV_RD_FIFO_OVERFLOW</name>
							<description>This bit is set by hardware whenever RNG data is lost due to an overflow conditionin the observe FIFO. The RNG data rate is slow enough that firmware should alwaysbe able to keep up. This register meanwhile provides an additional check to confirmthat bytes read from the !!FW_OV_RD_DATA register represent contiguous RNG samples.If an overflow event occurs, this bit must be cleared by software.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FW_OV_RD_DATA</name>
					<description>Firmware override observe FIFO read register</description>
					<addressOffset>0xf0</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>A read of this register pops and returns the top of the observe FIFO.For this to work, the !!FW_OV_CONTROL.FW_OV_MODE field needs to be set to `kMultiBitBool4True`In addition, the otp_en_entropy_src_fw_over input needs to be set to `kMultiBitBool8True`.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FW_OV_WR_DATA</name>
					<description>Firmware override FIFO write register</description>
					<addressOffset>0xf4</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>A write to this register will insert entropy back into the entropy source module flow.For this to work, both the !!FW_OV_CONTROL.FW_OV_MODE and !!FW_OV_CONTROL.FW_OV_ENTROPY_INSERT fields need to be set to `kMultiBitBool4True`.In addition, the otp_en_entropy_src_fw_over input needs to be set to `kMultiBitBool8True`.</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OBSERVE_FIFO_THRESH</name>
					<description>Observe FIFO threshold register</description>
					<addressOffset>0xf8</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>This field will set the threshold that the depth of the observe FIFOwill be compared with when setting the interrupt status bit.Note: a value of zero is reserved and not to be used.</description>
							<bitRange>[6:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>OBSERVE_FIFO_DEPTH</name>
					<description>Observe FIFO depth register</description>
					<addressOffset>0xfc</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>This field will hold the current depth of the observe FIFO.</description>
							<bitRange>[6:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DEBUG_STATUS</name>
					<description>Debug status register</description>
					<addressOffset>0x100</addressOffset>
					<fields>
						<field>
							<name>ENTROPY_FIFO_DEPTH</name>
							<description>This is the depth of the entropy source FIFO.</description>
							<bitRange>[2:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SHA3_FSM</name>
							<description>This is the SHA3 finite state machine current state.</description>
							<bitRange>[5:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SHA3_BLOCK_PR</name>
							<description>This is the SHA3 block processed signal current state.</description>
							<bitRange>[6:6]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SHA3_SQUEEZING</name>
							<description>This is the SHA3 squeezing signal current state.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SHA3_ABSORBED</name>
							<description>This is the SHA3 absorbed signal current state.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SHA3_ERR</name>
							<description>This is a logic-or of all of the SHA3 error signals.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>MAIN_SM_IDLE</name>
							<description>The entropy_src main state machine is in the idle state.</description>
							<bitRange>[16:16]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>MAIN_SM_BOOT_DONE</name>
							<description>The entropy_src main state machine is in the boot phase done state.</description>
							<bitRange>[17:17]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RECOV_ALERT_STS</name>
					<description>Recoverable alert status register</description>
					<addressOffset>0x104</addressOffset>
					<fields>
						<field>
							<name>FIPS_ENABLE_FIELD_ALERT</name>
							<description>This bit is set when the FIPS_ENABLE field in the !!CONF register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ENTROPY_DATA_REG_EN_FIELD_ALERT</name>
							<description>This bit is set when the ENTROPY_DATA_REG_ENABLE field in the !!CONF register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>MODULE_ENABLE_FIELD_ALERT</name>
							<description>This bit is set when the MODULE_ENABLE field in the !!MODULE_ENABLE register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>THRESHOLD_SCOPE_FIELD_ALERT</name>
							<description>This bit is set when the THRESHOLD_SCOPE field in the !!CONF register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RNG_BIT_ENABLE_FIELD_ALERT</name>
							<description>This bit is set when the RNG_BIT_ENABLE field in the !!CONF register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FW_OV_SHA3_START_FIELD_ALERT</name>
							<description>This bit is set when the FW_OV_SHA3_START field in the !!FW_OV_SHA3_START register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[7:7]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FW_OV_MODE_FIELD_ALERT</name>
							<description>This bit is set when the FW_OV_MODE field in the !!FW_OV_CONTROL register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FW_OV_ENTROPY_INSERT_FIELD_ALERT</name>
							<description>This bit is set when the FW_OV_ENTROPY_INSERT field in the !!FW_OV_CONTROL register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ES_ROUTE_FIELD_ALERT</name>
							<description>This bit is set when the ES_ROUTE field in the !!ENTROPY_CONTROL register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ES_TYPE_FIELD_ALERT</name>
							<description>This bit is set when the ES_TYPE field in the !!ENTROPY_CONTROL register is set to a value other than `kMultiBitBool4False` or `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[11:11]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ES_MAIN_SM_ALERT</name>
							<description>This bit is set when the main state machine detects a threshhold failure state.Writing a zero resets this status bit.</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ES_BUS_CMP_ALERT</name>
							<description>This bit is set when the interal entropy bus value is equal to the priorvalid value on the bus, indicating a possible attack.Writing a zero resets this status bit.</description>
							<bitRange>[13:13]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ES_THRESH_CFG_ALERT</name>
							<description>This bit is set when the !!ALERT_THRESHOLD register is not configured properly.The upper field must be the exact inverse of the lower field.Writing a zero resets this status bit.</description>
							<bitRange>[14:14]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ES_FW_OV_WR_ALERT</name>
							<description>This bit is set when the packer FIFO has been written but was full at the time,and in both FW_OV_MODE and FW_OV_ENTROPY_INSERT modes.This alert would normally be the result of not monitoring the !!FW_OV_WR_FIFO_FULLregister before each write to the !!FW_OV_WR_DATA register.Writing a zero resets this status bit.</description>
							<bitRange>[15:15]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>ES_FW_OV_DISABLE_ALERT</name>
							<description>This bit is set when !!FW_OV_SHA3_START has been set to `kMultiBitBool4False`, without waiting for the bypass packer FIFO to clear.The final entropy entry in the FIFO will not be included in the SHA3 digest.(Rather it will be added to the subsequent SHA3 digest.)To avoid this alert, monitor !!FW_OV_WR_FIFO_FULL before clearing !!FW_OV_SHA3_START.This alert only applies when both !!FW_OV_CONTROL.FW_OV_MODE and !!FW_OV_CONTROL.FW_OV_ENTROPY_INSERT are set to `kMultiBitBool4True`.Writing a zero resets this status bit.</description>
							<bitRange>[16:16]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE</name>
					<description>Hardware detection of error conditions status register</description>
					<addressOffset>0x108</addressOffset>
					<fields>
						<field>
							<name>SFIFO_ESRNG_ERR</name>
							<description>This bit will be set to one when an error has been detected for theesrng FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_OBSERVE_ERR</name>
							<description>This bit will be set to one when an error has been detected for theobserve FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_ESFINAL_ERR</name>
							<description>This bit will be set to one when an error has been detected for theesfinal FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).This bit will stay set until the next reset.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ES_ACK_SM_ERR</name>
							<description>This bit will be set to one when an illegal state has been detected for theES ack stage state machine. This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ES_MAIN_SM_ERR</name>
							<description>This bit will be set to one when an illegal state has been detected for theES main stage state machine. This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ES_CNTR_ERR</name>
							<description>This bit will be set to one when a hardened counter has detected an errorcondition. This error will signal a fatal alert, and alsoan interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SHA3_STATE_ERR</name>
							<description>This bit will be set to one when a SHA3 state error has been detected.This error will signal a fatal alert, and also an interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[23:23]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SHA3_RST_STORAGE_ERR</name>
							<description>This bit will be set to one when a SHA3_RST_STORAGE_ERR signal beingactive has been detected.This error will signal a fatal alert, and also an interrupt if enabled.This bit will stay set until the next reset.</description>
							<bitRange>[24:24]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FIFO_WRITE_ERR</name>
							<description>This bit will be set to one when any of the source bits (bits 0 through 1 of thisthis register) are asserted as a result of an error pulse generated fromany full FIFO that has been recieved a write pulse.This bit will stay set until the next reset.</description>
							<bitRange>[28:28]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FIFO_READ_ERR</name>
							<description>This bit will be set to one when any of the source bits (bits 0 through 1 of thisthis register) are asserted as a result of an error pulse generated fromany empty FIFO that has recieved a read pulse.This bit will stay set until the next reset.</description>
							<bitRange>[29:29]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FIFO_STATE_ERR</name>
							<description>This bit will be set to one when any of the source bits (bits 0 through 1 of thisthis register) are asserted as a result of an error pulse generated fromany FIFO where both the empty and full status bits are set.This bit will stay set until the next reset.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE_TEST</name>
					<description>Test error conditions register</description>
					<addressOffset>0x10c</addressOffset>
					<fields>
						<field>
							<name>ERR_CODE_TEST</name>
							<description>Setting this field will set the bit number for which an errorwill be forced in the hardware. This bit number is that same onefound in the !!ERR_CODE register. The action of writing thisregister will force an error pulse. The sole purpose of thisregister is to test that any error properly propagates to eitheran interrupt or an alert.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAIN_SM_STATE</name>
					<description>Main state machine state debug register</description>
					<addressOffset>0x110</addressOffset>
					<fields>
						<field>
							<name>MAIN_SM_STATE</name>
							<description>This is the state of the ENTROPY_SRC main state machine.See the RTL file `entropy_src_main_sm` for the meaning of the values.</description>
							<bitRange>[8:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>EDN0</name>
			<version>1.0.0</version>
			<description>Distributes random numbers produced by CSRNG to hardware blocks</description>
			<baseAddress>0x41170000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>EDN0 IRQ</name>
				<value>29</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>REGWEN</name>
					<description>Register write enable for all control registers</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When true, the CTRL can be written by software.When false, this field read-only. Defaults true, write zero to clear.Note that this needs to be cleared after initial configuration at boot in order tolock in the listed register settings.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL</name>
					<description>EDN control register</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>EDN_ENABLE</name>
							<description>Setting this field to kMultiBitBool4True enables the EDN module. The modules of theentropy complex may only be enabled and disabled in a specific order, seeProgrammers Guide for details.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BOOT_REQ_MODE</name>
							<description>Setting this field to kMultiBitBool4True will enable the feature where the EDN blockwill automatically send a boot-time request to the CSRNG application interface.The purpose of this feature is to request entropy as fast as possible after reset,and during chip boot-time.</description>
							<bitRange>[7:4]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>AUTO_REQ_MODE</name>
							<description>Setting this field to kMultiBitBool4True will enable the EDN block to automaticallysend another request to CSRNG application interface. It is assumed that a CSRNGinstantiate command will be issued using the !!SW_CMD_REQ register interface.When this command has an command ack returned from CSRNG, anew generate command will be send out again without software intervention. It isexpected that the generate command will be sent repeatedly so that a continuoussupply of entropy can be delivered to the endpoints. Reseed commands will be senton a programmable basic between generate commands.The !!GENERATE_CMD, !!RESEED_CMD, and !!MAX_NUM_REQS_BETWEEN_RESEEDS registers mustset up before the !!SW_CMD_REQ register command is issued.</description>
							<bitRange>[11:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CMD_FIFO_RST</name>
							<description>Setting this field to kMultiBitBool4True clears the two command FIFOs: theRESEED_CMD FIFO and the GENERATE_CMD FIFO. This field must beset to the reset state by software before any further commands can be issued tothese FIFOs.</description>
							<bitRange>[15:12]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BOOT_INS_CMD</name>
					<description>EDN boot instantiate command register</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>BOOT_INS_CMD</name>
							<description>This field is used as the value for Instantiate command at boot time.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>BOOT_GEN_CMD</name>
					<description>EDN boot generate command register</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>BOOT_GEN_CMD</name>
							<description>This field is used as the value for generate command at boot time.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_CMD_REQ</name>
					<description>EDN csrng app command request register</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>SW_CMD_REQ</name>
							<description>Any CSRNG action can be initiated by writing a CSRNG command to thisregister. The application interface must wait for the &quot;ack&quot; toreturn before issuing new commands. This interface is intendedto be controlled solely by software.If !!CTRL.AUTO_REQ_MODE is set, only the first instantiate command has anyeffect. After that command has been processed, writes to this registerregister will have no effect on operation.Note that CSRNG command format details can be foundin the CSRNG documentation.</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_CMD_STS</name>
					<description>EDN command status register</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>CMD_RDY</name>
							<description>This bit indicates when the command interface is ready to accept commands.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>CMD_STS</name>
							<description>This one bit field is the status code returned with the application command ack.It is updated each time a command ack is asserted on the CSRNG interface.0b0: Request completed successfully0b1: Request completed with an error</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RESEED_CMD</name>
					<description>EDN csrng reseed command register</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>RESEED_CMD</name>
							<description>Writing this register will fill a FIFO with up to 13 command words (32b words).This FIFO will be used to automatically send out a reseed command to the CSRNGapplication interface when in !!CTRL.AUTO_REQ_MODE. This command will be sent only afterthe MAX_NUM_REQS_BETWEEN_RESEEDS counter value has reached zero.If more than 13 entires are written to the FIFO, the design will automatically generatea fatal alert.Note that CSRNG command format details can be foundin the CSRNG documentation.</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>GENERATE_CMD</name>
					<description>EDN csrng generate command register</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>GENERATE_CMD</name>
							<description>Writing this register will fill a FIFO with up to 13 command words (32b words).This FIFO will be used to automatically send out a generate command to the CSRNGappl interface when in !!CTRL.AUTO_REQ_MODE. This command will be sent only afterreceiving a command ack from the previous command.If more than 13 entires are written to the FIFO, the design will automatically generatea fatal alert.Note that CSRNG command format details can be foundin the CSRNG documentation.</description>
							<bitRange>[31:0]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAX_NUM_REQS_BETWEEN_RESEEDS</name>
					<description>EDN maximum number of requests between reseeds register</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>MAX_NUM_REQS_BETWEEN_RESEEDS</name>
							<description>Setting this field will set the number of generate requests that can be madeto CSRNG before a reseed request is made. This value only has meaning when in!!CTRL.AUTO_REQ_MODE. This register supports a maximum of 2^32 requests between reseeds.This register will be used by a counter that counts down, triggering anautomatic reseed when it reaches zero.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RECOV_ALERT_STS</name>
					<description>Recoverable alert status register</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>EDN_ENABLE_FIELD_ALERT</name>
							<description>This bit is set when the EDN_ENABLE field is set to an illegal value,something other than kMultiBitBool4True or kMultiBitBool4False.Writing a zero resets this status bit.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>BOOT_REQ_MODE_FIELD_ALERT</name>
							<description>This bit is set when the BOOT_REQ_MODE field is set to an illegal value,something other than kMultiBitBool4True or kMultiBitBool4False.Writing a zero resets this status bit.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>AUTO_REQ_MODE_FIELD_ALERT</name>
							<description>This bit is set when the !!CTRL.AUTO_REQ_MODE field is set to an illegal value,something other than kMultiBitBool4True or kMultiBitBool4False.Writing a zero resets this status bit.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>CMD_FIFO_RST_FIELD_ALERT</name>
							<description>This bit is set when the CMD_FIFO_RST field is set to an illegal value,something other than kMultiBitBool4True or kMultiBitBool4False.Writing a zero resets this status bit.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>EDN_BUS_CMP_ALERT</name>
							<description>This bit is set when the interal entropy bus value is equal to the priorvalid value on the bus, indicating a possible attack.Writing a zero resets this status bit.</description>
							<bitRange>[12:12]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE</name>
					<description>Hardware detection of fatal error conditions status register</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>SFIFO_RESCMD_ERR</name>
							<description>This bit will be set to one when an error has been detected for thereseed command FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).When this bit is set, a fatal error condition will result.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_GENCMD_ERR</name>
							<description>This bit will be set to one when an error has been detected for thegenerate command FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).When this bit is set, a fatal error condition will result.This bit will stay set until the next reset.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SFIFO_OUTPUT_ERR</name>
							<description>This bit will be set to one when an error has been detected for theoutput FIFO. The type of error is reflected in the type statusbits (bits 28 through 30 of this register).When this bit is set, a fatal error condition will result.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>EDN_ACK_SM_ERR</name>
							<description>This bit will be set to one when an illegal state has been detected for theEDN ack stage state machine. This error will signal a fatal alert.This bit will stay set until the next reset.</description>
							<bitRange>[20:20]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>EDN_MAIN_SM_ERR</name>
							<description>This bit will be set to one when an illegal state has been detected for theEDN main stage state machine. This error will signal a fatal alert.This bit will stay set until the next reset.</description>
							<bitRange>[21:21]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>EDN_CNTR_ERR</name>
							<description>This bit will be set to one when a hardened counter has detected an errorcondition. This error will signal a fatal alert.This bit will stay set until the next reset.</description>
							<bitRange>[22:22]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FIFO_WRITE_ERR</name>
							<description>This bit will be set to one when any of the source bits (bits 0 through 1 of thisthis register) are asserted as a result of an error pulse generated fromany full FIFO that has been recieved a write pulse.This bit will stay set until the next reset.</description>
							<bitRange>[28:28]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FIFO_READ_ERR</name>
							<description>This bit will be set to one when any of the source bits (bits 0 through 1 of thisthis register) are asserted as a result of an error pulse generated fromany empty FIFO that has recieved a read pulse.This bit will stay set until the next reset.</description>
							<bitRange>[29:29]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>FIFO_STATE_ERR</name>
							<description>This bit will be set to one when any of the source bits (bits 0 through 1 of thisthis register) are asserted as a result of an error pulse generated fromany FIFO where both the empty and full status bits are set.This bit will stay set until the next reset.</description>
							<bitRange>[30:30]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_CODE_TEST</name>
					<description>Test error conditions register</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>ERR_CODE_TEST</name>
							<description>Setting this field will set the bit number for which an errorwill be forced in the hardware. This bit number is that same onefound in the !!ERR_CODE register. The action of writing thisregister will force an error pulse. The sole purpose of thisregister is to test that any error properly propagates to eitheran interrupt or an alert.</description>
							<bitRange>[4:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>MAIN_SM_STATE</name>
					<description>Main state machine state observation register</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>MAIN_SM_STATE</name>
							<description>This is the state of the EDN main state machine.See the RTL file `edn_main_sm` for the meaning of the values.</description>
							<bitRange>[8:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral derivedFrom="EDN0">
			<name>EDN1</name>
			<version>1.0.0</version>
			<description>Distributes random numbers produced by CSRNG to hardware blocks</description>
			<baseAddress>0x41180000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>EDN1 IRQ</name>
				<value>30</value>
			</interrupt>
		</peripheral>
		<peripheral>
			<name>SRAM_CTRL_MAIN</name>
			<version>1.0.0</version>
			<description>Interfacing on-chip SRAM blocks with system bus, supports lightweight scrambling, integrity and secure wipe</description>
			<baseAddress>0x411c0000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>SRAM_CTRL_MAIN IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>STATUS</name>
					<description>SRAM status register.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>BUS_INTEG_ERROR</name>
							<description>This bit is set to 1 if a fatal bus integrity fault is detected.This error triggers a fatal_error alert.This condition is terminal.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>INIT_ERROR</name>
							<description>This bit is set to 1 if a the initialization counter has reached an invalid state.This error triggers a fatal_error alert.This condition is terminal.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>ESCALATED</name>
							<description>Set to 1 if the sram controller has received an escalate request.If this is set to 1, the scrambling keys have been reset to the default valuesand all subsequent memory requests will be blocked.This condition is terminal.</description>
							<bitRange>[2:2]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SCR_KEY_VALID</name>
							<description>Set to 1 if a new scrambling key has been successfully obtained from OTP.Note that if this is set to 0, the SRAM contents are still scrambled, but adefault all-zero key and nonce are used to do so.</description>
							<bitRange>[3:3]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>SCR_KEY_SEED_VALID</name>
							<description>Set to 1 if the scrambling key has been derived from a valid key seed in OTP.If !!STATUS.SCR_KEY_VALID is set to 1, !!STATUS.SCR_KEY_SEED_VALID should be 1except for cases where the scrambling key seeds have not yet been provisioned toOTP. In such a case, the scrambling key is still ephemeral (i.e., it is derivedusing entropy from CSRNG), but a default all-zero value is used as the key seed.</description>
							<bitRange>[4:4]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>INIT_DONE</name>
							<description>Set to 1 if the hardware initialization triggered via !!CTRL.INIT has completed.</description>
							<bitRange>[5:5]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXEC_REGWEN</name>
					<description>Lock register for execution enable register.</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When cleared to zero, !!EXEC can not be written anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXEC</name>
					<description>Sram execution enable.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Write kMultiBitBool4True to this field to enable execution from SRAM.Note that this register only takes effect if the EN_SRAM_IFETCH switchin the OTP HW_CFG partition is set to kMultiBitBool8True. Otherwise executionfrom SRAM cannot be enabled via this register.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL_REGWEN</name>
					<description>Lock register for control register.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>Value</name>
							<description>When cleared to zero, !!CTRL can not be written anymore.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>CTRL</name>
					<description>SRAM ctrl register.</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>RENEW_SCR_KEY</name>
							<description>Write 1 to request a new scrambling key from OTP. After writing to this register, SRAM transactions willbe blocked until !!STATUS.SCR_KEY_VALID has been set to 1. If !!STATUS.SCR_KEY_VALID was already 1before triggering a key renewal, hardware will automatically clear that status bit such that softwarecan poll its status. Note that requesting a new scrambling key takes ~200 OTP cycles, which translatesto ~800 CPU cycles (OTP runs at 24MHz, CPU runs at 100MHz). Note that writing 1 to this register whilea key request is pending has no effect.</description>
							<bitRange>[0:0]</bitRange>
							<access>write-only</access>
						</field>
						<field>
							<name>INIT</name>
							<description>Write 1 to request memory init.The init mechanism uses an LFSR that is seeded with a part of the nonce supplied when requesting a scrambling key.Once seeded, the memory is initialized with pseudo-random data pulled from the LFSR.Note that !!CTRL.RENEW_SCR_KEY takes priority when writing 1 to both !!CTRL.RENEW_SCR_KEY and !!CTRL.INIT with the same write transaction.This means that the key request will complete first, followed by SRAM initialization.</description>
							<bitRange>[1:1]</bitRange>
							<access>write-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>ROM_CTRL</name>
			<version>1.0.0</version>
			<description>Interfaces scrambled boot ROM with system bus and KMAC for initial health check after reset</description>
			<baseAddress>0x411e0000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>ROM_CTRL IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>FATAL_ALERT_CAUSE</name>
					<description>The cause of a fatal alert.The bits of this register correspond to errors that can cause a fatalalert. Software can read these bits to see what went wrong. Once set,these bits cannot be cleared.</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>checker_error</name>
							<description>Set on a fatal error detected by the ROM checker.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>integrity_error</name>
							<description>Set on an integrity error from the register interface.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_0</name>
					<description>The digest computed from the contents of ROM</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>DIGEST_0</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_1</name>
					<description>The digest computed from the contents of ROM</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>DIGEST_1</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_2</name>
					<description>The digest computed from the contents of ROM</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>DIGEST_2</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_3</name>
					<description>The digest computed from the contents of ROM</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>DIGEST_3</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_4</name>
					<description>The digest computed from the contents of ROM</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>DIGEST_4</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_5</name>
					<description>The digest computed from the contents of ROM</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>DIGEST_5</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_6</name>
					<description>The digest computed from the contents of ROM</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>DIGEST_6</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DIGEST_7</name>
					<description>The digest computed from the contents of ROM</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>DIGEST_7</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXP_DIGEST_0</name>
					<description>The expected digest, stored in the top words of ROM</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>DIGEST_0</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXP_DIGEST_1</name>
					<description>The expected digest, stored in the top words of ROM</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>DIGEST_1</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXP_DIGEST_2</name>
					<description>The expected digest, stored in the top words of ROM</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>DIGEST_2</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXP_DIGEST_3</name>
					<description>The expected digest, stored in the top words of ROM</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>DIGEST_3</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXP_DIGEST_4</name>
					<description>The expected digest, stored in the top words of ROM</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>DIGEST_4</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXP_DIGEST_5</name>
					<description>The expected digest, stored in the top words of ROM</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>DIGEST_5</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXP_DIGEST_6</name>
					<description>The expected digest, stored in the top words of ROM</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>DIGEST_6</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>EXP_DIGEST_7</name>
					<description>The expected digest, stored in the top words of ROM</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>DIGEST_7</name>
							<description>32 bits of the digest</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
		<peripheral>
			<name>RV_CORE_IBEX</name>
			<version>1.0.0</version>
			<description>Dual-core lockstep 32-bit RISC-V processor running application and control software</description>
			<baseAddress>0x411f0000</baseAddress>
			<size>0x20</size>
			<interrupt>
				<name>RV_CORE_IBEX IRQ</name>
				<value>0</value>
			</interrupt>
			<addressBlock>
				<offset>0x0</offset>
				<size>0x1000</size>
				<usage>registers</usage>
			</addressBlock>
			<registers>
				<register>
					<name>SW_RECOV_ERR</name>
					<description>Software recoverable error</description>
					<addressOffset>0x40</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Software recoverable alert.When set to any value other than kMultiBitBool4False, a recoverable alert is sent.Once the alert is sent, the field is then reset to kMultiBitBool4False.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>SW_FATAL_ERR</name>
					<description>Software fatal error</description>
					<addressOffset>0x44</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Software fatal alert.When set to any value other than kMultiBitBool4False, a fatal alert is sent.Note, this field once cleared cannot be set and will continuously cause alert events.</description>
							<bitRange>[3:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IBUS_REGWEN_0</name>
					<description>Ibus address control regwen.</description>
					<addressOffset>0x48</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Ibus address controls write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IBUS_REGWEN_1</name>
					<description>Ibus address control regwen.</description>
					<addressOffset>0x4c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Ibus address controls write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IBUS_ADDR_EN_0</name>
					<description>Enable Ibus address matching</description>
					<addressOffset>0x50</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Enable ibus address matching.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IBUS_ADDR_EN_1</name>
					<description>Enable Ibus address matching</description>
					<addressOffset>0x54</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Enable ibus address matching.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IBUS_ADDR_MATCHING_0</name>
					<description>Matching region programming for ibus. The value programmed is done at power-of-2 alignment. For example, if the intended matching region is 0x8000_0000 to 0x8000_FFFF, the value programmed is 0x8000_7FFF. The value programmed can be determined from the translation granule. Assume the user wishes to translate a specific 64KB block to a different address: 64KB has a hex value of 0x10000. Subtract 1 from this value and then right shift by one to obtain 0x7FFF. This value is then logically OR'd with the upper address bits that would select which 64KB to translate. In this example, the user wishes to translate the 0x8000-th 64KB block. The value programmed is then 0x8000_7FFF. If the user were to translate the 0x8001-th 64KB block, the value programmed would be 0x8001_7FFF.</description>
					<addressOffset>0x58</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Matching region value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IBUS_ADDR_MATCHING_1</name>
					<description>Matching region programming for ibus. The value programmed is done at power-of-2 alignment. For example, if the intended matching region is 0x8000_0000 to 0x8000_FFFF, the value programmed is 0x8000_7FFF. The value programmed can be determined from the translation granule. Assume the user wishes to translate a specific 64KB block to a different address: 64KB has a hex value of 0x10000. Subtract 1 from this value and then right shift by one to obtain 0x7FFF. This value is then logically OR'd with the upper address bits that would select which 64KB to translate. In this example, the user wishes to translate the 0x8000-th 64KB block. The value programmed is then 0x8000_7FFF. If the user were to translate the 0x8001-th 64KB block, the value programmed would be 0x8001_7FFF.</description>
					<addressOffset>0x5c</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Matching region value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IBUS_REMAP_ADDR_0</name>
					<description>The remap address after a match has been made. The remap bits apply only to top portion of address bits not covered by the matching region. For example, if the translation region is 64KB, the remapped address applies only to the upper address bits that select which 64KB to be translated.</description>
					<addressOffset>0x60</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Remap addr value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>IBUS_REMAP_ADDR_1</name>
					<description>The remap address after a match has been made. The remap bits apply only to top portion of address bits not covered by the matching region. For example, if the translation region is 64KB, the remapped address applies only to the upper address bits that select which 64KB to be translated.</description>
					<addressOffset>0x64</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Remap addr value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DBUS_REGWEN_0</name>
					<description>Dbus address control regwen.</description>
					<addressOffset>0x68</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Ibus address controls write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DBUS_REGWEN_1</name>
					<description>Dbus address control regwen.</description>
					<addressOffset>0x6c</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Ibus address controls write enable. Once set to 0, it can longer be configured to 1</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DBUS_ADDR_EN_0</name>
					<description>Enable dbus address matching</description>
					<addressOffset>0x70</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Enable dbus address matching.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DBUS_ADDR_EN_1</name>
					<description>Enable dbus address matching</description>
					<addressOffset>0x74</addressOffset>
					<fields>
						<field>
							<name>EN</name>
							<description>Enable dbus address matching.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DBUS_ADDR_MATCHING_0</name>
					<description>See !!IBUS_ADDR_MATCHING_0 for detailed description.</description>
					<addressOffset>0x78</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Matching region value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DBUS_ADDR_MATCHING_1</name>
					<description>See !!IBUS_ADDR_MATCHING_0 for detailed description.</description>
					<addressOffset>0x7c</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Matching region value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DBUS_REMAP_ADDR_0</name>
					<description>See !!IBUS_REMAP_ADDR_0 for a detailed description.</description>
					<addressOffset>0x80</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Remap addr value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>DBUS_REMAP_ADDR_1</name>
					<description>See !!IBUS_REMAP_ADDR_0 for a detailed description.</description>
					<addressOffset>0x84</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>Remap addr value</description>
							<bitRange>[31:0]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>NMI_ENABLE</name>
					<description>Enable mask for NMI.Once an enable mask is set, it cannot be disabled.</description>
					<addressOffset>0x88</addressOffset>
					<fields>
						<field>
							<name>ALERT_EN</name>
							<description>Enable mask for alert NMI</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>WDOG_EN</name>
							<description>Enable mask for watchdog NMI</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>NMI_STATE</name>
					<description>Current NMI state</description>
					<addressOffset>0x8c</addressOffset>
					<fields>
						<field>
							<name>ALERT</name>
							<description>Current state for alert NMI</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>WDOG</name>
							<description>Current state for watchdog NMI</description>
							<bitRange>[1:1]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>ERR_STATUS</name>
					<description>error status</description>
					<addressOffset>0x90</addressOffset>
					<fields>
						<field>
							<name>REG_INTG_ERR</name>
							<description>rv_core_ibex_peri detected a register transmission integrity error</description>
							<bitRange>[0:0]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FATAL_INTG_ERR</name>
							<description>rv_core_ibex detected a response integrity error</description>
							<bitRange>[8:8]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>FATAL_CORE_ERR</name>
							<description>rv_core_ibex detected a fatal internal error(``alert_major_internal_o`` from Ibex seen)</description>
							<bitRange>[9:9]</bitRange>
							<access>read-write</access>
						</field>
						<field>
							<name>RECOV_CORE_ERR</name>
							<description>rv_core_ibex detected a recoverable internal error(``alert_minor`` from Ibex seen)</description>
							<bitRange>[10:10]</bitRange>
							<access>read-write</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RND_DATA</name>
					<description>Random data from EDN</description>
					<addressOffset>0x94</addressOffset>
					<fields>
						<field>
							<name>DATA</name>
							<description>Random bits taken from the EDN. !!RND_STATUS.RND_DATA_VALIDindicates if this data is valid. When valid, reading from thisregister invalidates the data and requests new data from the EDN.The register becomes valid again when the EDN provides new data.When invalid the register value will read as 0x0 with an EDNrequest for new data pending. Upon reset the data will be invalidwith a new EDN request pending.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>RND_STATUS</name>
					<description>Status of random data in !!RND_DATA</description>
					<addressOffset>0x98</addressOffset>
					<fields>
						<field>
							<name>RND_DATA_VALID</name>
							<description>When set, the data in !!RND_DATA is valid. When clear an EDNrequest for new data for !!RND_DATA is pending.</description>
							<bitRange>[0:0]</bitRange>
							<access>read-only</access>
						</field>
						<field>
							<name>RND_DATA_FIPS</name>
							<description>When !!RND_STATUS.RND_DATA_VALID is 1, this bit indicates whether!!RND_DATA is fips quality.When !!RND_STATUS.RND_DATA_VALID is 0, this bit has no meaning.</description>
							<bitRange>[1:1]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
				<register>
					<name>FPGA_INFO</name>
					<description>FPGA build timestamp info.This register only contains valid data for fpga, for all other variants it is simply 0.</description>
					<addressOffset>0x9c</addressOffset>
					<fields>
						<field>
							<name>VAL</name>
							<description>FPGA build timestamp information.</description>
							<bitRange>[31:0]</bitRange>
							<access>read-only</access>
						</field>
					</fields>
				</register>
			</registers>
		</peripheral>
	</peripherals>
</device>
